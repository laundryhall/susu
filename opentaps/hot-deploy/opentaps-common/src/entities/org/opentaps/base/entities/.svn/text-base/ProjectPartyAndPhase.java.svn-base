package org.opentaps.base.entities;

/*
 * Copyright (c) Open Source Strategies, Inc.
 *
 * Opentaps is free software: you can redistribute it and/or modify it
 * under the terms of the GNU Affero General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Opentaps is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with Opentaps.  If not, see <http://www.gnu.org/licenses/>.
 */

// DO NOT EDIT THIS FILE!  THIS IS AUTO GENERATED AND WILL GET WRITTEN OVER PERIODICALLY WHEN THE DATA MODEL CHANGES
// EXTEND THIS CLASS INSTEAD.

import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;

import javolution.util.FastMap;

import org.opentaps.foundation.entity.Entity;
import org.opentaps.foundation.entity.EntityFieldInterface;
import org.opentaps.foundation.repository.RepositoryException;
import org.opentaps.foundation.repository.RepositoryInterface;
import javax.persistence.*;
import org.hibernate.search.annotations.*;
import java.lang.String;
import java.sql.Timestamp;

/**
 * Auto generated base entity ProjectPartyAndPhase.
 */
@javax.persistence.Entity
@NamedNativeQuery(name="selectProjectPartyAndPhases", query="SELECT WEP.WORK_EFFORT_ID AS \"workEffortId\",WEP.WORK_EFFORT_NAME AS \"workEffortName\",WEPH.WORK_EFFORT_ID AS \"workEffortId\",WEPH.WORK_EFFORT_NAME AS \"workEffortName\",WEPA.PARTY_ID AS \"partyId\",WEPA.ROLE_TYPE_ID AS \"roleTypeId\",WEPA.FROM_DATE AS \"fromDate\",WEPA.THRU_DATE AS \"thruDate\",WEPA.ASSIGNED_BY_USER_LOGIN_ID AS \"assignedByUserLoginId\",WEPA.STATUS_ID AS \"statusId\",WEPA.STATUS_DATE_TIME AS \"statusDateTime\",WEPA.EXPECTATION_ENUM_ID AS \"expectationEnumId\",WEPA.DELEGATE_REASON_ENUM_ID AS \"delegateReasonEnumId\",WEPA.COMMENTS AS \"comments\",WEPA.MUST_RSVP AS \"mustRsvp\",WEPA.AVAILABILITY_STATUS_ID AS \"availabilityStatusId\" FROM WORK_EFFORT_PARTY_ASSIGNMENT WEPA INNER JOIN WORK_EFFORT WEP ON WEPA.WORK_EFFORT_ID = WEP.WORK_EFFORT_ID INNER JOIN WORK_EFFORT WEPH ON WEP.WORK_EFFORT_ID = WEPH.WORK_EFFORT_PARENT_ID", resultSetMapping="ProjectPartyAndPhaseMapping")
@SqlResultSetMapping(name="ProjectPartyAndPhaseMapping", entities={
@EntityResult(entityClass=ProjectPartyAndPhase.class, fields = {
@FieldResult(name="projectId", column="projectId")
,@FieldResult(name="projectName", column="projectName")
,@FieldResult(name="phaseId", column="phaseId")
,@FieldResult(name="phaseName", column="phaseName")
,@FieldResult(name="partyId", column="partyId")
,@FieldResult(name="roleTypeId", column="roleTypeId")
,@FieldResult(name="fromDate", column="fromDate")
,@FieldResult(name="thruDate", column="thruDate")
,@FieldResult(name="assignedByUserLoginId", column="assignedByUserLoginId")
,@FieldResult(name="statusId", column="statusId")
,@FieldResult(name="statusDateTime", column="statusDateTime")
,@FieldResult(name="expectationEnumId", column="expectationEnumId")
,@FieldResult(name="delegateReasonEnumId", column="delegateReasonEnumId")
,@FieldResult(name="comments", column="comments")
,@FieldResult(name="mustRsvp", column="mustRsvp")
,@FieldResult(name="availabilityStatusId", column="availabilityStatusId")
})})
@org.hibernate.annotations.Entity(mutable = false)
@org.hibernate.annotations.AccessType("field")
public class ProjectPartyAndPhase extends Entity {
static {
java.util.Map<String, String> fields = new java.util.HashMap<String, String>();
        fields.put("projectId", "WEP.WORK_EFFORT_ID");
        fields.put("projectName", "WEP.WORK_EFFORT_NAME");
        fields.put("phaseId", "WEPH.WORK_EFFORT_ID");
        fields.put("phaseName", "WEPH.WORK_EFFORT_NAME");
        fields.put("partyId", "WEPA.PARTY_ID");
        fields.put("roleTypeId", "WEPA.ROLE_TYPE_ID");
        fields.put("fromDate", "WEPA.FROM_DATE");
        fields.put("thruDate", "WEPA.THRU_DATE");
        fields.put("assignedByUserLoginId", "WEPA.ASSIGNED_BY_USER_LOGIN_ID");
        fields.put("statusId", "WEPA.STATUS_ID");
        fields.put("statusDateTime", "WEPA.STATUS_DATE_TIME");
        fields.put("expectationEnumId", "WEPA.EXPECTATION_ENUM_ID");
        fields.put("delegateReasonEnumId", "WEPA.DELEGATE_REASON_ENUM_ID");
        fields.put("comments", "WEPA.COMMENTS");
        fields.put("mustRsvp", "WEPA.MUST_RSVP");
        fields.put("availabilityStatusId", "WEPA.AVAILABILITY_STATUS_ID");
fieldMapColumns.put("ProjectPartyAndPhase", fields);
}
  public static enum Fields implements EntityFieldInterface<ProjectPartyAndPhase> {
    projectId("projectId"),
    projectName("projectName"),
    phaseId("phaseId"),
    phaseName("phaseName"),
    partyId("partyId"),
    roleTypeId("roleTypeId"),
    fromDate("fromDate"),
    thruDate("thruDate"),
    assignedByUserLoginId("assignedByUserLoginId"),
    statusId("statusId"),
    statusDateTime("statusDateTime"),
    expectationEnumId("expectationEnumId"),
    delegateReasonEnumId("delegateReasonEnumId"),
    comments("comments"),
    mustRsvp("mustRsvp"),
    availabilityStatusId("availabilityStatusId");
    private final String fieldName;
    private Fields(String name) { fieldName = name; }
    /** {@inheritDoc} */
    public String getName() { return fieldName; }
    /** {@inheritDoc} */
    public String asc() { return fieldName + " ASC"; }
    /** {@inheritDoc} */
    public String desc() { return fieldName + " DESC"; }
  }

    
   private String projectId;
    
   private String projectName;
    
   private String phaseId;
    
   private String phaseName;
    @Id
   private String partyId;
    
   private String roleTypeId;
    
   private Timestamp fromDate;
    
   private Timestamp thruDate;
    
   private String assignedByUserLoginId;
    
   private String statusId;
    
   private Timestamp statusDateTime;
    
   private String expectationEnumId;
    
   private String delegateReasonEnumId;
    
   private String comments;
    
   private String mustRsvp;
    
   private String availabilityStatusId;

  /**
   * Default constructor.
   */
  public ProjectPartyAndPhase() {
      super();
      this.baseEntityName = "ProjectPartyAndPhase";
      this.isView = true;
      
      this.primaryKeyNames = new ArrayList<String>();
      this.primaryKeyNames.add("projectId");this.primaryKeyNames.add("phaseId");this.primaryKeyNames.add("partyId");this.primaryKeyNames.add("roleTypeId");this.primaryKeyNames.add("fromDate");
      this.allFieldsNames = new ArrayList<String>();
      this.allFieldsNames.add("projectId");this.allFieldsNames.add("projectName");this.allFieldsNames.add("phaseId");this.allFieldsNames.add("phaseName");this.allFieldsNames.add("partyId");this.allFieldsNames.add("roleTypeId");this.allFieldsNames.add("fromDate");this.allFieldsNames.add("thruDate");this.allFieldsNames.add("assignedByUserLoginId");this.allFieldsNames.add("statusId");this.allFieldsNames.add("statusDateTime");this.allFieldsNames.add("expectationEnumId");this.allFieldsNames.add("delegateReasonEnumId");this.allFieldsNames.add("comments");this.allFieldsNames.add("mustRsvp");this.allFieldsNames.add("availabilityStatusId");
      this.nonPrimaryKeyNames = new ArrayList<String>();
      this.nonPrimaryKeyNames.addAll(allFieldsNames);
      this.nonPrimaryKeyNames.removeAll(primaryKeyNames);
  }

  /**
   * Constructor with a repository.
   * @param repository a <code>RepositoryInterface</code> value
   */
  public ProjectPartyAndPhase(RepositoryInterface repository) {
      this();
      initRepository(repository);
  }

    /**
     * This is a view-entity, so the setter methods will be private to this class and for use in its fromMap constructor only
     */
    /**
     * Auto generated value setter.
     * @param projectId the projectId to set
     */
    public void setProjectId(String projectId) {
        this.projectId = projectId;
    }
    /**
     * Auto generated value setter.
     * @param projectName the projectName to set
     */
    public void setProjectName(String projectName) {
        this.projectName = projectName;
    }
    /**
     * Auto generated value setter.
     * @param phaseId the phaseId to set
     */
    public void setPhaseId(String phaseId) {
        this.phaseId = phaseId;
    }
    /**
     * Auto generated value setter.
     * @param phaseName the phaseName to set
     */
    public void setPhaseName(String phaseName) {
        this.phaseName = phaseName;
    }
    /**
     * Auto generated value setter.
     * @param partyId the partyId to set
     */
    public void setPartyId(String partyId) {
        this.partyId = partyId;
    }
    /**
     * Auto generated value setter.
     * @param roleTypeId the roleTypeId to set
     */
    public void setRoleTypeId(String roleTypeId) {
        this.roleTypeId = roleTypeId;
    }
    /**
     * Auto generated value setter.
     * @param fromDate the fromDate to set
     */
    public void setFromDate(Timestamp fromDate) {
        this.fromDate = fromDate;
    }
    /**
     * Auto generated value setter.
     * @param thruDate the thruDate to set
     */
    public void setThruDate(Timestamp thruDate) {
        this.thruDate = thruDate;
    }
    /**
     * Auto generated value setter.
     * @param assignedByUserLoginId the assignedByUserLoginId to set
     */
    public void setAssignedByUserLoginId(String assignedByUserLoginId) {
        this.assignedByUserLoginId = assignedByUserLoginId;
    }
    /**
     * Auto generated value setter.
     * @param statusId the statusId to set
     */
    public void setStatusId(String statusId) {
        this.statusId = statusId;
    }
    /**
     * Auto generated value setter.
     * @param statusDateTime the statusDateTime to set
     */
    public void setStatusDateTime(Timestamp statusDateTime) {
        this.statusDateTime = statusDateTime;
    }
    /**
     * Auto generated value setter.
     * @param expectationEnumId the expectationEnumId to set
     */
    public void setExpectationEnumId(String expectationEnumId) {
        this.expectationEnumId = expectationEnumId;
    }
    /**
     * Auto generated value setter.
     * @param delegateReasonEnumId the delegateReasonEnumId to set
     */
    public void setDelegateReasonEnumId(String delegateReasonEnumId) {
        this.delegateReasonEnumId = delegateReasonEnumId;
    }
    /**
     * Auto generated value setter.
     * @param comments the comments to set
     */
    public void setComments(String comments) {
        this.comments = comments;
    }
    /**
     * Auto generated value setter.
     * @param mustRsvp the mustRsvp to set
     */
    public void setMustRsvp(String mustRsvp) {
        this.mustRsvp = mustRsvp;
    }
    /**
     * Auto generated value setter.
     * @param availabilityStatusId the availabilityStatusId to set
     */
    public void setAvailabilityStatusId(String availabilityStatusId) {
        this.availabilityStatusId = availabilityStatusId;
    }

    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getProjectId() {
        return this.projectId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getProjectName() {
        return this.projectName;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPhaseId() {
        return this.phaseId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPhaseName() {
        return this.phaseName;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPartyId() {
        return this.partyId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getRoleTypeId() {
        return this.roleTypeId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getFromDate() {
        return this.fromDate;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getThruDate() {
        return this.thruDate;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getAssignedByUserLoginId() {
        return this.assignedByUserLoginId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getStatusId() {
        return this.statusId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getStatusDateTime() {
        return this.statusDateTime;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getExpectationEnumId() {
        return this.expectationEnumId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getDelegateReasonEnumId() {
        return this.delegateReasonEnumId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getComments() {
        return this.comments;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getMustRsvp() {
        return this.mustRsvp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getAvailabilityStatusId() {
        return this.availabilityStatusId;
    }




    /** {@inheritDoc} */
    @Override
    public void fromMap(Map<String, Object> mapValue) {
        preInit();
        setProjectId((String) mapValue.get("projectId"));
        setProjectName((String) mapValue.get("projectName"));
        setPhaseId((String) mapValue.get("phaseId"));
        setPhaseName((String) mapValue.get("phaseName"));
        setPartyId((String) mapValue.get("partyId"));
        setRoleTypeId((String) mapValue.get("roleTypeId"));
        setFromDate((Timestamp) mapValue.get("fromDate"));
        setThruDate((Timestamp) mapValue.get("thruDate"));
        setAssignedByUserLoginId((String) mapValue.get("assignedByUserLoginId"));
        setStatusId((String) mapValue.get("statusId"));
        setStatusDateTime((Timestamp) mapValue.get("statusDateTime"));
        setExpectationEnumId((String) mapValue.get("expectationEnumId"));
        setDelegateReasonEnumId((String) mapValue.get("delegateReasonEnumId"));
        setComments((String) mapValue.get("comments"));
        setMustRsvp((String) mapValue.get("mustRsvp"));
        setAvailabilityStatusId((String) mapValue.get("availabilityStatusId"));
        postInit();
    }

    /** {@inheritDoc} */
    @Override
    public Map<String, Object> toMap() {
        Map<String, Object> mapValue = new FastMap<String, Object>();
        mapValue.put("projectId", getProjectId());
        mapValue.put("projectName", getProjectName());
        mapValue.put("phaseId", getPhaseId());
        mapValue.put("phaseName", getPhaseName());
        mapValue.put("partyId", getPartyId());
        mapValue.put("roleTypeId", getRoleTypeId());
        mapValue.put("fromDate", getFromDate());
        mapValue.put("thruDate", getThruDate());
        mapValue.put("assignedByUserLoginId", getAssignedByUserLoginId());
        mapValue.put("statusId", getStatusId());
        mapValue.put("statusDateTime", getStatusDateTime());
        mapValue.put("expectationEnumId", getExpectationEnumId());
        mapValue.put("delegateReasonEnumId", getDelegateReasonEnumId());
        mapValue.put("comments", getComments());
        mapValue.put("mustRsvp", getMustRsvp());
        mapValue.put("availabilityStatusId", getAvailabilityStatusId());
        return mapValue;
    }


}
