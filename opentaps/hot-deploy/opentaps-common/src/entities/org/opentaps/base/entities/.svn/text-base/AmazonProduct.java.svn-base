package org.opentaps.base.entities;

/*
 * Copyright (c) Open Source Strategies, Inc.
 *
 * Opentaps is free software: you can redistribute it and/or modify it
 * under the terms of the GNU Affero General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Opentaps is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with Opentaps.  If not, see <http://www.gnu.org/licenses/>.
 */

// DO NOT EDIT THIS FILE!  THIS IS AUTO GENERATED AND WILL GET WRITTEN OVER PERIODICALLY WHEN THE DATA MODEL CHANGES
// EXTEND THIS CLASS INSTEAD.

import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;

import javolution.util.FastMap;

import org.opentaps.foundation.entity.Entity;
import org.opentaps.foundation.entity.EntityFieldInterface;
import org.opentaps.foundation.repository.RepositoryException;
import org.opentaps.foundation.repository.RepositoryInterface;
import javax.persistence.*;
import org.hibernate.search.annotations.*;
import java.lang.Long;
import java.lang.String;
import java.sql.Timestamp;

/**
 * Auto generated base entity AmazonProduct.
 */
@javax.persistence.Entity
@Table(name="AMAZON_PRODUCT")
public class AmazonProduct extends Entity {
static {
java.util.Map<String, String> fields = new java.util.HashMap<String, String>();
        fields.put("productId", "PRODUCT_ID");
        fields.put("statusId", "STATUS_ID");
        fields.put("productTaxCode", "PRODUCT_TAX_CODE");
        fields.put("releaseDate", "RELEASE_DATE");
        fields.put("itemTypeId", "ITEM_TYPE_ID");
        fields.put("nodeId", "NODE_ID");
        fields.put("priority", "PRIORITY");
        fields.put("browseExclusion", "BROWSE_EXCLUSION");
        fields.put("recommendationExclusion", "RECOMMENDATION_EXCLUSION");
        fields.put("tier", "TIER");
        fields.put("purchasingCategory", "PURCHASING_CATEGORY");
        fields.put("purchasingSubCategory", "PURCHASING_SUB_CATEGORY");
        fields.put("packagingType", "PACKAGING_TYPE");
        fields.put("underlyingAvailability", "UNDERLYING_AVAILABILITY");
        fields.put("replenishmentCategory", "REPLENISHMENT_CATEGORY");
        fields.put("dropShipStatus", "DROP_SHIP_STATUS");
        fields.put("outOfStockWebsiteMessage", "OUT_OF_STOCK_WEBSITE_MESSAGE");
        fields.put("registeredParameter", "REGISTERED_PARAMETER");
        fields.put("processingDocumentId", "PROCESSING_DOCUMENT_ID");
        fields.put("postTimestamp", "POST_TIMESTAMP");
        fields.put("postErrorMessage", "POST_ERROR_MESSAGE");
        fields.put("postFailures", "POST_FAILURES");
        fields.put("ackStatusId", "ACK_STATUS_ID");
        fields.put("acknowledgeTimestamp", "ACKNOWLEDGE_TIMESTAMP");
        fields.put("acknowledgeErrorMessage", "ACKNOWLEDGE_ERROR_MESSAGE");
        fields.put("acknowledgeMessageId", "ACKNOWLEDGE_MESSAGE_ID");
        fields.put("lastUpdatedStamp", "LAST_UPDATED_STAMP");
        fields.put("lastUpdatedTxStamp", "LAST_UPDATED_TX_STAMP");
        fields.put("createdStamp", "CREATED_STAMP");
        fields.put("createdTxStamp", "CREATED_TX_STAMP");
fieldMapColumns.put("AmazonProduct", fields);
}
  public static enum Fields implements EntityFieldInterface<AmazonProduct> {
    productId("productId"),
    statusId("statusId"),
    productTaxCode("productTaxCode"),
    releaseDate("releaseDate"),
    itemTypeId("itemTypeId"),
    nodeId("nodeId"),
    priority("priority"),
    browseExclusion("browseExclusion"),
    recommendationExclusion("recommendationExclusion"),
    tier("tier"),
    purchasingCategory("purchasingCategory"),
    purchasingSubCategory("purchasingSubCategory"),
    packagingType("packagingType"),
    underlyingAvailability("underlyingAvailability"),
    replenishmentCategory("replenishmentCategory"),
    dropShipStatus("dropShipStatus"),
    outOfStockWebsiteMessage("outOfStockWebsiteMessage"),
    registeredParameter("registeredParameter"),
    processingDocumentId("processingDocumentId"),
    postTimestamp("postTimestamp"),
    postErrorMessage("postErrorMessage"),
    postFailures("postFailures"),
    ackStatusId("ackStatusId"),
    acknowledgeTimestamp("acknowledgeTimestamp"),
    acknowledgeErrorMessage("acknowledgeErrorMessage"),
    acknowledgeMessageId("acknowledgeMessageId"),
    lastUpdatedStamp("lastUpdatedStamp"),
    lastUpdatedTxStamp("lastUpdatedTxStamp"),
    createdStamp("createdStamp"),
    createdTxStamp("createdTxStamp");
    private final String fieldName;
    private Fields(String name) { fieldName = name; }
    /** {@inheritDoc} */
    public String getName() { return fieldName; }
    /** {@inheritDoc} */
    public String asc() { return fieldName + " ASC"; }
    /** {@inheritDoc} */
    public String desc() { return fieldName + " DESC"; }
  }

   @org.hibernate.annotations.GenericGenerator(name="AmazonProduct_GEN",  strategy="org.opentaps.foundation.entity.hibernate.OpentapsIdentifierGenerator")
   @GeneratedValue(generator="AmazonProduct_GEN")
   @Id
   @Column(name="PRODUCT_ID")
   private String productId;
   @Column(name="STATUS_ID")
   private String statusId;
   @Column(name="PRODUCT_TAX_CODE")
   private String productTaxCode;
   @Column(name="RELEASE_DATE")
   private Timestamp releaseDate;
   @Column(name="ITEM_TYPE_ID")
   private String itemTypeId;
   @Column(name="NODE_ID")
   private String nodeId;
   @Column(name="PRIORITY")
   private Long priority;
   @Column(name="BROWSE_EXCLUSION")
   private String browseExclusion;
   @Column(name="RECOMMENDATION_EXCLUSION")
   private String recommendationExclusion;
   @Column(name="TIER")
   private Long tier;
   @Column(name="PURCHASING_CATEGORY")
   private String purchasingCategory;
   @Column(name="PURCHASING_SUB_CATEGORY")
   private String purchasingSubCategory;
   @Column(name="PACKAGING_TYPE")
   private String packagingType;
   @Column(name="UNDERLYING_AVAILABILITY")
   private String underlyingAvailability;
   @Column(name="REPLENISHMENT_CATEGORY")
   private String replenishmentCategory;
   @Column(name="DROP_SHIP_STATUS")
   private String dropShipStatus;
   @Column(name="OUT_OF_STOCK_WEBSITE_MESSAGE")
   private String outOfStockWebsiteMessage;
   @Column(name="REGISTERED_PARAMETER")
   private String registeredParameter;
   @Column(name="PROCESSING_DOCUMENT_ID")
   private Long processingDocumentId;
   @Column(name="POST_TIMESTAMP")
   private Timestamp postTimestamp;
   @Column(name="POST_ERROR_MESSAGE")
   private String postErrorMessage;
   @Column(name="POST_FAILURES")
   private Long postFailures;
   @Column(name="ACK_STATUS_ID")
   private String ackStatusId;
   @Column(name="ACKNOWLEDGE_TIMESTAMP")
   private Timestamp acknowledgeTimestamp;
   @Column(name="ACKNOWLEDGE_ERROR_MESSAGE")
   private String acknowledgeErrorMessage;
   @Column(name="ACKNOWLEDGE_MESSAGE_ID")
   private String acknowledgeMessageId;
   @Column(name="LAST_UPDATED_STAMP")
   private Timestamp lastUpdatedStamp;
   @Column(name="LAST_UPDATED_TX_STAMP")
   private Timestamp lastUpdatedTxStamp;
   @Column(name="CREATED_STAMP")
   private Timestamp createdStamp;
   @Column(name="CREATED_TX_STAMP")
   private Timestamp createdTxStamp;
   @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="PRODUCT_ID", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private Product product = null;
   private transient List<GoodIdentification> goodIdentifications = null;
   @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="STATUS_ID", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private StatusItem statusItem = null;
   @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="NODE_ID", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private AmazonProductBrowseNode amazonProductBrowseNode = null;
   @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="ITEM_TYPE_ID", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private AmazonProductItemType amazonProductItemType = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="amazonProduct", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="PRODUCT_ID")
   
   private List<AmazonOtherItemAttrValue> amazonOtherItemAttrValues = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="amazonProduct", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="PRODUCT_ID")
   
   private List<AmazonProductBulletPoint> amazonProductBulletPoints = null;
   @OneToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="PRODUCT_ID", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private AmazonProductImage amazonProductImage = null;
   @OneToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="PRODUCT_ID", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private AmazonProductInventory amazonProductInventory = null;
   @OneToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="PRODUCT_ID", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private AmazonProductPrice amazonProductPrice = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="amazonProduct", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="PRODUCT_ID")
   
   private List<AmazonProductSearchTerms> amazonProductSearchTermses = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="amazonProduct", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="PRODUCT_ID")
   
   private List<AmazonTargetAudienceValue> amazonTargetAudienceValues = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="amazonProduct", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="PRODUCT_ID")
   
   private List<AmazonUsedForValue> amazonUsedForValues = null;

  /**
   * Default constructor.
   */
  public AmazonProduct() {
      super();
      this.baseEntityName = "AmazonProduct";
      this.isView = false;
      
      this.primaryKeyNames = new ArrayList<String>();
      this.primaryKeyNames.add("productId");
      this.allFieldsNames = new ArrayList<String>();
      this.allFieldsNames.add("productId");this.allFieldsNames.add("statusId");this.allFieldsNames.add("productTaxCode");this.allFieldsNames.add("releaseDate");this.allFieldsNames.add("itemTypeId");this.allFieldsNames.add("nodeId");this.allFieldsNames.add("priority");this.allFieldsNames.add("browseExclusion");this.allFieldsNames.add("recommendationExclusion");this.allFieldsNames.add("tier");this.allFieldsNames.add("purchasingCategory");this.allFieldsNames.add("purchasingSubCategory");this.allFieldsNames.add("packagingType");this.allFieldsNames.add("underlyingAvailability");this.allFieldsNames.add("replenishmentCategory");this.allFieldsNames.add("dropShipStatus");this.allFieldsNames.add("outOfStockWebsiteMessage");this.allFieldsNames.add("registeredParameter");this.allFieldsNames.add("processingDocumentId");this.allFieldsNames.add("postTimestamp");this.allFieldsNames.add("postErrorMessage");this.allFieldsNames.add("postFailures");this.allFieldsNames.add("ackStatusId");this.allFieldsNames.add("acknowledgeTimestamp");this.allFieldsNames.add("acknowledgeErrorMessage");this.allFieldsNames.add("acknowledgeMessageId");this.allFieldsNames.add("lastUpdatedStamp");this.allFieldsNames.add("lastUpdatedTxStamp");this.allFieldsNames.add("createdStamp");this.allFieldsNames.add("createdTxStamp");
      this.nonPrimaryKeyNames = new ArrayList<String>();
      this.nonPrimaryKeyNames.addAll(allFieldsNames);
      this.nonPrimaryKeyNames.removeAll(primaryKeyNames);
  }

  /**
   * Constructor with a repository.
   * @param repository a <code>RepositoryInterface</code> value
   */
  public AmazonProduct(RepositoryInterface repository) {
      this();
      initRepository(repository);
  }

    /**
     * Auto generated value setter.
     * @param productId the productId to set
     */
    public void setProductId(String productId) {
        this.productId = productId;
    }
    /**
     * Auto generated value setter.
     * @param statusId the statusId to set
     */
    public void setStatusId(String statusId) {
        this.statusId = statusId;
    }
    /**
     * Auto generated value setter.
     * @param productTaxCode the productTaxCode to set
     */
    public void setProductTaxCode(String productTaxCode) {
        this.productTaxCode = productTaxCode;
    }
    /**
     * Auto generated value setter.
     * @param releaseDate the releaseDate to set
     */
    public void setReleaseDate(Timestamp releaseDate) {
        this.releaseDate = releaseDate;
    }
    /**
     * Auto generated value setter.
     * @param itemTypeId the itemTypeId to set
     */
    public void setItemTypeId(String itemTypeId) {
        this.itemTypeId = itemTypeId;
    }
    /**
     * Auto generated value setter.
     * @param nodeId the nodeId to set
     */
    public void setNodeId(String nodeId) {
        this.nodeId = nodeId;
    }
    /**
     * Auto generated value setter.
     * @param priority the priority to set
     */
    public void setPriority(Long priority) {
        this.priority = priority;
    }
    /**
     * Auto generated value setter.
     * @param browseExclusion the browseExclusion to set
     */
    public void setBrowseExclusion(String browseExclusion) {
        this.browseExclusion = browseExclusion;
    }
    /**
     * Auto generated value setter.
     * @param recommendationExclusion the recommendationExclusion to set
     */
    public void setRecommendationExclusion(String recommendationExclusion) {
        this.recommendationExclusion = recommendationExclusion;
    }
    /**
     * Auto generated value setter.
     * @param tier the tier to set
     */
    public void setTier(Long tier) {
        this.tier = tier;
    }
    /**
     * Auto generated value setter.
     * @param purchasingCategory the purchasingCategory to set
     */
    public void setPurchasingCategory(String purchasingCategory) {
        this.purchasingCategory = purchasingCategory;
    }
    /**
     * Auto generated value setter.
     * @param purchasingSubCategory the purchasingSubCategory to set
     */
    public void setPurchasingSubCategory(String purchasingSubCategory) {
        this.purchasingSubCategory = purchasingSubCategory;
    }
    /**
     * Auto generated value setter.
     * @param packagingType the packagingType to set
     */
    public void setPackagingType(String packagingType) {
        this.packagingType = packagingType;
    }
    /**
     * Auto generated value setter.
     * @param underlyingAvailability the underlyingAvailability to set
     */
    public void setUnderlyingAvailability(String underlyingAvailability) {
        this.underlyingAvailability = underlyingAvailability;
    }
    /**
     * Auto generated value setter.
     * @param replenishmentCategory the replenishmentCategory to set
     */
    public void setReplenishmentCategory(String replenishmentCategory) {
        this.replenishmentCategory = replenishmentCategory;
    }
    /**
     * Auto generated value setter.
     * @param dropShipStatus the dropShipStatus to set
     */
    public void setDropShipStatus(String dropShipStatus) {
        this.dropShipStatus = dropShipStatus;
    }
    /**
     * Auto generated value setter.
     * @param outOfStockWebsiteMessage the outOfStockWebsiteMessage to set
     */
    public void setOutOfStockWebsiteMessage(String outOfStockWebsiteMessage) {
        this.outOfStockWebsiteMessage = outOfStockWebsiteMessage;
    }
    /**
     * Auto generated value setter.
     * @param registeredParameter the registeredParameter to set
     */
    public void setRegisteredParameter(String registeredParameter) {
        this.registeredParameter = registeredParameter;
    }
    /**
     * Auto generated value setter.
     * @param processingDocumentId the processingDocumentId to set
     */
    public void setProcessingDocumentId(Long processingDocumentId) {
        this.processingDocumentId = processingDocumentId;
    }
    /**
     * Auto generated value setter.
     * @param postTimestamp the postTimestamp to set
     */
    public void setPostTimestamp(Timestamp postTimestamp) {
        this.postTimestamp = postTimestamp;
    }
    /**
     * Auto generated value setter.
     * @param postErrorMessage the postErrorMessage to set
     */
    public void setPostErrorMessage(String postErrorMessage) {
        this.postErrorMessage = postErrorMessage;
    }
    /**
     * Auto generated value setter.
     * @param postFailures the postFailures to set
     */
    public void setPostFailures(Long postFailures) {
        this.postFailures = postFailures;
    }
    /**
     * Auto generated value setter.
     * @param ackStatusId the ackStatusId to set
     */
    public void setAckStatusId(String ackStatusId) {
        this.ackStatusId = ackStatusId;
    }
    /**
     * Auto generated value setter.
     * @param acknowledgeTimestamp the acknowledgeTimestamp to set
     */
    public void setAcknowledgeTimestamp(Timestamp acknowledgeTimestamp) {
        this.acknowledgeTimestamp = acknowledgeTimestamp;
    }
    /**
     * Auto generated value setter.
     * @param acknowledgeErrorMessage the acknowledgeErrorMessage to set
     */
    public void setAcknowledgeErrorMessage(String acknowledgeErrorMessage) {
        this.acknowledgeErrorMessage = acknowledgeErrorMessage;
    }
    /**
     * Auto generated value setter.
     * @param acknowledgeMessageId the acknowledgeMessageId to set
     */
    public void setAcknowledgeMessageId(String acknowledgeMessageId) {
        this.acknowledgeMessageId = acknowledgeMessageId;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedStamp the lastUpdatedStamp to set
     */
    public void setLastUpdatedStamp(Timestamp lastUpdatedStamp) {
        this.lastUpdatedStamp = lastUpdatedStamp;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedTxStamp the lastUpdatedTxStamp to set
     */
    public void setLastUpdatedTxStamp(Timestamp lastUpdatedTxStamp) {
        this.lastUpdatedTxStamp = lastUpdatedTxStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdStamp the createdStamp to set
     */
    public void setCreatedStamp(Timestamp createdStamp) {
        this.createdStamp = createdStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdTxStamp the createdTxStamp to set
     */
    public void setCreatedTxStamp(Timestamp createdTxStamp) {
        this.createdTxStamp = createdTxStamp;
    }

    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getProductId() {
        return this.productId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getStatusId() {
        return this.statusId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getProductTaxCode() {
        return this.productTaxCode;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getReleaseDate() {
        return this.releaseDate;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getItemTypeId() {
        return this.itemTypeId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getNodeId() {
        return this.nodeId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Long</code>
     */
    public Long getPriority() {
        return this.priority;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getBrowseExclusion() {
        return this.browseExclusion;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getRecommendationExclusion() {
        return this.recommendationExclusion;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Long</code>
     */
    public Long getTier() {
        return this.tier;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPurchasingCategory() {
        return this.purchasingCategory;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPurchasingSubCategory() {
        return this.purchasingSubCategory;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPackagingType() {
        return this.packagingType;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getUnderlyingAvailability() {
        return this.underlyingAvailability;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getReplenishmentCategory() {
        return this.replenishmentCategory;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getDropShipStatus() {
        return this.dropShipStatus;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getOutOfStockWebsiteMessage() {
        return this.outOfStockWebsiteMessage;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getRegisteredParameter() {
        return this.registeredParameter;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Long</code>
     */
    public Long getProcessingDocumentId() {
        return this.processingDocumentId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getPostTimestamp() {
        return this.postTimestamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPostErrorMessage() {
        return this.postErrorMessage;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Long</code>
     */
    public Long getPostFailures() {
        return this.postFailures;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getAckStatusId() {
        return this.ackStatusId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getAcknowledgeTimestamp() {
        return this.acknowledgeTimestamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getAcknowledgeErrorMessage() {
        return this.acknowledgeErrorMessage;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getAcknowledgeMessageId() {
        return this.acknowledgeMessageId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedStamp() {
        return this.lastUpdatedStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedTxStamp() {
        return this.lastUpdatedTxStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedStamp() {
        return this.createdStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedTxStamp() {
        return this.createdTxStamp;
    }

    /**
     * Auto generated method that gets the related <code>Product</code> by the relation named <code>Product</code>.
     * @return the <code>Product</code>
     * @throws RepositoryException if an error occurs
     */
    public Product getProduct() throws RepositoryException {
        if (this.product == null) {
            this.product = getRelatedOne(Product.class, "Product");
        }
        return this.product;
    }
    /**
     * Auto generated method that gets the related <code>GoodIdentification</code> by the relation named <code>GoodIdentification</code>.
     * @return the list of <code>GoodIdentification</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends GoodIdentification> getGoodIdentifications() throws RepositoryException {
        if (this.goodIdentifications == null) {
            this.goodIdentifications = getRelated(GoodIdentification.class, "GoodIdentification");
        }
        return this.goodIdentifications;
    }
    /**
     * Auto generated method that gets the related <code>StatusItem</code> by the relation named <code>StatusItem</code>.
     * @return the <code>StatusItem</code>
     * @throws RepositoryException if an error occurs
     */
    public StatusItem getStatusItem() throws RepositoryException {
        if (this.statusItem == null) {
            this.statusItem = getRelatedOne(StatusItem.class, "StatusItem");
        }
        return this.statusItem;
    }
    /**
     * Auto generated method that gets the related <code>AmazonProductBrowseNode</code> by the relation named <code>AmazonProductBrowseNode</code>.
     * @return the <code>AmazonProductBrowseNode</code>
     * @throws RepositoryException if an error occurs
     */
    public AmazonProductBrowseNode getAmazonProductBrowseNode() throws RepositoryException {
        if (this.amazonProductBrowseNode == null) {
            this.amazonProductBrowseNode = getRelatedOne(AmazonProductBrowseNode.class, "AmazonProductBrowseNode");
        }
        return this.amazonProductBrowseNode;
    }
    /**
     * Auto generated method that gets the related <code>AmazonProductItemType</code> by the relation named <code>AmazonProductItemType</code>.
     * @return the <code>AmazonProductItemType</code>
     * @throws RepositoryException if an error occurs
     */
    public AmazonProductItemType getAmazonProductItemType() throws RepositoryException {
        if (this.amazonProductItemType == null) {
            this.amazonProductItemType = getRelatedOne(AmazonProductItemType.class, "AmazonProductItemType");
        }
        return this.amazonProductItemType;
    }
    /**
     * Auto generated method that gets the related <code>AmazonOtherItemAttrValue</code> by the relation named <code>AmazonOtherItemAttrValue</code>.
     * @return the list of <code>AmazonOtherItemAttrValue</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends AmazonOtherItemAttrValue> getAmazonOtherItemAttrValues() throws RepositoryException {
        if (this.amazonOtherItemAttrValues == null) {
            this.amazonOtherItemAttrValues = getRelated(AmazonOtherItemAttrValue.class, "AmazonOtherItemAttrValue");
        }
        return this.amazonOtherItemAttrValues;
    }
    /**
     * Auto generated method that gets the related <code>AmazonProductBulletPoint</code> by the relation named <code>AmazonProductBulletPoint</code>.
     * @return the list of <code>AmazonProductBulletPoint</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends AmazonProductBulletPoint> getAmazonProductBulletPoints() throws RepositoryException {
        if (this.amazonProductBulletPoints == null) {
            this.amazonProductBulletPoints = getRelated(AmazonProductBulletPoint.class, "AmazonProductBulletPoint");
        }
        return this.amazonProductBulletPoints;
    }
    /**
     * Auto generated method that gets the related <code>AmazonProductImage</code> by the relation named <code>AmazonProductImage</code>.
     * @return the <code>AmazonProductImage</code>
     * @throws RepositoryException if an error occurs
     */
    public AmazonProductImage getAmazonProductImage() throws RepositoryException {
        if (this.amazonProductImage == null) {
            this.amazonProductImage = getRelatedOne(AmazonProductImage.class, "AmazonProductImage");
        }
        return this.amazonProductImage;
    }
    /**
     * Auto generated method that gets the related <code>AmazonProductInventory</code> by the relation named <code>AmazonProductInventory</code>.
     * @return the <code>AmazonProductInventory</code>
     * @throws RepositoryException if an error occurs
     */
    public AmazonProductInventory getAmazonProductInventory() throws RepositoryException {
        if (this.amazonProductInventory == null) {
            this.amazonProductInventory = getRelatedOne(AmazonProductInventory.class, "AmazonProductInventory");
        }
        return this.amazonProductInventory;
    }
    /**
     * Auto generated method that gets the related <code>AmazonProductPrice</code> by the relation named <code>AmazonProductPrice</code>.
     * @return the <code>AmazonProductPrice</code>
     * @throws RepositoryException if an error occurs
     */
    public AmazonProductPrice getAmazonProductPrice() throws RepositoryException {
        if (this.amazonProductPrice == null) {
            this.amazonProductPrice = getRelatedOne(AmazonProductPrice.class, "AmazonProductPrice");
        }
        return this.amazonProductPrice;
    }
    /**
     * Auto generated method that gets the related <code>AmazonProductSearchTerms</code> by the relation named <code>AmazonProductSearchTerms</code>.
     * @return the list of <code>AmazonProductSearchTerms</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends AmazonProductSearchTerms> getAmazonProductSearchTermses() throws RepositoryException {
        if (this.amazonProductSearchTermses == null) {
            this.amazonProductSearchTermses = getRelated(AmazonProductSearchTerms.class, "AmazonProductSearchTerms");
        }
        return this.amazonProductSearchTermses;
    }
    /**
     * Auto generated method that gets the related <code>AmazonTargetAudienceValue</code> by the relation named <code>AmazonTargetAudienceValue</code>.
     * @return the list of <code>AmazonTargetAudienceValue</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends AmazonTargetAudienceValue> getAmazonTargetAudienceValues() throws RepositoryException {
        if (this.amazonTargetAudienceValues == null) {
            this.amazonTargetAudienceValues = getRelated(AmazonTargetAudienceValue.class, "AmazonTargetAudienceValue");
        }
        return this.amazonTargetAudienceValues;
    }
    /**
     * Auto generated method that gets the related <code>AmazonUsedForValue</code> by the relation named <code>AmazonUsedForValue</code>.
     * @return the list of <code>AmazonUsedForValue</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends AmazonUsedForValue> getAmazonUsedForValues() throws RepositoryException {
        if (this.amazonUsedForValues == null) {
            this.amazonUsedForValues = getRelated(AmazonUsedForValue.class, "AmazonUsedForValue");
        }
        return this.amazonUsedForValues;
    }

    /**
     * Auto generated value setter.
     * @param product the product to set
    */
    public void setProduct(Product product) {
        this.product = product;
    }
    /**
     * Auto generated value setter.
     * @param goodIdentifications the goodIdentifications to set
    */
    public void setGoodIdentifications(List<GoodIdentification> goodIdentifications) {
        this.goodIdentifications = goodIdentifications;
    }
    /**
     * Auto generated value setter.
     * @param statusItem the statusItem to set
    */
    public void setStatusItem(StatusItem statusItem) {
        this.statusItem = statusItem;
    }
    /**
     * Auto generated value setter.
     * @param amazonProductBrowseNode the amazonProductBrowseNode to set
    */
    public void setAmazonProductBrowseNode(AmazonProductBrowseNode amazonProductBrowseNode) {
        this.amazonProductBrowseNode = amazonProductBrowseNode;
    }
    /**
     * Auto generated value setter.
     * @param amazonProductItemType the amazonProductItemType to set
    */
    public void setAmazonProductItemType(AmazonProductItemType amazonProductItemType) {
        this.amazonProductItemType = amazonProductItemType;
    }
    /**
     * Auto generated value setter.
     * @param amazonOtherItemAttrValues the amazonOtherItemAttrValues to set
    */
    public void setAmazonOtherItemAttrValues(List<AmazonOtherItemAttrValue> amazonOtherItemAttrValues) {
        this.amazonOtherItemAttrValues = amazonOtherItemAttrValues;
    }
    /**
     * Auto generated value setter.
     * @param amazonProductBulletPoints the amazonProductBulletPoints to set
    */
    public void setAmazonProductBulletPoints(List<AmazonProductBulletPoint> amazonProductBulletPoints) {
        this.amazonProductBulletPoints = amazonProductBulletPoints;
    }
    /**
     * Auto generated value setter.
     * @param amazonProductImage the amazonProductImage to set
    */
    public void setAmazonProductImage(AmazonProductImage amazonProductImage) {
        this.amazonProductImage = amazonProductImage;
    }
    /**
     * Auto generated value setter.
     * @param amazonProductInventory the amazonProductInventory to set
    */
    public void setAmazonProductInventory(AmazonProductInventory amazonProductInventory) {
        this.amazonProductInventory = amazonProductInventory;
    }
    /**
     * Auto generated value setter.
     * @param amazonProductPrice the amazonProductPrice to set
    */
    public void setAmazonProductPrice(AmazonProductPrice amazonProductPrice) {
        this.amazonProductPrice = amazonProductPrice;
    }
    /**
     * Auto generated value setter.
     * @param amazonProductSearchTermses the amazonProductSearchTermses to set
    */
    public void setAmazonProductSearchTermses(List<AmazonProductSearchTerms> amazonProductSearchTermses) {
        this.amazonProductSearchTermses = amazonProductSearchTermses;
    }
    /**
     * Auto generated value setter.
     * @param amazonTargetAudienceValues the amazonTargetAudienceValues to set
    */
    public void setAmazonTargetAudienceValues(List<AmazonTargetAudienceValue> amazonTargetAudienceValues) {
        this.amazonTargetAudienceValues = amazonTargetAudienceValues;
    }
    /**
     * Auto generated value setter.
     * @param amazonUsedForValues the amazonUsedForValues to set
    */
    public void setAmazonUsedForValues(List<AmazonUsedForValue> amazonUsedForValues) {
        this.amazonUsedForValues = amazonUsedForValues;
    }

    /**
     * Auto generated method that add item to collection.
     */
    public void addAmazonOtherItemAttrValue(AmazonOtherItemAttrValue amazonOtherItemAttrValue) {
        if (this.amazonOtherItemAttrValues == null) {
            this.amazonOtherItemAttrValues = new ArrayList<AmazonOtherItemAttrValue>();
        }
        this.amazonOtherItemAttrValues.add(amazonOtherItemAttrValue);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeAmazonOtherItemAttrValue(AmazonOtherItemAttrValue amazonOtherItemAttrValue) {
        if (this.amazonOtherItemAttrValues == null) {
            return;
        }
        this.amazonOtherItemAttrValues.remove(amazonOtherItemAttrValue);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearAmazonOtherItemAttrValue() {
        if (this.amazonOtherItemAttrValues == null) {
            return;
        }
        this.amazonOtherItemAttrValues.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addAmazonProductBulletPoint(AmazonProductBulletPoint amazonProductBulletPoint) {
        if (this.amazonProductBulletPoints == null) {
            this.amazonProductBulletPoints = new ArrayList<AmazonProductBulletPoint>();
        }
        this.amazonProductBulletPoints.add(amazonProductBulletPoint);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeAmazonProductBulletPoint(AmazonProductBulletPoint amazonProductBulletPoint) {
        if (this.amazonProductBulletPoints == null) {
            return;
        }
        this.amazonProductBulletPoints.remove(amazonProductBulletPoint);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearAmazonProductBulletPoint() {
        if (this.amazonProductBulletPoints == null) {
            return;
        }
        this.amazonProductBulletPoints.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addAmazonProductSearchTermse(AmazonProductSearchTerms amazonProductSearchTermse) {
        if (this.amazonProductSearchTermses == null) {
            this.amazonProductSearchTermses = new ArrayList<AmazonProductSearchTerms>();
        }
        this.amazonProductSearchTermses.add(amazonProductSearchTermse);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeAmazonProductSearchTermse(AmazonProductSearchTerms amazonProductSearchTermse) {
        if (this.amazonProductSearchTermses == null) {
            return;
        }
        this.amazonProductSearchTermses.remove(amazonProductSearchTermse);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearAmazonProductSearchTermse() {
        if (this.amazonProductSearchTermses == null) {
            return;
        }
        this.amazonProductSearchTermses.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addAmazonTargetAudienceValue(AmazonTargetAudienceValue amazonTargetAudienceValue) {
        if (this.amazonTargetAudienceValues == null) {
            this.amazonTargetAudienceValues = new ArrayList<AmazonTargetAudienceValue>();
        }
        this.amazonTargetAudienceValues.add(amazonTargetAudienceValue);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeAmazonTargetAudienceValue(AmazonTargetAudienceValue amazonTargetAudienceValue) {
        if (this.amazonTargetAudienceValues == null) {
            return;
        }
        this.amazonTargetAudienceValues.remove(amazonTargetAudienceValue);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearAmazonTargetAudienceValue() {
        if (this.amazonTargetAudienceValues == null) {
            return;
        }
        this.amazonTargetAudienceValues.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addAmazonUsedForValue(AmazonUsedForValue amazonUsedForValue) {
        if (this.amazonUsedForValues == null) {
            this.amazonUsedForValues = new ArrayList<AmazonUsedForValue>();
        }
        this.amazonUsedForValues.add(amazonUsedForValue);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeAmazonUsedForValue(AmazonUsedForValue amazonUsedForValue) {
        if (this.amazonUsedForValues == null) {
            return;
        }
        this.amazonUsedForValues.remove(amazonUsedForValue);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearAmazonUsedForValue() {
        if (this.amazonUsedForValues == null) {
            return;
        }
        this.amazonUsedForValues.clear();
    }

    /** {@inheritDoc} */
    @Override
    public void fromMap(Map<String, Object> mapValue) {
        preInit();
        setProductId((String) mapValue.get("productId"));
        setStatusId((String) mapValue.get("statusId"));
        setProductTaxCode((String) mapValue.get("productTaxCode"));
        setReleaseDate((Timestamp) mapValue.get("releaseDate"));
        setItemTypeId((String) mapValue.get("itemTypeId"));
        setNodeId((String) mapValue.get("nodeId"));
        setPriority((Long) mapValue.get("priority"));
        setBrowseExclusion((String) mapValue.get("browseExclusion"));
        setRecommendationExclusion((String) mapValue.get("recommendationExclusion"));
        setTier((Long) mapValue.get("tier"));
        setPurchasingCategory((String) mapValue.get("purchasingCategory"));
        setPurchasingSubCategory((String) mapValue.get("purchasingSubCategory"));
        setPackagingType((String) mapValue.get("packagingType"));
        setUnderlyingAvailability((String) mapValue.get("underlyingAvailability"));
        setReplenishmentCategory((String) mapValue.get("replenishmentCategory"));
        setDropShipStatus((String) mapValue.get("dropShipStatus"));
        setOutOfStockWebsiteMessage((String) mapValue.get("outOfStockWebsiteMessage"));
        setRegisteredParameter((String) mapValue.get("registeredParameter"));
        setProcessingDocumentId((Long) mapValue.get("processingDocumentId"));
        setPostTimestamp((Timestamp) mapValue.get("postTimestamp"));
        setPostErrorMessage((String) mapValue.get("postErrorMessage"));
        setPostFailures((Long) mapValue.get("postFailures"));
        setAckStatusId((String) mapValue.get("ackStatusId"));
        setAcknowledgeTimestamp((Timestamp) mapValue.get("acknowledgeTimestamp"));
        setAcknowledgeErrorMessage((String) mapValue.get("acknowledgeErrorMessage"));
        setAcknowledgeMessageId((String) mapValue.get("acknowledgeMessageId"));
        setLastUpdatedStamp((Timestamp) mapValue.get("lastUpdatedStamp"));
        setLastUpdatedTxStamp((Timestamp) mapValue.get("lastUpdatedTxStamp"));
        setCreatedStamp((Timestamp) mapValue.get("createdStamp"));
        setCreatedTxStamp((Timestamp) mapValue.get("createdTxStamp"));
        postInit();
    }

    /** {@inheritDoc} */
    @Override
    public Map<String, Object> toMap() {
        Map<String, Object> mapValue = new FastMap<String, Object>();
        mapValue.put("productId", getProductId());
        mapValue.put("statusId", getStatusId());
        mapValue.put("productTaxCode", getProductTaxCode());
        mapValue.put("releaseDate", getReleaseDate());
        mapValue.put("itemTypeId", getItemTypeId());
        mapValue.put("nodeId", getNodeId());
        mapValue.put("priority", getPriority());
        mapValue.put("browseExclusion", getBrowseExclusion());
        mapValue.put("recommendationExclusion", getRecommendationExclusion());
        mapValue.put("tier", getTier());
        mapValue.put("purchasingCategory", getPurchasingCategory());
        mapValue.put("purchasingSubCategory", getPurchasingSubCategory());
        mapValue.put("packagingType", getPackagingType());
        mapValue.put("underlyingAvailability", getUnderlyingAvailability());
        mapValue.put("replenishmentCategory", getReplenishmentCategory());
        mapValue.put("dropShipStatus", getDropShipStatus());
        mapValue.put("outOfStockWebsiteMessage", getOutOfStockWebsiteMessage());
        mapValue.put("registeredParameter", getRegisteredParameter());
        mapValue.put("processingDocumentId", getProcessingDocumentId());
        mapValue.put("postTimestamp", getPostTimestamp());
        mapValue.put("postErrorMessage", getPostErrorMessage());
        mapValue.put("postFailures", getPostFailures());
        mapValue.put("ackStatusId", getAckStatusId());
        mapValue.put("acknowledgeTimestamp", getAcknowledgeTimestamp());
        mapValue.put("acknowledgeErrorMessage", getAcknowledgeErrorMessage());
        mapValue.put("acknowledgeMessageId", getAcknowledgeMessageId());
        mapValue.put("lastUpdatedStamp", getLastUpdatedStamp());
        mapValue.put("lastUpdatedTxStamp", getLastUpdatedTxStamp());
        mapValue.put("createdStamp", getCreatedStamp());
        mapValue.put("createdTxStamp", getCreatedTxStamp());
        return mapValue;
    }


}
