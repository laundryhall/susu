package org.opentaps.base.entities;

/*
 * Copyright (c) Open Source Strategies, Inc.
 *
 * Opentaps is free software: you can redistribute it and/or modify it
 * under the terms of the GNU Affero General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Opentaps is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with Opentaps.  If not, see <http://www.gnu.org/licenses/>.
 */

// DO NOT EDIT THIS FILE!  THIS IS AUTO GENERATED AND WILL GET WRITTEN OVER PERIODICALLY WHEN THE DATA MODEL CHANGES
// EXTEND THIS CLASS INSTEAD.

import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;

import javolution.util.FastMap;

import org.opentaps.foundation.entity.Entity;
import org.opentaps.foundation.entity.EntityFieldInterface;
import org.opentaps.foundation.repository.RepositoryException;
import org.opentaps.foundation.repository.RepositoryInterface;
import javax.persistence.*;
import org.hibernate.search.annotations.*;
import java.lang.String;
import java.sql.Timestamp;

/**
 * Auto generated base entity EmplPositionTypeRate.
 */
@javax.persistence.Entity
@Table(name="EMPL_POSITION_TYPE_RATE_NEW")
public class EmplPositionTypeRate extends Entity {
static {
java.util.Map<String, String> fields = new java.util.HashMap<String, String>();
        fields.put("emplPositionTypeId", "EMPL_POSITION_TYPE_ID");
        fields.put("rateTypeId", "RATE_TYPE_ID");
        fields.put("payGradeId", "PAY_GRADE_ID");
        fields.put("salaryStepSeqId", "SALARY_STEP_SEQ_ID");
        fields.put("fromDate", "FROM_DATE");
        fields.put("thruDate", "THRU_DATE");
        fields.put("lastUpdatedStamp", "LAST_UPDATED_STAMP");
        fields.put("lastUpdatedTxStamp", "LAST_UPDATED_TX_STAMP");
        fields.put("createdStamp", "CREATED_STAMP");
        fields.put("createdTxStamp", "CREATED_TX_STAMP");
fieldMapColumns.put("EmplPositionTypeRate", fields);
}
  public static enum Fields implements EntityFieldInterface<EmplPositionTypeRate> {
    emplPositionTypeId("emplPositionTypeId"),
    rateTypeId("rateTypeId"),
    payGradeId("payGradeId"),
    salaryStepSeqId("salaryStepSeqId"),
    fromDate("fromDate"),
    thruDate("thruDate"),
    lastUpdatedStamp("lastUpdatedStamp"),
    lastUpdatedTxStamp("lastUpdatedTxStamp"),
    createdStamp("createdStamp"),
    createdTxStamp("createdTxStamp");
    private final String fieldName;
    private Fields(String name) { fieldName = name; }
    /** {@inheritDoc} */
    public String getName() { return fieldName; }
    /** {@inheritDoc} */
    public String asc() { return fieldName + " ASC"; }
    /** {@inheritDoc} */
    public String desc() { return fieldName + " DESC"; }
  }

   @EmbeddedId

   @FieldBridge(impl = org.opentaps.base.entities.bridge.EmplPositionTypeRatePkBridge.class)
     private EmplPositionTypeRatePk id = new EmplPositionTypeRatePk();
   
    /**
     * Auto generated Id accessor.
     * @return <code>EmplPositionTypeRatePk</code>
     */
      public EmplPositionTypeRatePk getId() {
         return id;
      }
    /**
     * Auto generated Id setter.
     * @param id a <code>EmplPositionTypeRatePk</code> value to set
    */   
      public void setId(EmplPositionTypeRatePk id) {
         this.id = id;
      }
   @Column(name="PAY_GRADE_ID")
   private String payGradeId;
   @Column(name="SALARY_STEP_SEQ_ID")
   private String salaryStepSeqId;
   @Column(name="THRU_DATE")
   private Timestamp thruDate;
   @Column(name="LAST_UPDATED_STAMP")
   private Timestamp lastUpdatedStamp;
   @Column(name="LAST_UPDATED_TX_STAMP")
   private Timestamp lastUpdatedTxStamp;
   @Column(name="CREATED_STAMP")
   private Timestamp createdStamp;
   @Column(name="CREATED_TX_STAMP")
   private Timestamp createdTxStamp;
   @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="EMPL_POSITION_TYPE_ID", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private EmplPositionType emplPositionType = null;
   private transient SalaryStep salaryStep = null;
   @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="RATE_TYPE_ID", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private RateType rateType = null;

  /**
   * Default constructor.
   */
  public EmplPositionTypeRate() {
      super();
      this.baseEntityName = "EmplPositionTypeRate";
      this.isView = false;
      
      this.primaryKeyNames = new ArrayList<String>();
      this.primaryKeyNames.add("emplPositionTypeId");this.primaryKeyNames.add("rateTypeId");this.primaryKeyNames.add("fromDate");
      this.allFieldsNames = new ArrayList<String>();
      this.allFieldsNames.add("emplPositionTypeId");this.allFieldsNames.add("rateTypeId");this.allFieldsNames.add("payGradeId");this.allFieldsNames.add("salaryStepSeqId");this.allFieldsNames.add("fromDate");this.allFieldsNames.add("thruDate");this.allFieldsNames.add("lastUpdatedStamp");this.allFieldsNames.add("lastUpdatedTxStamp");this.allFieldsNames.add("createdStamp");this.allFieldsNames.add("createdTxStamp");
      this.nonPrimaryKeyNames = new ArrayList<String>();
      this.nonPrimaryKeyNames.addAll(allFieldsNames);
      this.nonPrimaryKeyNames.removeAll(primaryKeyNames);
  }

  /**
   * Constructor with a repository.
   * @param repository a <code>RepositoryInterface</code> value
   */
  public EmplPositionTypeRate(RepositoryInterface repository) {
      this();
      initRepository(repository);
  }

    /**
     * Auto generated value setter.
     * @param emplPositionTypeId the emplPositionTypeId to set
     */
    public void setEmplPositionTypeId(String emplPositionTypeId) {
        id.setEmplPositionTypeId(emplPositionTypeId);
    }
    /**
     * Auto generated value setter.
     * @param rateTypeId the rateTypeId to set
     */
    public void setRateTypeId(String rateTypeId) {
        id.setRateTypeId(rateTypeId);
    }
    /**
     * Auto generated value setter.
     * @param payGradeId the payGradeId to set
     */
    public void setPayGradeId(String payGradeId) {
        this.payGradeId = payGradeId;
    }
    /**
     * Auto generated value setter.
     * @param salaryStepSeqId the salaryStepSeqId to set
     */
    public void setSalaryStepSeqId(String salaryStepSeqId) {
        this.salaryStepSeqId = salaryStepSeqId;
    }
    /**
     * Auto generated value setter.
     * @param fromDate the fromDate to set
     */
    public void setFromDate(Timestamp fromDate) {
        id.setFromDate(fromDate);
    }
    /**
     * Auto generated value setter.
     * @param thruDate the thruDate to set
     */
    public void setThruDate(Timestamp thruDate) {
        this.thruDate = thruDate;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedStamp the lastUpdatedStamp to set
     */
    public void setLastUpdatedStamp(Timestamp lastUpdatedStamp) {
        this.lastUpdatedStamp = lastUpdatedStamp;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedTxStamp the lastUpdatedTxStamp to set
     */
    public void setLastUpdatedTxStamp(Timestamp lastUpdatedTxStamp) {
        this.lastUpdatedTxStamp = lastUpdatedTxStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdStamp the createdStamp to set
     */
    public void setCreatedStamp(Timestamp createdStamp) {
        this.createdStamp = createdStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdTxStamp the createdTxStamp to set
     */
    public void setCreatedTxStamp(Timestamp createdTxStamp) {
        this.createdTxStamp = createdTxStamp;
    }

    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getEmplPositionTypeId() {
        return this.id.getEmplPositionTypeId();
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getRateTypeId() {
        return this.id.getRateTypeId();
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPayGradeId() {
        return this.payGradeId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getSalaryStepSeqId() {
        return this.salaryStepSeqId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getFromDate() {
        return this.id.getFromDate();
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getThruDate() {
        return this.thruDate;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedStamp() {
        return this.lastUpdatedStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedTxStamp() {
        return this.lastUpdatedTxStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedStamp() {
        return this.createdStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedTxStamp() {
        return this.createdTxStamp;
    }

    /**
     * Auto generated method that gets the related <code>EmplPositionType</code> by the relation named <code>EmplPositionType</code>.
     * @return the <code>EmplPositionType</code>
     * @throws RepositoryException if an error occurs
     */
    public EmplPositionType getEmplPositionType() throws RepositoryException {
        if (this.emplPositionType == null) {
            this.emplPositionType = getRelatedOne(EmplPositionType.class, "EmplPositionType");
        }
        return this.emplPositionType;
    }
    /**
     * Auto generated method that gets the related <code>SalaryStep</code> by the relation named <code>SalaryStep</code>.
     * @return the <code>SalaryStep</code>
     * @throws RepositoryException if an error occurs
     */
    public SalaryStep getSalaryStep() throws RepositoryException {
        if (this.salaryStep == null) {
            this.salaryStep = getRelatedOne(SalaryStep.class, "SalaryStep");
        }
        return this.salaryStep;
    }
    /**
     * Auto generated method that gets the related <code>RateType</code> by the relation named <code>RateType</code>.
     * @return the <code>RateType</code>
     * @throws RepositoryException if an error occurs
     */
    public RateType getRateType() throws RepositoryException {
        if (this.rateType == null) {
            this.rateType = getRelatedOne(RateType.class, "RateType");
        }
        return this.rateType;
    }

    /**
     * Auto generated value setter.
     * @param emplPositionType the emplPositionType to set
    */
    public void setEmplPositionType(EmplPositionType emplPositionType) {
        this.emplPositionType = emplPositionType;
    }
    /**
     * Auto generated value setter.
     * @param salaryStep the salaryStep to set
    */
    public void setSalaryStep(SalaryStep salaryStep) {
        this.salaryStep = salaryStep;
    }
    /**
     * Auto generated value setter.
     * @param rateType the rateType to set
    */
    public void setRateType(RateType rateType) {
        this.rateType = rateType;
    }


    /** {@inheritDoc} */
    @Override
    public void fromMap(Map<String, Object> mapValue) {
        preInit();
        setEmplPositionTypeId((String) mapValue.get("emplPositionTypeId"));
        setRateTypeId((String) mapValue.get("rateTypeId"));
        setPayGradeId((String) mapValue.get("payGradeId"));
        setSalaryStepSeqId((String) mapValue.get("salaryStepSeqId"));
        setFromDate((Timestamp) mapValue.get("fromDate"));
        setThruDate((Timestamp) mapValue.get("thruDate"));
        setLastUpdatedStamp((Timestamp) mapValue.get("lastUpdatedStamp"));
        setLastUpdatedTxStamp((Timestamp) mapValue.get("lastUpdatedTxStamp"));
        setCreatedStamp((Timestamp) mapValue.get("createdStamp"));
        setCreatedTxStamp((Timestamp) mapValue.get("createdTxStamp"));
        postInit();
    }

    /** {@inheritDoc} */
    @Override
    public Map<String, Object> toMap() {
        Map<String, Object> mapValue = new FastMap<String, Object>();
        mapValue.put("emplPositionTypeId", getEmplPositionTypeId());
        mapValue.put("rateTypeId", getRateTypeId());
        mapValue.put("payGradeId", getPayGradeId());
        mapValue.put("salaryStepSeqId", getSalaryStepSeqId());
        mapValue.put("fromDate", getFromDate());
        mapValue.put("thruDate", getThruDate());
        mapValue.put("lastUpdatedStamp", getLastUpdatedStamp());
        mapValue.put("lastUpdatedTxStamp", getLastUpdatedTxStamp());
        mapValue.put("createdStamp", getCreatedStamp());
        mapValue.put("createdTxStamp", getCreatedTxStamp());
        return mapValue;
    }


}
