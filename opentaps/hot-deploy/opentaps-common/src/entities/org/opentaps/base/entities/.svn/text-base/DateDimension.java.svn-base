package org.opentaps.base.entities;

/*
 * Copyright (c) Open Source Strategies, Inc.
 *
 * Opentaps is free software: you can redistribute it and/or modify it
 * under the terms of the GNU Affero General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Opentaps is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with Opentaps.  If not, see <http://www.gnu.org/licenses/>.
 */

// DO NOT EDIT THIS FILE!  THIS IS AUTO GENERATED AND WILL GET WRITTEN OVER PERIODICALLY WHEN THE DATA MODEL CHANGES
// EXTEND THIS CLASS INSTEAD.

import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;

import javolution.util.FastMap;

import org.opentaps.foundation.entity.Entity;
import org.opentaps.foundation.entity.EntityFieldInterface;
import org.opentaps.foundation.repository.RepositoryException;
import org.opentaps.foundation.repository.RepositoryInterface;
import javax.persistence.*;
import org.hibernate.search.annotations.*;
import java.lang.Long;
import java.lang.String;
import java.sql.Date;
import java.sql.Timestamp;

/**
 * Auto generated base entity DateDimension.
 */
@javax.persistence.Entity
@Table(name="DATE_DIMENSION")
public class DateDimension extends Entity {
static {
java.util.Map<String, String> fields = new java.util.HashMap<String, String>();
        fields.put("dimensionId", "DIMENSION_ID");
        fields.put("dateValue", "DATE_VALUE");
        fields.put("description", "DESCRIPTION");
        fields.put("dayName", "DAY_NAME");
        fields.put("dayOfMonth", "DAY_OF_MONTH");
        fields.put("dayOfYear", "DAY_OF_YEAR");
        fields.put("monthName", "MONTH_NAME");
        fields.put("monthOfYear", "MONTH_OF_YEAR");
        fields.put("yearName", "YEAR_NAME");
        fields.put("weekOfMonth", "WEEK_OF_MONTH");
        fields.put("weekOfYear", "WEEK_OF_YEAR");
        fields.put("yearMonthDay", "YEAR_MONTH_DAY");
        fields.put("yearAndMonth", "YEAR_AND_MONTH");
        fields.put("weekdayType", "WEEKDAY_TYPE");
        fields.put("lastUpdatedStamp", "LAST_UPDATED_STAMP");
        fields.put("lastUpdatedTxStamp", "LAST_UPDATED_TX_STAMP");
        fields.put("createdStamp", "CREATED_STAMP");
        fields.put("createdTxStamp", "CREATED_TX_STAMP");
fieldMapColumns.put("DateDimension", fields);
}
  public static enum Fields implements EntityFieldInterface<DateDimension> {
    dimensionId("dimensionId"),
    dateValue("dateValue"),
    description("description"),
    dayName("dayName"),
    dayOfMonth("dayOfMonth"),
    dayOfYear("dayOfYear"),
    monthName("monthName"),
    monthOfYear("monthOfYear"),
    yearName("yearName"),
    weekOfMonth("weekOfMonth"),
    weekOfYear("weekOfYear"),
    yearMonthDay("yearMonthDay"),
    yearAndMonth("yearAndMonth"),
    weekdayType("weekdayType"),
    lastUpdatedStamp("lastUpdatedStamp"),
    lastUpdatedTxStamp("lastUpdatedTxStamp"),
    createdStamp("createdStamp"),
    createdTxStamp("createdTxStamp");
    private final String fieldName;
    private Fields(String name) { fieldName = name; }
    /** {@inheritDoc} */
    public String getName() { return fieldName; }
    /** {@inheritDoc} */
    public String asc() { return fieldName + " ASC"; }
    /** {@inheritDoc} */
    public String desc() { return fieldName + " DESC"; }
  }

   @org.hibernate.annotations.GenericGenerator(name="DateDimension_GEN",  strategy="org.opentaps.foundation.entity.hibernate.OpentapsIdentifierGenerator")
   @GeneratedValue(generator="DateDimension_GEN")
   @Id
   @Column(name="DIMENSION_ID")
   private String dimensionId;
   @Column(name="DATE_VALUE")
   private Date dateValue;
   @Column(name="DESCRIPTION")
   private String description;
   @Column(name="DAY_NAME")
   private String dayName;
   @Column(name="DAY_OF_MONTH")
   private Long dayOfMonth;
   @Column(name="DAY_OF_YEAR")
   private Long dayOfYear;
   @Column(name="MONTH_NAME")
   private String monthName;
   @Column(name="MONTH_OF_YEAR")
   private Long monthOfYear;
   @Column(name="YEAR_NAME")
   private Long yearName;
   @Column(name="WEEK_OF_MONTH")
   private Long weekOfMonth;
   @Column(name="WEEK_OF_YEAR")
   private Long weekOfYear;
   @Column(name="YEAR_MONTH_DAY")
   private String yearMonthDay;
   @Column(name="YEAR_AND_MONTH")
   private String yearAndMonth;
   @Column(name="WEEKDAY_TYPE")
   private String weekdayType;
   @Column(name="LAST_UPDATED_STAMP")
   private Timestamp lastUpdatedStamp;
   @Column(name="LAST_UPDATED_TX_STAMP")
   private Timestamp lastUpdatedTxStamp;
   @Column(name="CREATED_STAMP")
   private Timestamp createdStamp;
   @Column(name="CREATED_TX_STAMP")
   private Timestamp createdTxStamp;

  /**
   * Default constructor.
   */
  public DateDimension() {
      super();
      this.baseEntityName = "DateDimension";
      this.isView = false;
      
      this.primaryKeyNames = new ArrayList<String>();
      this.primaryKeyNames.add("dimensionId");
      this.allFieldsNames = new ArrayList<String>();
      this.allFieldsNames.add("dimensionId");this.allFieldsNames.add("dateValue");this.allFieldsNames.add("description");this.allFieldsNames.add("dayName");this.allFieldsNames.add("dayOfMonth");this.allFieldsNames.add("dayOfYear");this.allFieldsNames.add("monthName");this.allFieldsNames.add("monthOfYear");this.allFieldsNames.add("yearName");this.allFieldsNames.add("weekOfMonth");this.allFieldsNames.add("weekOfYear");this.allFieldsNames.add("yearMonthDay");this.allFieldsNames.add("yearAndMonth");this.allFieldsNames.add("weekdayType");this.allFieldsNames.add("lastUpdatedStamp");this.allFieldsNames.add("lastUpdatedTxStamp");this.allFieldsNames.add("createdStamp");this.allFieldsNames.add("createdTxStamp");
      this.nonPrimaryKeyNames = new ArrayList<String>();
      this.nonPrimaryKeyNames.addAll(allFieldsNames);
      this.nonPrimaryKeyNames.removeAll(primaryKeyNames);
  }

  /**
   * Constructor with a repository.
   * @param repository a <code>RepositoryInterface</code> value
   */
  public DateDimension(RepositoryInterface repository) {
      this();
      initRepository(repository);
  }

    /**
     * Auto generated value setter.
     * @param dimensionId the dimensionId to set
     */
    public void setDimensionId(String dimensionId) {
        this.dimensionId = dimensionId;
    }
    /**
     * Auto generated value setter.
     * @param dateValue the dateValue to set
     */
    public void setDateValue(Date dateValue) {
        this.dateValue = dateValue;
    }
    /**
     * Auto generated value setter.
     * @param description the description to set
     */
    public void setDescription(String description) {
        this.description = description;
    }
    /**
     * Auto generated value setter.
     * @param dayName the dayName to set
     */
    public void setDayName(String dayName) {
        this.dayName = dayName;
    }
    /**
     * Auto generated value setter.
     * @param dayOfMonth the dayOfMonth to set
     */
    public void setDayOfMonth(Long dayOfMonth) {
        this.dayOfMonth = dayOfMonth;
    }
    /**
     * Auto generated value setter.
     * @param dayOfYear the dayOfYear to set
     */
    public void setDayOfYear(Long dayOfYear) {
        this.dayOfYear = dayOfYear;
    }
    /**
     * Auto generated value setter.
     * @param monthName the monthName to set
     */
    public void setMonthName(String monthName) {
        this.monthName = monthName;
    }
    /**
     * Auto generated value setter.
     * @param monthOfYear the monthOfYear to set
     */
    public void setMonthOfYear(Long monthOfYear) {
        this.monthOfYear = monthOfYear;
    }
    /**
     * Auto generated value setter.
     * @param yearName the yearName to set
     */
    public void setYearName(Long yearName) {
        this.yearName = yearName;
    }
    /**
     * Auto generated value setter.
     * @param weekOfMonth the weekOfMonth to set
     */
    public void setWeekOfMonth(Long weekOfMonth) {
        this.weekOfMonth = weekOfMonth;
    }
    /**
     * Auto generated value setter.
     * @param weekOfYear the weekOfYear to set
     */
    public void setWeekOfYear(Long weekOfYear) {
        this.weekOfYear = weekOfYear;
    }
    /**
     * Auto generated value setter.
     * @param yearMonthDay the yearMonthDay to set
     */
    public void setYearMonthDay(String yearMonthDay) {
        this.yearMonthDay = yearMonthDay;
    }
    /**
     * Auto generated value setter.
     * @param yearAndMonth the yearAndMonth to set
     */
    public void setYearAndMonth(String yearAndMonth) {
        this.yearAndMonth = yearAndMonth;
    }
    /**
     * Auto generated value setter.
     * @param weekdayType the weekdayType to set
     */
    public void setWeekdayType(String weekdayType) {
        this.weekdayType = weekdayType;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedStamp the lastUpdatedStamp to set
     */
    public void setLastUpdatedStamp(Timestamp lastUpdatedStamp) {
        this.lastUpdatedStamp = lastUpdatedStamp;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedTxStamp the lastUpdatedTxStamp to set
     */
    public void setLastUpdatedTxStamp(Timestamp lastUpdatedTxStamp) {
        this.lastUpdatedTxStamp = lastUpdatedTxStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdStamp the createdStamp to set
     */
    public void setCreatedStamp(Timestamp createdStamp) {
        this.createdStamp = createdStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdTxStamp the createdTxStamp to set
     */
    public void setCreatedTxStamp(Timestamp createdTxStamp) {
        this.createdTxStamp = createdTxStamp;
    }

    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getDimensionId() {
        return this.dimensionId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Date</code>
     */
    public Date getDateValue() {
        return this.dateValue;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getDescription() {
        return this.description;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getDayName() {
        return this.dayName;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Long</code>
     */
    public Long getDayOfMonth() {
        return this.dayOfMonth;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Long</code>
     */
    public Long getDayOfYear() {
        return this.dayOfYear;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getMonthName() {
        return this.monthName;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Long</code>
     */
    public Long getMonthOfYear() {
        return this.monthOfYear;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Long</code>
     */
    public Long getYearName() {
        return this.yearName;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Long</code>
     */
    public Long getWeekOfMonth() {
        return this.weekOfMonth;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Long</code>
     */
    public Long getWeekOfYear() {
        return this.weekOfYear;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getYearMonthDay() {
        return this.yearMonthDay;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getYearAndMonth() {
        return this.yearAndMonth;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getWeekdayType() {
        return this.weekdayType;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedStamp() {
        return this.lastUpdatedStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedTxStamp() {
        return this.lastUpdatedTxStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedStamp() {
        return this.createdStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedTxStamp() {
        return this.createdTxStamp;
    }




    /** {@inheritDoc} */
    @Override
    public void fromMap(Map<String, Object> mapValue) {
        preInit();
        setDimensionId((String) mapValue.get("dimensionId"));
        setDateValue((Date) mapValue.get("dateValue"));
        setDescription((String) mapValue.get("description"));
        setDayName((String) mapValue.get("dayName"));
        setDayOfMonth((Long) mapValue.get("dayOfMonth"));
        setDayOfYear((Long) mapValue.get("dayOfYear"));
        setMonthName((String) mapValue.get("monthName"));
        setMonthOfYear((Long) mapValue.get("monthOfYear"));
        setYearName((Long) mapValue.get("yearName"));
        setWeekOfMonth((Long) mapValue.get("weekOfMonth"));
        setWeekOfYear((Long) mapValue.get("weekOfYear"));
        setYearMonthDay((String) mapValue.get("yearMonthDay"));
        setYearAndMonth((String) mapValue.get("yearAndMonth"));
        setWeekdayType((String) mapValue.get("weekdayType"));
        setLastUpdatedStamp((Timestamp) mapValue.get("lastUpdatedStamp"));
        setLastUpdatedTxStamp((Timestamp) mapValue.get("lastUpdatedTxStamp"));
        setCreatedStamp((Timestamp) mapValue.get("createdStamp"));
        setCreatedTxStamp((Timestamp) mapValue.get("createdTxStamp"));
        postInit();
    }

    /** {@inheritDoc} */
    @Override
    public Map<String, Object> toMap() {
        Map<String, Object> mapValue = new FastMap<String, Object>();
        mapValue.put("dimensionId", getDimensionId());
        mapValue.put("dateValue", getDateValue());
        mapValue.put("description", getDescription());
        mapValue.put("dayName", getDayName());
        mapValue.put("dayOfMonth", getDayOfMonth());
        mapValue.put("dayOfYear", getDayOfYear());
        mapValue.put("monthName", getMonthName());
        mapValue.put("monthOfYear", getMonthOfYear());
        mapValue.put("yearName", getYearName());
        mapValue.put("weekOfMonth", getWeekOfMonth());
        mapValue.put("weekOfYear", getWeekOfYear());
        mapValue.put("yearMonthDay", getYearMonthDay());
        mapValue.put("yearAndMonth", getYearAndMonth());
        mapValue.put("weekdayType", getWeekdayType());
        mapValue.put("lastUpdatedStamp", getLastUpdatedStamp());
        mapValue.put("lastUpdatedTxStamp", getLastUpdatedTxStamp());
        mapValue.put("createdStamp", getCreatedStamp());
        mapValue.put("createdTxStamp", getCreatedTxStamp());
        return mapValue;
    }


}
