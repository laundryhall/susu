package org.opentaps.base.entities;

/*
 * Copyright (c) Open Source Strategies, Inc.
 *
 * Opentaps is free software: you can redistribute it and/or modify it
 * under the terms of the GNU Affero General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Opentaps is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with Opentaps.  If not, see <http://www.gnu.org/licenses/>.
 */

// DO NOT EDIT THIS FILE!  THIS IS AUTO GENERATED AND WILL GET WRITTEN OVER PERIODICALLY WHEN THE DATA MODEL CHANGES
// EXTEND THIS CLASS INSTEAD.

import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;

import javolution.util.FastMap;

import org.opentaps.foundation.entity.Entity;
import org.opentaps.foundation.entity.EntityFieldInterface;
import org.opentaps.foundation.repository.RepositoryException;
import org.opentaps.foundation.repository.RepositoryInterface;
import javax.persistence.*;
import org.hibernate.search.annotations.*;
import java.lang.String;
import java.sql.Timestamp;

/**
 * Auto generated base entity DataResource.
 */
@javax.persistence.Entity
@Table(name="DATA_RESOURCE")
public class DataResource extends Entity {
static {
java.util.Map<String, String> fields = new java.util.HashMap<String, String>();
        fields.put("dataResourceId", "DATA_RESOURCE_ID");
        fields.put("dataResourceTypeId", "DATA_RESOURCE_TYPE_ID");
        fields.put("dataTemplateTypeId", "DATA_TEMPLATE_TYPE_ID");
        fields.put("dataCategoryId", "DATA_CATEGORY_ID");
        fields.put("dataSourceId", "DATA_SOURCE_ID");
        fields.put("statusId", "STATUS_ID");
        fields.put("dataResourceName", "DATA_RESOURCE_NAME");
        fields.put("localeString", "LOCALE_STRING");
        fields.put("mimeTypeId", "MIME_TYPE_ID");
        fields.put("characterSetId", "CHARACTER_SET_ID");
        fields.put("objectInfo", "OBJECT_INFO");
        fields.put("surveyId", "SURVEY_ID");
        fields.put("surveyResponseId", "SURVEY_RESPONSE_ID");
        fields.put("relatedDetailId", "RELATED_DETAIL_ID");
        fields.put("isPublic", "IS_PUBLIC");
        fields.put("createdDate", "CREATED_DATE");
        fields.put("createdByUserLogin", "CREATED_BY_USER_LOGIN");
        fields.put("lastModifiedDate", "LAST_MODIFIED_DATE");
        fields.put("lastModifiedByUserLogin", "LAST_MODIFIED_BY_USER_LOGIN");
        fields.put("lastUpdatedStamp", "LAST_UPDATED_STAMP");
        fields.put("lastUpdatedTxStamp", "LAST_UPDATED_TX_STAMP");
        fields.put("createdStamp", "CREATED_STAMP");
        fields.put("createdTxStamp", "CREATED_TX_STAMP");
fieldMapColumns.put("DataResource", fields);
}
  public static enum Fields implements EntityFieldInterface<DataResource> {
    dataResourceId("dataResourceId"),
    dataResourceTypeId("dataResourceTypeId"),
    dataTemplateTypeId("dataTemplateTypeId"),
    dataCategoryId("dataCategoryId"),
    dataSourceId("dataSourceId"),
    statusId("statusId"),
    dataResourceName("dataResourceName"),
    localeString("localeString"),
    mimeTypeId("mimeTypeId"),
    characterSetId("characterSetId"),
    objectInfo("objectInfo"),
    surveyId("surveyId"),
    surveyResponseId("surveyResponseId"),
    relatedDetailId("relatedDetailId"),
    isPublic("isPublic"),
    createdDate("createdDate"),
    createdByUserLogin("createdByUserLogin"),
    lastModifiedDate("lastModifiedDate"),
    lastModifiedByUserLogin("lastModifiedByUserLogin"),
    lastUpdatedStamp("lastUpdatedStamp"),
    lastUpdatedTxStamp("lastUpdatedTxStamp"),
    createdStamp("createdStamp"),
    createdTxStamp("createdTxStamp");
    private final String fieldName;
    private Fields(String name) { fieldName = name; }
    /** {@inheritDoc} */
    public String getName() { return fieldName; }
    /** {@inheritDoc} */
    public String asc() { return fieldName + " ASC"; }
    /** {@inheritDoc} */
    public String desc() { return fieldName + " DESC"; }
  }

   @org.hibernate.annotations.GenericGenerator(name="DataResource_GEN",  strategy="org.opentaps.foundation.entity.hibernate.OpentapsIdentifierGenerator")
   @GeneratedValue(generator="DataResource_GEN")
   @Id
   @Column(name="DATA_RESOURCE_ID")
   private String dataResourceId;
   @Column(name="DATA_RESOURCE_TYPE_ID")
   private String dataResourceTypeId;
   @Column(name="DATA_TEMPLATE_TYPE_ID")
   private String dataTemplateTypeId;
   @Column(name="DATA_CATEGORY_ID")
   private String dataCategoryId;
   @Column(name="DATA_SOURCE_ID")
   private String dataSourceId;
   @Column(name="STATUS_ID")
   private String statusId;
   @Column(name="DATA_RESOURCE_NAME")
   private String dataResourceName;
   @Column(name="LOCALE_STRING")
   private String localeString;
   @Column(name="MIME_TYPE_ID")
   private String mimeTypeId;
   @Column(name="CHARACTER_SET_ID")
   private String characterSetId;
   @Column(name="OBJECT_INFO")
   private String objectInfo;
   @Column(name="SURVEY_ID")
   private String surveyId;
   @Column(name="SURVEY_RESPONSE_ID")
   private String surveyResponseId;
   @Column(name="RELATED_DETAIL_ID")
   private String relatedDetailId;
   @Column(name="IS_PUBLIC")
   private String isPublic;
   @Column(name="CREATED_DATE")
   private Timestamp createdDate;
   @Column(name="CREATED_BY_USER_LOGIN")
   private String createdByUserLogin;
   @Column(name="LAST_MODIFIED_DATE")
   private Timestamp lastModifiedDate;
   @Column(name="LAST_MODIFIED_BY_USER_LOGIN")
   private String lastModifiedByUserLogin;
   @Column(name="LAST_UPDATED_STAMP")
   private Timestamp lastUpdatedStamp;
   @Column(name="LAST_UPDATED_TX_STAMP")
   private Timestamp lastUpdatedTxStamp;
   @Column(name="CREATED_STAMP")
   private Timestamp createdStamp;
   @Column(name="CREATED_TX_STAMP")
   private Timestamp createdTxStamp;
   @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="STATUS_ID", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private StatusItem statusItem = null;
   @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="DATA_RESOURCE_TYPE_ID", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private DataResourceType dataResourceType = null;
   @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="DATA_TEMPLATE_TYPE_ID", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private DataTemplateType dataTemplateType = null;
   @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="DATA_CATEGORY_ID", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private DataCategory dataCategory = null;
   @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="DATA_SOURCE_ID", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private DataSource dataSource = null;
   @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="MIME_TYPE_ID", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private MimeType mimeType = null;
   @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="CHARACTER_SET_ID", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private CharacterSet characterSet = null;
   private transient List<DataResourceTypeAttr> dataResourceTypeAttrs = null;
   @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="CREATED_BY_USER_LOGIN", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private UserLogin relatedCreatedByUserLogin = null;
   @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="LAST_MODIFIED_BY_USER_LOGIN", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private UserLogin relatedLastModifiedByUserLogin = null;
   @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="SURVEY_ID", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private Survey survey = null;
   @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="SURVEY_RESPONSE_ID", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private SurveyResponse surveyResponse = null;
   @OneToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="DATA_RESOURCE_ID", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private AudioDataResource audioDataResource = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="dataResource", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="DATA_RESOURCE_ID")
   
   private List<Content> contents = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="templateDataResource", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="TEMPLATE_DATA_RESOURCE_ID")
   
   private List<Content> templateContents = null;
   private transient List<ContentRevisionItem> oldContentRevisionItems = null;
   private transient List<ContentRevisionItem> newContentRevisionItems = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="dataResource", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="DATA_RESOURCE_ID")
   
   private List<DataResourceAttribute> dataResourceAttributes = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="dataResource", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="DATA_RESOURCE_ID")
   
   private List<DataResourceMetaData> dataResourceMetaDatas = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="dataResource", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="DATA_RESOURCE_ID")
   
   private List<DataResourcePurpose> dataResourcePurposes = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="dataResource", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="DATA_RESOURCE_ID")
   
   private List<DataResourceRole> dataResourceRoles = null;
   @OneToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="DATA_RESOURCE_ID", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private ElectronicText electronicText = null;
   @OneToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="DATA_RESOURCE_ID", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private ImageDataResource imageDataResource = null;
   @OneToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="DATA_RESOURCE_ID", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private OtherDataResource otherDataResource = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="dataResource", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="DATA_RESOURCE_ID")
   
   private List<ProductFeatureDataResource> productFeatureDataResources = null;
   @OneToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="DATA_RESOURCE_ID", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private VideoDataResource videoDataResource = null;

  /**
   * Default constructor.
   */
  public DataResource() {
      super();
      this.baseEntityName = "DataResource";
      this.isView = false;
      
      this.primaryKeyNames = new ArrayList<String>();
      this.primaryKeyNames.add("dataResourceId");
      this.allFieldsNames = new ArrayList<String>();
      this.allFieldsNames.add("dataResourceId");this.allFieldsNames.add("dataResourceTypeId");this.allFieldsNames.add("dataTemplateTypeId");this.allFieldsNames.add("dataCategoryId");this.allFieldsNames.add("dataSourceId");this.allFieldsNames.add("statusId");this.allFieldsNames.add("dataResourceName");this.allFieldsNames.add("localeString");this.allFieldsNames.add("mimeTypeId");this.allFieldsNames.add("characterSetId");this.allFieldsNames.add("objectInfo");this.allFieldsNames.add("surveyId");this.allFieldsNames.add("surveyResponseId");this.allFieldsNames.add("relatedDetailId");this.allFieldsNames.add("isPublic");this.allFieldsNames.add("createdDate");this.allFieldsNames.add("createdByUserLogin");this.allFieldsNames.add("lastModifiedDate");this.allFieldsNames.add("lastModifiedByUserLogin");this.allFieldsNames.add("lastUpdatedStamp");this.allFieldsNames.add("lastUpdatedTxStamp");this.allFieldsNames.add("createdStamp");this.allFieldsNames.add("createdTxStamp");
      this.nonPrimaryKeyNames = new ArrayList<String>();
      this.nonPrimaryKeyNames.addAll(allFieldsNames);
      this.nonPrimaryKeyNames.removeAll(primaryKeyNames);
  }

  /**
   * Constructor with a repository.
   * @param repository a <code>RepositoryInterface</code> value
   */
  public DataResource(RepositoryInterface repository) {
      this();
      initRepository(repository);
  }

    /**
     * Auto generated value setter.
     * @param dataResourceId the dataResourceId to set
     */
    public void setDataResourceId(String dataResourceId) {
        this.dataResourceId = dataResourceId;
    }
    /**
     * Auto generated value setter.
     * @param dataResourceTypeId the dataResourceTypeId to set
     */
    public void setDataResourceTypeId(String dataResourceTypeId) {
        this.dataResourceTypeId = dataResourceTypeId;
    }
    /**
     * Auto generated value setter.
     * @param dataTemplateTypeId the dataTemplateTypeId to set
     */
    public void setDataTemplateTypeId(String dataTemplateTypeId) {
        this.dataTemplateTypeId = dataTemplateTypeId;
    }
    /**
     * Auto generated value setter.
     * @param dataCategoryId the dataCategoryId to set
     */
    public void setDataCategoryId(String dataCategoryId) {
        this.dataCategoryId = dataCategoryId;
    }
    /**
     * Auto generated value setter.
     * @param dataSourceId the dataSourceId to set
     */
    public void setDataSourceId(String dataSourceId) {
        this.dataSourceId = dataSourceId;
    }
    /**
     * Auto generated value setter.
     * @param statusId the statusId to set
     */
    public void setStatusId(String statusId) {
        this.statusId = statusId;
    }
    /**
     * Auto generated value setter.
     * @param dataResourceName the dataResourceName to set
     */
    public void setDataResourceName(String dataResourceName) {
        this.dataResourceName = dataResourceName;
    }
    /**
     * Auto generated value setter.
     * @param localeString the localeString to set
     */
    public void setLocaleString(String localeString) {
        this.localeString = localeString;
    }
    /**
     * Auto generated value setter.
     * @param mimeTypeId the mimeTypeId to set
     */
    public void setMimeTypeId(String mimeTypeId) {
        this.mimeTypeId = mimeTypeId;
    }
    /**
     * Auto generated value setter.
     * @param characterSetId the characterSetId to set
     */
    public void setCharacterSetId(String characterSetId) {
        this.characterSetId = characterSetId;
    }
    /**
     * Auto generated value setter.
     * @param objectInfo the objectInfo to set
     */
    public void setObjectInfo(String objectInfo) {
        this.objectInfo = objectInfo;
    }
    /**
     * Auto generated value setter.
     * @param surveyId the surveyId to set
     */
    public void setSurveyId(String surveyId) {
        this.surveyId = surveyId;
    }
    /**
     * Auto generated value setter.
     * @param surveyResponseId the surveyResponseId to set
     */
    public void setSurveyResponseId(String surveyResponseId) {
        this.surveyResponseId = surveyResponseId;
    }
    /**
     * Auto generated value setter.
     * @param relatedDetailId the relatedDetailId to set
     */
    public void setRelatedDetailId(String relatedDetailId) {
        this.relatedDetailId = relatedDetailId;
    }
    /**
     * Auto generated value setter.
     * @param isPublic the isPublic to set
     */
    public void setIsPublic(String isPublic) {
        this.isPublic = isPublic;
    }
    /**
     * Auto generated value setter.
     * @param createdDate the createdDate to set
     */
    public void setCreatedDate(Timestamp createdDate) {
        this.createdDate = createdDate;
    }
    /**
     * Auto generated value setter.
     * @param createdByUserLogin the createdByUserLogin to set
     */
    public void setCreatedByUserLogin(String createdByUserLogin) {
        this.createdByUserLogin = createdByUserLogin;
    }
    /**
     * Auto generated value setter.
     * @param lastModifiedDate the lastModifiedDate to set
     */
    public void setLastModifiedDate(Timestamp lastModifiedDate) {
        this.lastModifiedDate = lastModifiedDate;
    }
    /**
     * Auto generated value setter.
     * @param lastModifiedByUserLogin the lastModifiedByUserLogin to set
     */
    public void setLastModifiedByUserLogin(String lastModifiedByUserLogin) {
        this.lastModifiedByUserLogin = lastModifiedByUserLogin;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedStamp the lastUpdatedStamp to set
     */
    public void setLastUpdatedStamp(Timestamp lastUpdatedStamp) {
        this.lastUpdatedStamp = lastUpdatedStamp;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedTxStamp the lastUpdatedTxStamp to set
     */
    public void setLastUpdatedTxStamp(Timestamp lastUpdatedTxStamp) {
        this.lastUpdatedTxStamp = lastUpdatedTxStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdStamp the createdStamp to set
     */
    public void setCreatedStamp(Timestamp createdStamp) {
        this.createdStamp = createdStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdTxStamp the createdTxStamp to set
     */
    public void setCreatedTxStamp(Timestamp createdTxStamp) {
        this.createdTxStamp = createdTxStamp;
    }

    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getDataResourceId() {
        return this.dataResourceId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getDataResourceTypeId() {
        return this.dataResourceTypeId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getDataTemplateTypeId() {
        return this.dataTemplateTypeId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getDataCategoryId() {
        return this.dataCategoryId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getDataSourceId() {
        return this.dataSourceId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getStatusId() {
        return this.statusId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getDataResourceName() {
        return this.dataResourceName;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getLocaleString() {
        return this.localeString;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getMimeTypeId() {
        return this.mimeTypeId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getCharacterSetId() {
        return this.characterSetId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getObjectInfo() {
        return this.objectInfo;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getSurveyId() {
        return this.surveyId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getSurveyResponseId() {
        return this.surveyResponseId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getRelatedDetailId() {
        return this.relatedDetailId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getIsPublic() {
        return this.isPublic;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedDate() {
        return this.createdDate;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getCreatedByUserLogin() {
        return this.createdByUserLogin;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastModifiedDate() {
        return this.lastModifiedDate;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getLastModifiedByUserLogin() {
        return this.lastModifiedByUserLogin;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedStamp() {
        return this.lastUpdatedStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedTxStamp() {
        return this.lastUpdatedTxStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedStamp() {
        return this.createdStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedTxStamp() {
        return this.createdTxStamp;
    }

    /**
     * Auto generated method that gets the related <code>StatusItem</code> by the relation named <code>StatusItem</code>.
     * @return the <code>StatusItem</code>
     * @throws RepositoryException if an error occurs
     */
    public StatusItem getStatusItem() throws RepositoryException {
        if (this.statusItem == null) {
            this.statusItem = getRelatedOne(StatusItem.class, "StatusItem");
        }
        return this.statusItem;
    }
    /**
     * Auto generated method that gets the related <code>DataResourceType</code> by the relation named <code>DataResourceType</code>.
     * @return the <code>DataResourceType</code>
     * @throws RepositoryException if an error occurs
     */
    public DataResourceType getDataResourceType() throws RepositoryException {
        if (this.dataResourceType == null) {
            this.dataResourceType = getRelatedOne(DataResourceType.class, "DataResourceType");
        }
        return this.dataResourceType;
    }
    /**
     * Auto generated method that gets the related <code>DataTemplateType</code> by the relation named <code>DataTemplateType</code>.
     * @return the <code>DataTemplateType</code>
     * @throws RepositoryException if an error occurs
     */
    public DataTemplateType getDataTemplateType() throws RepositoryException {
        if (this.dataTemplateType == null) {
            this.dataTemplateType = getRelatedOne(DataTemplateType.class, "DataTemplateType");
        }
        return this.dataTemplateType;
    }
    /**
     * Auto generated method that gets the related <code>DataCategory</code> by the relation named <code>DataCategory</code>.
     * @return the <code>DataCategory</code>
     * @throws RepositoryException if an error occurs
     */
    public DataCategory getDataCategory() throws RepositoryException {
        if (this.dataCategory == null) {
            this.dataCategory = getRelatedOne(DataCategory.class, "DataCategory");
        }
        return this.dataCategory;
    }
    /**
     * Auto generated method that gets the related <code>DataSource</code> by the relation named <code>DataSource</code>.
     * @return the <code>DataSource</code>
     * @throws RepositoryException if an error occurs
     */
    public DataSource getDataSource() throws RepositoryException {
        if (this.dataSource == null) {
            this.dataSource = getRelatedOne(DataSource.class, "DataSource");
        }
        return this.dataSource;
    }
    /**
     * Auto generated method that gets the related <code>MimeType</code> by the relation named <code>MimeType</code>.
     * @return the <code>MimeType</code>
     * @throws RepositoryException if an error occurs
     */
    public MimeType getMimeType() throws RepositoryException {
        if (this.mimeType == null) {
            this.mimeType = getRelatedOne(MimeType.class, "MimeType");
        }
        return this.mimeType;
    }
    /**
     * Auto generated method that gets the related <code>CharacterSet</code> by the relation named <code>CharacterSet</code>.
     * @return the <code>CharacterSet</code>
     * @throws RepositoryException if an error occurs
     */
    public CharacterSet getCharacterSet() throws RepositoryException {
        if (this.characterSet == null) {
            this.characterSet = getRelatedOne(CharacterSet.class, "CharacterSet");
        }
        return this.characterSet;
    }
    /**
     * Auto generated method that gets the related <code>DataResourceTypeAttr</code> by the relation named <code>DataResourceTypeAttr</code>.
     * @return the list of <code>DataResourceTypeAttr</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends DataResourceTypeAttr> getDataResourceTypeAttrs() throws RepositoryException {
        if (this.dataResourceTypeAttrs == null) {
            this.dataResourceTypeAttrs = getRelated(DataResourceTypeAttr.class, "DataResourceTypeAttr");
        }
        return this.dataResourceTypeAttrs;
    }
    /**
     * Auto generated method that gets the related <code>UserLogin</code> by the relation named <code>CreatedByUserLogin</code>.
     * @return the <code>UserLogin</code>
     * @throws RepositoryException if an error occurs
     */
    public UserLogin getRelatedCreatedByUserLogin() throws RepositoryException {
        if (this.relatedCreatedByUserLogin == null) {
            this.relatedCreatedByUserLogin = getRelatedOne(UserLogin.class, "CreatedByUserLogin");
        }
        return this.relatedCreatedByUserLogin;
    }
    /**
     * Auto generated method that gets the related <code>UserLogin</code> by the relation named <code>LastModifiedByUserLogin</code>.
     * @return the <code>UserLogin</code>
     * @throws RepositoryException if an error occurs
     */
    public UserLogin getRelatedLastModifiedByUserLogin() throws RepositoryException {
        if (this.relatedLastModifiedByUserLogin == null) {
            this.relatedLastModifiedByUserLogin = getRelatedOne(UserLogin.class, "LastModifiedByUserLogin");
        }
        return this.relatedLastModifiedByUserLogin;
    }
    /**
     * Auto generated method that gets the related <code>Survey</code> by the relation named <code>Survey</code>.
     * @return the <code>Survey</code>
     * @throws RepositoryException if an error occurs
     */
    public Survey getSurvey() throws RepositoryException {
        if (this.survey == null) {
            this.survey = getRelatedOne(Survey.class, "Survey");
        }
        return this.survey;
    }
    /**
     * Auto generated method that gets the related <code>SurveyResponse</code> by the relation named <code>SurveyResponse</code>.
     * @return the <code>SurveyResponse</code>
     * @throws RepositoryException if an error occurs
     */
    public SurveyResponse getSurveyResponse() throws RepositoryException {
        if (this.surveyResponse == null) {
            this.surveyResponse = getRelatedOne(SurveyResponse.class, "SurveyResponse");
        }
        return this.surveyResponse;
    }
    /**
     * Auto generated method that gets the related <code>AudioDataResource</code> by the relation named <code>AudioDataResource</code>.
     * @return the <code>AudioDataResource</code>
     * @throws RepositoryException if an error occurs
     */
    public AudioDataResource getAudioDataResource() throws RepositoryException {
        if (this.audioDataResource == null) {
            this.audioDataResource = getRelatedOne(AudioDataResource.class, "AudioDataResource");
        }
        return this.audioDataResource;
    }
    /**
     * Auto generated method that gets the related <code>Content</code> by the relation named <code>Content</code>.
     * @return the list of <code>Content</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends Content> getContents() throws RepositoryException {
        if (this.contents == null) {
            this.contents = getRelated(Content.class, "Content");
        }
        return this.contents;
    }
    /**
     * Auto generated method that gets the related <code>Content</code> by the relation named <code>TemplateContent</code>.
     * @return the list of <code>Content</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends Content> getTemplateContents() throws RepositoryException {
        if (this.templateContents == null) {
            this.templateContents = getRelated(Content.class, "TemplateContent");
        }
        return this.templateContents;
    }
    /**
     * Auto generated method that gets the related <code>ContentRevisionItem</code> by the relation named <code>OldContentRevisionItem</code>.
     * @return the list of <code>ContentRevisionItem</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ContentRevisionItem> getOldContentRevisionItems() throws RepositoryException {
        if (this.oldContentRevisionItems == null) {
            this.oldContentRevisionItems = getRelated(ContentRevisionItem.class, "OldContentRevisionItem");
        }
        return this.oldContentRevisionItems;
    }
    /**
     * Auto generated method that gets the related <code>ContentRevisionItem</code> by the relation named <code>NewContentRevisionItem</code>.
     * @return the list of <code>ContentRevisionItem</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ContentRevisionItem> getNewContentRevisionItems() throws RepositoryException {
        if (this.newContentRevisionItems == null) {
            this.newContentRevisionItems = getRelated(ContentRevisionItem.class, "NewContentRevisionItem");
        }
        return this.newContentRevisionItems;
    }
    /**
     * Auto generated method that gets the related <code>DataResourceAttribute</code> by the relation named <code>DataResourceAttribute</code>.
     * @return the list of <code>DataResourceAttribute</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends DataResourceAttribute> getDataResourceAttributes() throws RepositoryException {
        if (this.dataResourceAttributes == null) {
            this.dataResourceAttributes = getRelated(DataResourceAttribute.class, "DataResourceAttribute");
        }
        return this.dataResourceAttributes;
    }
    /**
     * Auto generated method that gets the related <code>DataResourceMetaData</code> by the relation named <code>DataResourceMetaData</code>.
     * @return the list of <code>DataResourceMetaData</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends DataResourceMetaData> getDataResourceMetaDatas() throws RepositoryException {
        if (this.dataResourceMetaDatas == null) {
            this.dataResourceMetaDatas = getRelated(DataResourceMetaData.class, "DataResourceMetaData");
        }
        return this.dataResourceMetaDatas;
    }
    /**
     * Auto generated method that gets the related <code>DataResourcePurpose</code> by the relation named <code>DataResourcePurpose</code>.
     * @return the list of <code>DataResourcePurpose</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends DataResourcePurpose> getDataResourcePurposes() throws RepositoryException {
        if (this.dataResourcePurposes == null) {
            this.dataResourcePurposes = getRelated(DataResourcePurpose.class, "DataResourcePurpose");
        }
        return this.dataResourcePurposes;
    }
    /**
     * Auto generated method that gets the related <code>DataResourceRole</code> by the relation named <code>DataResourceRole</code>.
     * @return the list of <code>DataResourceRole</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends DataResourceRole> getDataResourceRoles() throws RepositoryException {
        if (this.dataResourceRoles == null) {
            this.dataResourceRoles = getRelated(DataResourceRole.class, "DataResourceRole");
        }
        return this.dataResourceRoles;
    }
    /**
     * Auto generated method that gets the related <code>ElectronicText</code> by the relation named <code>ElectronicText</code>.
     * @return the <code>ElectronicText</code>
     * @throws RepositoryException if an error occurs
     */
    public ElectronicText getElectronicText() throws RepositoryException {
        if (this.electronicText == null) {
            this.electronicText = getRelatedOne(ElectronicText.class, "ElectronicText");
        }
        return this.electronicText;
    }
    /**
     * Auto generated method that gets the related <code>ImageDataResource</code> by the relation named <code>ImageDataResource</code>.
     * @return the <code>ImageDataResource</code>
     * @throws RepositoryException if an error occurs
     */
    public ImageDataResource getImageDataResource() throws RepositoryException {
        if (this.imageDataResource == null) {
            this.imageDataResource = getRelatedOne(ImageDataResource.class, "ImageDataResource");
        }
        return this.imageDataResource;
    }
    /**
     * Auto generated method that gets the related <code>OtherDataResource</code> by the relation named <code>OtherDataResource</code>.
     * @return the <code>OtherDataResource</code>
     * @throws RepositoryException if an error occurs
     */
    public OtherDataResource getOtherDataResource() throws RepositoryException {
        if (this.otherDataResource == null) {
            this.otherDataResource = getRelatedOne(OtherDataResource.class, "OtherDataResource");
        }
        return this.otherDataResource;
    }
    /**
     * Auto generated method that gets the related <code>ProductFeatureDataResource</code> by the relation named <code>ProductFeatureDataResource</code>.
     * @return the list of <code>ProductFeatureDataResource</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ProductFeatureDataResource> getProductFeatureDataResources() throws RepositoryException {
        if (this.productFeatureDataResources == null) {
            this.productFeatureDataResources = getRelated(ProductFeatureDataResource.class, "ProductFeatureDataResource");
        }
        return this.productFeatureDataResources;
    }
    /**
     * Auto generated method that gets the related <code>VideoDataResource</code> by the relation named <code>VideoDataResource</code>.
     * @return the <code>VideoDataResource</code>
     * @throws RepositoryException if an error occurs
     */
    public VideoDataResource getVideoDataResource() throws RepositoryException {
        if (this.videoDataResource == null) {
            this.videoDataResource = getRelatedOne(VideoDataResource.class, "VideoDataResource");
        }
        return this.videoDataResource;
    }

    /**
     * Auto generated value setter.
     * @param statusItem the statusItem to set
    */
    public void setStatusItem(StatusItem statusItem) {
        this.statusItem = statusItem;
    }
    /**
     * Auto generated value setter.
     * @param dataResourceType the dataResourceType to set
    */
    public void setDataResourceType(DataResourceType dataResourceType) {
        this.dataResourceType = dataResourceType;
    }
    /**
     * Auto generated value setter.
     * @param dataTemplateType the dataTemplateType to set
    */
    public void setDataTemplateType(DataTemplateType dataTemplateType) {
        this.dataTemplateType = dataTemplateType;
    }
    /**
     * Auto generated value setter.
     * @param dataCategory the dataCategory to set
    */
    public void setDataCategory(DataCategory dataCategory) {
        this.dataCategory = dataCategory;
    }
    /**
     * Auto generated value setter.
     * @param dataSource the dataSource to set
    */
    public void setDataSource(DataSource dataSource) {
        this.dataSource = dataSource;
    }
    /**
     * Auto generated value setter.
     * @param mimeType the mimeType to set
    */
    public void setMimeType(MimeType mimeType) {
        this.mimeType = mimeType;
    }
    /**
     * Auto generated value setter.
     * @param characterSet the characterSet to set
    */
    public void setCharacterSet(CharacterSet characterSet) {
        this.characterSet = characterSet;
    }
    /**
     * Auto generated value setter.
     * @param dataResourceTypeAttrs the dataResourceTypeAttrs to set
    */
    public void setDataResourceTypeAttrs(List<DataResourceTypeAttr> dataResourceTypeAttrs) {
        this.dataResourceTypeAttrs = dataResourceTypeAttrs;
    }
    /**
     * Auto generated value setter.
     * @param relatedCreatedByUserLogin the relatedCreatedByUserLogin to set
    */
    public void setRelatedCreatedByUserLogin(UserLogin relatedCreatedByUserLogin) {
        this.relatedCreatedByUserLogin = relatedCreatedByUserLogin;
    }
    /**
     * Auto generated value setter.
     * @param relatedLastModifiedByUserLogin the relatedLastModifiedByUserLogin to set
    */
    public void setRelatedLastModifiedByUserLogin(UserLogin relatedLastModifiedByUserLogin) {
        this.relatedLastModifiedByUserLogin = relatedLastModifiedByUserLogin;
    }
    /**
     * Auto generated value setter.
     * @param survey the survey to set
    */
    public void setSurvey(Survey survey) {
        this.survey = survey;
    }
    /**
     * Auto generated value setter.
     * @param surveyResponse the surveyResponse to set
    */
    public void setSurveyResponse(SurveyResponse surveyResponse) {
        this.surveyResponse = surveyResponse;
    }
    /**
     * Auto generated value setter.
     * @param audioDataResource the audioDataResource to set
    */
    public void setAudioDataResource(AudioDataResource audioDataResource) {
        this.audioDataResource = audioDataResource;
    }
    /**
     * Auto generated value setter.
     * @param contents the contents to set
    */
    public void setContents(List<Content> contents) {
        this.contents = contents;
    }
    /**
     * Auto generated value setter.
     * @param templateContents the templateContents to set
    */
    public void setTemplateContents(List<Content> templateContents) {
        this.templateContents = templateContents;
    }
    /**
     * Auto generated value setter.
     * @param oldContentRevisionItems the oldContentRevisionItems to set
    */
    public void setOldContentRevisionItems(List<ContentRevisionItem> oldContentRevisionItems) {
        this.oldContentRevisionItems = oldContentRevisionItems;
    }
    /**
     * Auto generated value setter.
     * @param newContentRevisionItems the newContentRevisionItems to set
    */
    public void setNewContentRevisionItems(List<ContentRevisionItem> newContentRevisionItems) {
        this.newContentRevisionItems = newContentRevisionItems;
    }
    /**
     * Auto generated value setter.
     * @param dataResourceAttributes the dataResourceAttributes to set
    */
    public void setDataResourceAttributes(List<DataResourceAttribute> dataResourceAttributes) {
        this.dataResourceAttributes = dataResourceAttributes;
    }
    /**
     * Auto generated value setter.
     * @param dataResourceMetaDatas the dataResourceMetaDatas to set
    */
    public void setDataResourceMetaDatas(List<DataResourceMetaData> dataResourceMetaDatas) {
        this.dataResourceMetaDatas = dataResourceMetaDatas;
    }
    /**
     * Auto generated value setter.
     * @param dataResourcePurposes the dataResourcePurposes to set
    */
    public void setDataResourcePurposes(List<DataResourcePurpose> dataResourcePurposes) {
        this.dataResourcePurposes = dataResourcePurposes;
    }
    /**
     * Auto generated value setter.
     * @param dataResourceRoles the dataResourceRoles to set
    */
    public void setDataResourceRoles(List<DataResourceRole> dataResourceRoles) {
        this.dataResourceRoles = dataResourceRoles;
    }
    /**
     * Auto generated value setter.
     * @param electronicText the electronicText to set
    */
    public void setElectronicText(ElectronicText electronicText) {
        this.electronicText = electronicText;
    }
    /**
     * Auto generated value setter.
     * @param imageDataResource the imageDataResource to set
    */
    public void setImageDataResource(ImageDataResource imageDataResource) {
        this.imageDataResource = imageDataResource;
    }
    /**
     * Auto generated value setter.
     * @param otherDataResource the otherDataResource to set
    */
    public void setOtherDataResource(OtherDataResource otherDataResource) {
        this.otherDataResource = otherDataResource;
    }
    /**
     * Auto generated value setter.
     * @param productFeatureDataResources the productFeatureDataResources to set
    */
    public void setProductFeatureDataResources(List<ProductFeatureDataResource> productFeatureDataResources) {
        this.productFeatureDataResources = productFeatureDataResources;
    }
    /**
     * Auto generated value setter.
     * @param videoDataResource the videoDataResource to set
    */
    public void setVideoDataResource(VideoDataResource videoDataResource) {
        this.videoDataResource = videoDataResource;
    }

    /**
     * Auto generated method that add item to collection.
     */
    public void addDataResourceAttribute(DataResourceAttribute dataResourceAttribute) {
        if (this.dataResourceAttributes == null) {
            this.dataResourceAttributes = new ArrayList<DataResourceAttribute>();
        }
        this.dataResourceAttributes.add(dataResourceAttribute);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeDataResourceAttribute(DataResourceAttribute dataResourceAttribute) {
        if (this.dataResourceAttributes == null) {
            return;
        }
        this.dataResourceAttributes.remove(dataResourceAttribute);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearDataResourceAttribute() {
        if (this.dataResourceAttributes == null) {
            return;
        }
        this.dataResourceAttributes.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addDataResourceMetaData(DataResourceMetaData dataResourceMetaData) {
        if (this.dataResourceMetaDatas == null) {
            this.dataResourceMetaDatas = new ArrayList<DataResourceMetaData>();
        }
        this.dataResourceMetaDatas.add(dataResourceMetaData);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeDataResourceMetaData(DataResourceMetaData dataResourceMetaData) {
        if (this.dataResourceMetaDatas == null) {
            return;
        }
        this.dataResourceMetaDatas.remove(dataResourceMetaData);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearDataResourceMetaData() {
        if (this.dataResourceMetaDatas == null) {
            return;
        }
        this.dataResourceMetaDatas.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addDataResourcePurpose(DataResourcePurpose dataResourcePurpose) {
        if (this.dataResourcePurposes == null) {
            this.dataResourcePurposes = new ArrayList<DataResourcePurpose>();
        }
        this.dataResourcePurposes.add(dataResourcePurpose);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeDataResourcePurpose(DataResourcePurpose dataResourcePurpose) {
        if (this.dataResourcePurposes == null) {
            return;
        }
        this.dataResourcePurposes.remove(dataResourcePurpose);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearDataResourcePurpose() {
        if (this.dataResourcePurposes == null) {
            return;
        }
        this.dataResourcePurposes.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addDataResourceRole(DataResourceRole dataResourceRole) {
        if (this.dataResourceRoles == null) {
            this.dataResourceRoles = new ArrayList<DataResourceRole>();
        }
        this.dataResourceRoles.add(dataResourceRole);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeDataResourceRole(DataResourceRole dataResourceRole) {
        if (this.dataResourceRoles == null) {
            return;
        }
        this.dataResourceRoles.remove(dataResourceRole);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearDataResourceRole() {
        if (this.dataResourceRoles == null) {
            return;
        }
        this.dataResourceRoles.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addProductFeatureDataResource(ProductFeatureDataResource productFeatureDataResource) {
        if (this.productFeatureDataResources == null) {
            this.productFeatureDataResources = new ArrayList<ProductFeatureDataResource>();
        }
        this.productFeatureDataResources.add(productFeatureDataResource);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeProductFeatureDataResource(ProductFeatureDataResource productFeatureDataResource) {
        if (this.productFeatureDataResources == null) {
            return;
        }
        this.productFeatureDataResources.remove(productFeatureDataResource);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearProductFeatureDataResource() {
        if (this.productFeatureDataResources == null) {
            return;
        }
        this.productFeatureDataResources.clear();
    }

    /** {@inheritDoc} */
    @Override
    public void fromMap(Map<String, Object> mapValue) {
        preInit();
        setDataResourceId((String) mapValue.get("dataResourceId"));
        setDataResourceTypeId((String) mapValue.get("dataResourceTypeId"));
        setDataTemplateTypeId((String) mapValue.get("dataTemplateTypeId"));
        setDataCategoryId((String) mapValue.get("dataCategoryId"));
        setDataSourceId((String) mapValue.get("dataSourceId"));
        setStatusId((String) mapValue.get("statusId"));
        setDataResourceName((String) mapValue.get("dataResourceName"));
        setLocaleString((String) mapValue.get("localeString"));
        setMimeTypeId((String) mapValue.get("mimeTypeId"));
        setCharacterSetId((String) mapValue.get("characterSetId"));
        setObjectInfo((String) mapValue.get("objectInfo"));
        setSurveyId((String) mapValue.get("surveyId"));
        setSurveyResponseId((String) mapValue.get("surveyResponseId"));
        setRelatedDetailId((String) mapValue.get("relatedDetailId"));
        setIsPublic((String) mapValue.get("isPublic"));
        setCreatedDate((Timestamp) mapValue.get("createdDate"));
        setCreatedByUserLogin((String) mapValue.get("createdByUserLogin"));
        setLastModifiedDate((Timestamp) mapValue.get("lastModifiedDate"));
        setLastModifiedByUserLogin((String) mapValue.get("lastModifiedByUserLogin"));
        setLastUpdatedStamp((Timestamp) mapValue.get("lastUpdatedStamp"));
        setLastUpdatedTxStamp((Timestamp) mapValue.get("lastUpdatedTxStamp"));
        setCreatedStamp((Timestamp) mapValue.get("createdStamp"));
        setCreatedTxStamp((Timestamp) mapValue.get("createdTxStamp"));
        postInit();
    }

    /** {@inheritDoc} */
    @Override
    public Map<String, Object> toMap() {
        Map<String, Object> mapValue = new FastMap<String, Object>();
        mapValue.put("dataResourceId", getDataResourceId());
        mapValue.put("dataResourceTypeId", getDataResourceTypeId());
        mapValue.put("dataTemplateTypeId", getDataTemplateTypeId());
        mapValue.put("dataCategoryId", getDataCategoryId());
        mapValue.put("dataSourceId", getDataSourceId());
        mapValue.put("statusId", getStatusId());
        mapValue.put("dataResourceName", getDataResourceName());
        mapValue.put("localeString", getLocaleString());
        mapValue.put("mimeTypeId", getMimeTypeId());
        mapValue.put("characterSetId", getCharacterSetId());
        mapValue.put("objectInfo", getObjectInfo());
        mapValue.put("surveyId", getSurveyId());
        mapValue.put("surveyResponseId", getSurveyResponseId());
        mapValue.put("relatedDetailId", getRelatedDetailId());
        mapValue.put("isPublic", getIsPublic());
        mapValue.put("createdDate", getCreatedDate());
        mapValue.put("createdByUserLogin", getCreatedByUserLogin());
        mapValue.put("lastModifiedDate", getLastModifiedDate());
        mapValue.put("lastModifiedByUserLogin", getLastModifiedByUserLogin());
        mapValue.put("lastUpdatedStamp", getLastUpdatedStamp());
        mapValue.put("lastUpdatedTxStamp", getLastUpdatedTxStamp());
        mapValue.put("createdStamp", getCreatedStamp());
        mapValue.put("createdTxStamp", getCreatedTxStamp());
        return mapValue;
    }


}
