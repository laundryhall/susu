package org.opentaps.base.entities;

/*
 * Copyright (c) Open Source Strategies, Inc.
 *
 * Opentaps is free software: you can redistribute it and/or modify it
 * under the terms of the GNU Affero General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Opentaps is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with Opentaps.  If not, see <http://www.gnu.org/licenses/>.
 */

// DO NOT EDIT THIS FILE!  THIS IS AUTO GENERATED AND WILL GET WRITTEN OVER PERIODICALLY WHEN THE DATA MODEL CHANGES
// EXTEND THIS CLASS INSTEAD.

import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;

import javolution.util.FastMap;

import org.opentaps.foundation.entity.Entity;
import org.opentaps.foundation.entity.EntityFieldInterface;
import org.opentaps.foundation.repository.RepositoryException;
import org.opentaps.foundation.repository.RepositoryInterface;
import javax.persistence.*;
import org.hibernate.search.annotations.*;
import java.lang.String;
import java.math.BigDecimal;
import java.sql.Timestamp;

/**
 * Auto generated base entity TaxAuthorityRateProduct.
 */
@javax.persistence.Entity
@Table(name="TAX_AUTHORITY_RATE_PRODUCT")
public class TaxAuthorityRateProduct extends Entity {
static {
java.util.Map<String, String> fields = new java.util.HashMap<String, String>();
        fields.put("taxAuthorityRateSeqId", "TAX_AUTHORITY_RATE_SEQ_ID");
        fields.put("taxAuthGeoId", "TAX_AUTH_GEO_ID");
        fields.put("taxAuthPartyId", "TAX_AUTH_PARTY_ID");
        fields.put("taxAuthorityRateTypeId", "TAX_AUTHORITY_RATE_TYPE_ID");
        fields.put("productStoreId", "PRODUCT_STORE_ID");
        fields.put("productCategoryId", "PRODUCT_CATEGORY_ID");
        fields.put("titleTransferEnumId", "TITLE_TRANSFER_ENUM_ID");
        fields.put("minItemPrice", "MIN_ITEM_PRICE");
        fields.put("minPurchase", "MIN_PURCHASE");
        fields.put("taxShipping", "TAX_SHIPPING");
        fields.put("taxPercentage", "TAX_PERCENTAGE");
        fields.put("taxPromotions", "TAX_PROMOTIONS");
        fields.put("fromDate", "FROM_DATE");
        fields.put("thruDate", "THRU_DATE");
        fields.put("description", "DESCRIPTION");
        fields.put("lastUpdatedStamp", "LAST_UPDATED_STAMP");
        fields.put("lastUpdatedTxStamp", "LAST_UPDATED_TX_STAMP");
        fields.put("createdStamp", "CREATED_STAMP");
        fields.put("createdTxStamp", "CREATED_TX_STAMP");
fieldMapColumns.put("TaxAuthorityRateProduct", fields);
}
  public static enum Fields implements EntityFieldInterface<TaxAuthorityRateProduct> {
    taxAuthorityRateSeqId("taxAuthorityRateSeqId"),
    taxAuthGeoId("taxAuthGeoId"),
    taxAuthPartyId("taxAuthPartyId"),
    taxAuthorityRateTypeId("taxAuthorityRateTypeId"),
    productStoreId("productStoreId"),
    productCategoryId("productCategoryId"),
    titleTransferEnumId("titleTransferEnumId"),
    minItemPrice("minItemPrice"),
    minPurchase("minPurchase"),
    taxShipping("taxShipping"),
    taxPercentage("taxPercentage"),
    taxPromotions("taxPromotions"),
    fromDate("fromDate"),
    thruDate("thruDate"),
    description("description"),
    lastUpdatedStamp("lastUpdatedStamp"),
    lastUpdatedTxStamp("lastUpdatedTxStamp"),
    createdStamp("createdStamp"),
    createdTxStamp("createdTxStamp");
    private final String fieldName;
    private Fields(String name) { fieldName = name; }
    /** {@inheritDoc} */
    public String getName() { return fieldName; }
    /** {@inheritDoc} */
    public String asc() { return fieldName + " ASC"; }
    /** {@inheritDoc} */
    public String desc() { return fieldName + " DESC"; }
  }

   @org.hibernate.annotations.GenericGenerator(name="TaxAuthorityRateProduct_GEN",  strategy="org.opentaps.foundation.entity.hibernate.OpentapsIdentifierGenerator")
   @GeneratedValue(generator="TaxAuthorityRateProduct_GEN")
   @Id
   @Column(name="TAX_AUTHORITY_RATE_SEQ_ID")
   private String taxAuthorityRateSeqId;
   @Column(name="TAX_AUTH_GEO_ID")
   private String taxAuthGeoId;
   @Column(name="TAX_AUTH_PARTY_ID")
   private String taxAuthPartyId;
   @Column(name="TAX_AUTHORITY_RATE_TYPE_ID")
   private String taxAuthorityRateTypeId;
   @Column(name="PRODUCT_STORE_ID")
   private String productStoreId;
   @Column(name="PRODUCT_CATEGORY_ID")
   private String productCategoryId;
   @Column(name="TITLE_TRANSFER_ENUM_ID")
   private String titleTransferEnumId;
   @Column(name="MIN_ITEM_PRICE")
   private BigDecimal minItemPrice;
   @Column(name="MIN_PURCHASE")
   private BigDecimal minPurchase;
   @Column(name="TAX_SHIPPING")
   private String taxShipping;
   @Column(name="TAX_PERCENTAGE")
   private BigDecimal taxPercentage;
   @Column(name="TAX_PROMOTIONS")
   private String taxPromotions;
   @Column(name="FROM_DATE")
   private Timestamp fromDate;
   @Column(name="THRU_DATE")
   private Timestamp thruDate;
   @Column(name="DESCRIPTION")
   private String description;
   @Column(name="LAST_UPDATED_STAMP")
   private Timestamp lastUpdatedStamp;
   @Column(name="LAST_UPDATED_TX_STAMP")
   private Timestamp lastUpdatedTxStamp;
   @Column(name="CREATED_STAMP")
   private Timestamp createdStamp;
   @Column(name="CREATED_TX_STAMP")
   private Timestamp createdTxStamp;
   private transient TaxAuthority taxAuthority = null;
   @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="TAX_AUTHORITY_RATE_TYPE_ID", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private TaxAuthorityRateType taxAuthorityRateType = null;
   @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="PRODUCT_STORE_ID", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private ProductStore productStore = null;
   @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="PRODUCT_CATEGORY_ID", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private ProductCategory productCategory = null;
   private transient List<InvoiceItem> invoiceItems = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="taxAuthorityRateProduct", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="TAX_AUTHORITY_RATE_SEQ_ID")
   
   private List<OrderAdjustment> orderAdjustments = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="taxAuthorityRateProduct", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="TAX_AUTHORITY_RATE_SEQ_ID")
   
   private List<ReturnAdjustment> returnAdjustments = null;

  /**
   * Default constructor.
   */
  public TaxAuthorityRateProduct() {
      super();
      this.baseEntityName = "TaxAuthorityRateProduct";
      this.isView = false;
      
      this.primaryKeyNames = new ArrayList<String>();
      this.primaryKeyNames.add("taxAuthorityRateSeqId");
      this.allFieldsNames = new ArrayList<String>();
      this.allFieldsNames.add("taxAuthorityRateSeqId");this.allFieldsNames.add("taxAuthGeoId");this.allFieldsNames.add("taxAuthPartyId");this.allFieldsNames.add("taxAuthorityRateTypeId");this.allFieldsNames.add("productStoreId");this.allFieldsNames.add("productCategoryId");this.allFieldsNames.add("titleTransferEnumId");this.allFieldsNames.add("minItemPrice");this.allFieldsNames.add("minPurchase");this.allFieldsNames.add("taxShipping");this.allFieldsNames.add("taxPercentage");this.allFieldsNames.add("taxPromotions");this.allFieldsNames.add("fromDate");this.allFieldsNames.add("thruDate");this.allFieldsNames.add("description");this.allFieldsNames.add("lastUpdatedStamp");this.allFieldsNames.add("lastUpdatedTxStamp");this.allFieldsNames.add("createdStamp");this.allFieldsNames.add("createdTxStamp");
      this.nonPrimaryKeyNames = new ArrayList<String>();
      this.nonPrimaryKeyNames.addAll(allFieldsNames);
      this.nonPrimaryKeyNames.removeAll(primaryKeyNames);
  }

  /**
   * Constructor with a repository.
   * @param repository a <code>RepositoryInterface</code> value
   */
  public TaxAuthorityRateProduct(RepositoryInterface repository) {
      this();
      initRepository(repository);
  }

    /**
     * Auto generated value setter.
     * @param taxAuthorityRateSeqId the taxAuthorityRateSeqId to set
     */
    public void setTaxAuthorityRateSeqId(String taxAuthorityRateSeqId) {
        this.taxAuthorityRateSeqId = taxAuthorityRateSeqId;
    }
    /**
     * Auto generated value setter.
     * @param taxAuthGeoId the taxAuthGeoId to set
     */
    public void setTaxAuthGeoId(String taxAuthGeoId) {
        this.taxAuthGeoId = taxAuthGeoId;
    }
    /**
     * Auto generated value setter.
     * @param taxAuthPartyId the taxAuthPartyId to set
     */
    public void setTaxAuthPartyId(String taxAuthPartyId) {
        this.taxAuthPartyId = taxAuthPartyId;
    }
    /**
     * Auto generated value setter.
     * @param taxAuthorityRateTypeId the taxAuthorityRateTypeId to set
     */
    public void setTaxAuthorityRateTypeId(String taxAuthorityRateTypeId) {
        this.taxAuthorityRateTypeId = taxAuthorityRateTypeId;
    }
    /**
     * Auto generated value setter.
     * @param productStoreId the productStoreId to set
     */
    public void setProductStoreId(String productStoreId) {
        this.productStoreId = productStoreId;
    }
    /**
     * Auto generated value setter.
     * @param productCategoryId the productCategoryId to set
     */
    public void setProductCategoryId(String productCategoryId) {
        this.productCategoryId = productCategoryId;
    }
    /**
     * Auto generated value setter.
     * @param titleTransferEnumId the titleTransferEnumId to set
     */
    public void setTitleTransferEnumId(String titleTransferEnumId) {
        this.titleTransferEnumId = titleTransferEnumId;
    }
    /**
     * Auto generated value setter.
     * @param minItemPrice the minItemPrice to set
     */
    public void setMinItemPrice(BigDecimal minItemPrice) {
        this.minItemPrice = minItemPrice;
    }
    /**
     * Auto generated value setter.
     * @param minPurchase the minPurchase to set
     */
    public void setMinPurchase(BigDecimal minPurchase) {
        this.minPurchase = minPurchase;
    }
    /**
     * Auto generated value setter.
     * @param taxShipping the taxShipping to set
     */
    public void setTaxShipping(String taxShipping) {
        this.taxShipping = taxShipping;
    }
    /**
     * Auto generated value setter.
     * @param taxPercentage the taxPercentage to set
     */
    public void setTaxPercentage(BigDecimal taxPercentage) {
        this.taxPercentage = taxPercentage;
    }
    /**
     * Auto generated value setter.
     * @param taxPromotions the taxPromotions to set
     */
    public void setTaxPromotions(String taxPromotions) {
        this.taxPromotions = taxPromotions;
    }
    /**
     * Auto generated value setter.
     * @param fromDate the fromDate to set
     */
    public void setFromDate(Timestamp fromDate) {
        this.fromDate = fromDate;
    }
    /**
     * Auto generated value setter.
     * @param thruDate the thruDate to set
     */
    public void setThruDate(Timestamp thruDate) {
        this.thruDate = thruDate;
    }
    /**
     * Auto generated value setter.
     * @param description the description to set
     */
    public void setDescription(String description) {
        this.description = description;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedStamp the lastUpdatedStamp to set
     */
    public void setLastUpdatedStamp(Timestamp lastUpdatedStamp) {
        this.lastUpdatedStamp = lastUpdatedStamp;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedTxStamp the lastUpdatedTxStamp to set
     */
    public void setLastUpdatedTxStamp(Timestamp lastUpdatedTxStamp) {
        this.lastUpdatedTxStamp = lastUpdatedTxStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdStamp the createdStamp to set
     */
    public void setCreatedStamp(Timestamp createdStamp) {
        this.createdStamp = createdStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdTxStamp the createdTxStamp to set
     */
    public void setCreatedTxStamp(Timestamp createdTxStamp) {
        this.createdTxStamp = createdTxStamp;
    }

    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getTaxAuthorityRateSeqId() {
        return this.taxAuthorityRateSeqId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getTaxAuthGeoId() {
        return this.taxAuthGeoId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getTaxAuthPartyId() {
        return this.taxAuthPartyId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getTaxAuthorityRateTypeId() {
        return this.taxAuthorityRateTypeId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getProductStoreId() {
        return this.productStoreId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getProductCategoryId() {
        return this.productCategoryId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getTitleTransferEnumId() {
        return this.titleTransferEnumId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getMinItemPrice() {
        return this.minItemPrice;
    }
    /**
     * Auto generated value accessor.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getMinPurchase() {
        return this.minPurchase;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getTaxShipping() {
        return this.taxShipping;
    }
    /**
     * Auto generated value accessor.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getTaxPercentage() {
        return this.taxPercentage;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getTaxPromotions() {
        return this.taxPromotions;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getFromDate() {
        return this.fromDate;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getThruDate() {
        return this.thruDate;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getDescription() {
        return this.description;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedStamp() {
        return this.lastUpdatedStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedTxStamp() {
        return this.lastUpdatedTxStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedStamp() {
        return this.createdStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedTxStamp() {
        return this.createdTxStamp;
    }

    /**
     * Auto generated method that gets the related <code>TaxAuthority</code> by the relation named <code>TaxAuthority</code>.
     * @return the <code>TaxAuthority</code>
     * @throws RepositoryException if an error occurs
     */
    public TaxAuthority getTaxAuthority() throws RepositoryException {
        if (this.taxAuthority == null) {
            this.taxAuthority = getRelatedOne(TaxAuthority.class, "TaxAuthority");
        }
        return this.taxAuthority;
    }
    /**
     * Auto generated method that gets the related <code>TaxAuthorityRateType</code> by the relation named <code>TaxAuthorityRateType</code>.
     * @return the <code>TaxAuthorityRateType</code>
     * @throws RepositoryException if an error occurs
     */
    public TaxAuthorityRateType getTaxAuthorityRateType() throws RepositoryException {
        if (this.taxAuthorityRateType == null) {
            this.taxAuthorityRateType = getRelatedOne(TaxAuthorityRateType.class, "TaxAuthorityRateType");
        }
        return this.taxAuthorityRateType;
    }
    /**
     * Auto generated method that gets the related <code>ProductStore</code> by the relation named <code>ProductStore</code>.
     * @return the <code>ProductStore</code>
     * @throws RepositoryException if an error occurs
     */
    public ProductStore getProductStore() throws RepositoryException {
        if (this.productStore == null) {
            this.productStore = getRelatedOne(ProductStore.class, "ProductStore");
        }
        return this.productStore;
    }
    /**
     * Auto generated method that gets the related <code>ProductCategory</code> by the relation named <code>ProductCategory</code>.
     * @return the <code>ProductCategory</code>
     * @throws RepositoryException if an error occurs
     */
    public ProductCategory getProductCategory() throws RepositoryException {
        if (this.productCategory == null) {
            this.productCategory = getRelatedOne(ProductCategory.class, "ProductCategory");
        }
        return this.productCategory;
    }
    /**
     * Auto generated method that gets the related <code>InvoiceItem</code> by the relation named <code>InvoiceItem</code>.
     * @return the list of <code>InvoiceItem</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends InvoiceItem> getInvoiceItems() throws RepositoryException {
        if (this.invoiceItems == null) {
            this.invoiceItems = getRelated(InvoiceItem.class, "InvoiceItem");
        }
        return this.invoiceItems;
    }
    /**
     * Auto generated method that gets the related <code>OrderAdjustment</code> by the relation named <code>OrderAdjustment</code>.
     * @return the list of <code>OrderAdjustment</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends OrderAdjustment> getOrderAdjustments() throws RepositoryException {
        if (this.orderAdjustments == null) {
            this.orderAdjustments = getRelated(OrderAdjustment.class, "OrderAdjustment");
        }
        return this.orderAdjustments;
    }
    /**
     * Auto generated method that gets the related <code>ReturnAdjustment</code> by the relation named <code>ReturnAdjustment</code>.
     * @return the list of <code>ReturnAdjustment</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ReturnAdjustment> getReturnAdjustments() throws RepositoryException {
        if (this.returnAdjustments == null) {
            this.returnAdjustments = getRelated(ReturnAdjustment.class, "ReturnAdjustment");
        }
        return this.returnAdjustments;
    }

    /**
     * Auto generated value setter.
     * @param taxAuthority the taxAuthority to set
    */
    public void setTaxAuthority(TaxAuthority taxAuthority) {
        this.taxAuthority = taxAuthority;
    }
    /**
     * Auto generated value setter.
     * @param taxAuthorityRateType the taxAuthorityRateType to set
    */
    public void setTaxAuthorityRateType(TaxAuthorityRateType taxAuthorityRateType) {
        this.taxAuthorityRateType = taxAuthorityRateType;
    }
    /**
     * Auto generated value setter.
     * @param productStore the productStore to set
    */
    public void setProductStore(ProductStore productStore) {
        this.productStore = productStore;
    }
    /**
     * Auto generated value setter.
     * @param productCategory the productCategory to set
    */
    public void setProductCategory(ProductCategory productCategory) {
        this.productCategory = productCategory;
    }
    /**
     * Auto generated value setter.
     * @param invoiceItems the invoiceItems to set
    */
    public void setInvoiceItems(List<InvoiceItem> invoiceItems) {
        this.invoiceItems = invoiceItems;
    }
    /**
     * Auto generated value setter.
     * @param orderAdjustments the orderAdjustments to set
    */
    public void setOrderAdjustments(List<OrderAdjustment> orderAdjustments) {
        this.orderAdjustments = orderAdjustments;
    }
    /**
     * Auto generated value setter.
     * @param returnAdjustments the returnAdjustments to set
    */
    public void setReturnAdjustments(List<ReturnAdjustment> returnAdjustments) {
        this.returnAdjustments = returnAdjustments;
    }


    /** {@inheritDoc} */
    @Override
    public void fromMap(Map<String, Object> mapValue) {
        preInit();
        setTaxAuthorityRateSeqId((String) mapValue.get("taxAuthorityRateSeqId"));
        setTaxAuthGeoId((String) mapValue.get("taxAuthGeoId"));
        setTaxAuthPartyId((String) mapValue.get("taxAuthPartyId"));
        setTaxAuthorityRateTypeId((String) mapValue.get("taxAuthorityRateTypeId"));
        setProductStoreId((String) mapValue.get("productStoreId"));
        setProductCategoryId((String) mapValue.get("productCategoryId"));
        setTitleTransferEnumId((String) mapValue.get("titleTransferEnumId"));
        setMinItemPrice(convertToBigDecimal(mapValue.get("minItemPrice")));
        setMinPurchase(convertToBigDecimal(mapValue.get("minPurchase")));
        setTaxShipping((String) mapValue.get("taxShipping"));
        setTaxPercentage(convertToBigDecimal(mapValue.get("taxPercentage")));
        setTaxPromotions((String) mapValue.get("taxPromotions"));
        setFromDate((Timestamp) mapValue.get("fromDate"));
        setThruDate((Timestamp) mapValue.get("thruDate"));
        setDescription((String) mapValue.get("description"));
        setLastUpdatedStamp((Timestamp) mapValue.get("lastUpdatedStamp"));
        setLastUpdatedTxStamp((Timestamp) mapValue.get("lastUpdatedTxStamp"));
        setCreatedStamp((Timestamp) mapValue.get("createdStamp"));
        setCreatedTxStamp((Timestamp) mapValue.get("createdTxStamp"));
        postInit();
    }

    /** {@inheritDoc} */
    @Override
    public Map<String, Object> toMap() {
        Map<String, Object> mapValue = new FastMap<String, Object>();
        mapValue.put("taxAuthorityRateSeqId", getTaxAuthorityRateSeqId());
        mapValue.put("taxAuthGeoId", getTaxAuthGeoId());
        mapValue.put("taxAuthPartyId", getTaxAuthPartyId());
        mapValue.put("taxAuthorityRateTypeId", getTaxAuthorityRateTypeId());
        mapValue.put("productStoreId", getProductStoreId());
        mapValue.put("productCategoryId", getProductCategoryId());
        mapValue.put("titleTransferEnumId", getTitleTransferEnumId());
        mapValue.put("minItemPrice", getMinItemPrice());
        mapValue.put("minPurchase", getMinPurchase());
        mapValue.put("taxShipping", getTaxShipping());
        mapValue.put("taxPercentage", getTaxPercentage());
        mapValue.put("taxPromotions", getTaxPromotions());
        mapValue.put("fromDate", getFromDate());
        mapValue.put("thruDate", getThruDate());
        mapValue.put("description", getDescription());
        mapValue.put("lastUpdatedStamp", getLastUpdatedStamp());
        mapValue.put("lastUpdatedTxStamp", getLastUpdatedTxStamp());
        mapValue.put("createdStamp", getCreatedStamp());
        mapValue.put("createdTxStamp", getCreatedTxStamp());
        return mapValue;
    }


}
