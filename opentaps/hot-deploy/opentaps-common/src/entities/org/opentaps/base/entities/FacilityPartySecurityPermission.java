package org.opentaps.base.entities;

/*
 * Copyright (c) Open Source Strategies, Inc.
 *
 * Opentaps is free software: you can redistribute it and/or modify it
 * under the terms of the GNU Affero General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Opentaps is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with Opentaps.  If not, see <http://www.gnu.org/licenses/>.
 */

// DO NOT EDIT THIS FILE!  THIS IS AUTO GENERATED AND WILL GET WRITTEN OVER PERIODICALLY WHEN THE DATA MODEL CHANGES
// EXTEND THIS CLASS INSTEAD.

import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;

import javolution.util.FastMap;

import org.opentaps.foundation.entity.Entity;
import org.opentaps.foundation.entity.EntityFieldInterface;
import org.opentaps.foundation.repository.RepositoryException;
import org.opentaps.foundation.repository.RepositoryInterface;
import javax.persistence.*;
import org.hibernate.search.annotations.*;
import java.lang.String;
import java.sql.Timestamp;

/**
 * Auto generated base entity FacilityPartySecurityPermission.
 */
@javax.persistence.Entity
@NamedNativeQuery(name="selectFacilityPartySecurityPermissions", query="SELECT FPP.FACILITY_ID AS \"facilityId\",FPP.PARTY_ID AS \"partyId\",FPP.SECURITY_GROUP_ID AS \"securityGroupId\",FPP.FROM_DATE AS \"fromDate\",FPP.THRU_DATE AS \"thruDate\",SGP.GROUP_ID AS \"groupId\",SGP.PERMISSION_ID AS \"permissionId\" FROM FACILITY_PARTY_PERMISSION FPP INNER JOIN SECURITY_GROUP_PERMISSION SGP ON FPP.SECURITY_GROUP_ID = SGP.GROUP_ID", resultSetMapping="FacilityPartySecurityPermissionMapping")
@SqlResultSetMapping(name="FacilityPartySecurityPermissionMapping", entities={
@EntityResult(entityClass=FacilityPartySecurityPermission.class, fields = {
@FieldResult(name="facilityId", column="facilityId")
,@FieldResult(name="partyId", column="partyId")
,@FieldResult(name="securityGroupId", column="securityGroupId")
,@FieldResult(name="fromDate", column="fromDate")
,@FieldResult(name="thruDate", column="thruDate")
,@FieldResult(name="groupId", column="groupId")
,@FieldResult(name="permissionId", column="permissionId")
})})
@org.hibernate.annotations.Entity(mutable = false)
@org.hibernate.annotations.AccessType("field")
public class FacilityPartySecurityPermission extends Entity {
static {
java.util.Map<String, String> fields = new java.util.HashMap<String, String>();
        fields.put("facilityId", "FPP.FACILITY_ID");
        fields.put("partyId", "FPP.PARTY_ID");
        fields.put("securityGroupId", "FPP.SECURITY_GROUP_ID");
        fields.put("fromDate", "FPP.FROM_DATE");
        fields.put("thruDate", "FPP.THRU_DATE");
        fields.put("groupId", "SGP.GROUP_ID");
        fields.put("permissionId", "SGP.PERMISSION_ID");
fieldMapColumns.put("FacilityPartySecurityPermission", fields);
}
  public static enum Fields implements EntityFieldInterface<FacilityPartySecurityPermission> {
    facilityId("facilityId"),
    partyId("partyId"),
    securityGroupId("securityGroupId"),
    fromDate("fromDate"),
    thruDate("thruDate"),
    groupId("groupId"),
    permissionId("permissionId");
    private final String fieldName;
    private Fields(String name) { fieldName = name; }
    /** {@inheritDoc} */
    public String getName() { return fieldName; }
    /** {@inheritDoc} */
    public String asc() { return fieldName + " ASC"; }
    /** {@inheritDoc} */
    public String desc() { return fieldName + " DESC"; }
  }

    @Id
   private String facilityId;
    
   private String partyId;
    
   private String securityGroupId;
    
   private Timestamp fromDate;
    
   private Timestamp thruDate;
    
   private String groupId;
    
   private String permissionId;

  /**
   * Default constructor.
   */
  public FacilityPartySecurityPermission() {
      super();
      this.baseEntityName = "FacilityPartySecurityPermission";
      this.isView = true;
      
      this.primaryKeyNames = new ArrayList<String>();
      this.primaryKeyNames.add("facilityId");this.primaryKeyNames.add("partyId");this.primaryKeyNames.add("fromDate");this.primaryKeyNames.add("groupId");this.primaryKeyNames.add("permissionId");
      this.allFieldsNames = new ArrayList<String>();
      this.allFieldsNames.add("facilityId");this.allFieldsNames.add("partyId");this.allFieldsNames.add("securityGroupId");this.allFieldsNames.add("fromDate");this.allFieldsNames.add("thruDate");this.allFieldsNames.add("groupId");this.allFieldsNames.add("permissionId");
      this.nonPrimaryKeyNames = new ArrayList<String>();
      this.nonPrimaryKeyNames.addAll(allFieldsNames);
      this.nonPrimaryKeyNames.removeAll(primaryKeyNames);
  }

  /**
   * Constructor with a repository.
   * @param repository a <code>RepositoryInterface</code> value
   */
  public FacilityPartySecurityPermission(RepositoryInterface repository) {
      this();
      initRepository(repository);
  }

    /**
     * This is a view-entity, so the setter methods will be private to this class and for use in its fromMap constructor only
     */
    /**
     * Auto generated value setter.
     * @param facilityId the facilityId to set
     */
    public void setFacilityId(String facilityId) {
        this.facilityId = facilityId;
    }
    /**
     * Auto generated value setter.
     * @param partyId the partyId to set
     */
    public void setPartyId(String partyId) {
        this.partyId = partyId;
    }
    /**
     * Auto generated value setter.
     * @param securityGroupId the securityGroupId to set
     */
    public void setSecurityGroupId(String securityGroupId) {
        this.securityGroupId = securityGroupId;
    }
    /**
     * Auto generated value setter.
     * @param fromDate the fromDate to set
     */
    public void setFromDate(Timestamp fromDate) {
        this.fromDate = fromDate;
    }
    /**
     * Auto generated value setter.
     * @param thruDate the thruDate to set
     */
    public void setThruDate(Timestamp thruDate) {
        this.thruDate = thruDate;
    }
    /**
     * Auto generated value setter.
     * @param groupId the groupId to set
     */
    public void setGroupId(String groupId) {
        this.groupId = groupId;
    }
    /**
     * Auto generated value setter.
     * @param permissionId the permissionId to set
     */
    public void setPermissionId(String permissionId) {
        this.permissionId = permissionId;
    }

    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getFacilityId() {
        return this.facilityId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPartyId() {
        return this.partyId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getSecurityGroupId() {
        return this.securityGroupId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getFromDate() {
        return this.fromDate;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getThruDate() {
        return this.thruDate;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getGroupId() {
        return this.groupId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPermissionId() {
        return this.permissionId;
    }




    /** {@inheritDoc} */
    @Override
    public void fromMap(Map<String, Object> mapValue) {
        preInit();
        setFacilityId((String) mapValue.get("facilityId"));
        setPartyId((String) mapValue.get("partyId"));
        setSecurityGroupId((String) mapValue.get("securityGroupId"));
        setFromDate((Timestamp) mapValue.get("fromDate"));
        setThruDate((Timestamp) mapValue.get("thruDate"));
        setGroupId((String) mapValue.get("groupId"));
        setPermissionId((String) mapValue.get("permissionId"));
        postInit();
    }

    /** {@inheritDoc} */
    @Override
    public Map<String, Object> toMap() {
        Map<String, Object> mapValue = new FastMap<String, Object>();
        mapValue.put("facilityId", getFacilityId());
        mapValue.put("partyId", getPartyId());
        mapValue.put("securityGroupId", getSecurityGroupId());
        mapValue.put("fromDate", getFromDate());
        mapValue.put("thruDate", getThruDate());
        mapValue.put("groupId", getGroupId());
        mapValue.put("permissionId", getPermissionId());
        return mapValue;
    }


}
