package org.opentaps.base.entities;

/*
 * Copyright (c) Open Source Strategies, Inc.
 *
 * Opentaps is free software: you can redistribute it and/or modify it
 * under the terms of the GNU Affero General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Opentaps is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with Opentaps.  If not, see <http://www.gnu.org/licenses/>.
 */

// DO NOT EDIT THIS FILE!  THIS IS AUTO GENERATED AND WILL GET WRITTEN OVER PERIODICALLY WHEN THE DATA MODEL CHANGES
// EXTEND THIS CLASS INSTEAD.

import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;

import javolution.util.FastMap;

import org.opentaps.foundation.entity.Entity;
import org.opentaps.foundation.entity.EntityFieldInterface;
import org.opentaps.foundation.repository.RepositoryException;
import org.opentaps.foundation.repository.RepositoryInterface;
import javax.persistence.*;
import org.hibernate.search.annotations.*;
import java.lang.String;
import java.math.BigDecimal;
import java.sql.Timestamp;

/**
 * Auto generated base entity SalesOpportunityAndRole.
 */
@javax.persistence.Entity
@NamedNativeQuery(name="selectSalesOpportunityAndRoles", query="SELECT SO.SALES_OPPORTUNITY_ID AS \"salesOpportunityId\",SO.OPPORTUNITY_NAME AS \"opportunityName\",SO.DESCRIPTION AS \"description\",SO.NEXT_STEP AS \"nextStep\",SO.ESTIMATED_AMOUNT AS \"estimatedAmount\",SO.ESTIMATED_PROBABILITY AS \"estimatedProbability\",SO.CURRENCY_UOM_ID AS \"currencyUomId\",SO.MARKETING_CAMPAIGN_ID AS \"marketingCampaignId\",SO.DATA_SOURCE_ID AS \"dataSourceId\",SO.ESTIMATED_CLOSE_DATE AS \"estimatedCloseDate\",SO.OPPORTUNITY_STAGE_ID AS \"opportunityStageId\",SO.TYPE_ENUM_ID AS \"typeEnumId\",SO.CREATED_BY_USER_LOGIN AS \"createdByUserLogin\",SOR.PARTY_ID AS \"partyId\",SOR.ROLE_TYPE_ID AS \"roleTypeId\" FROM SALES_OPPORTUNITY SO INNER JOIN SALES_OPPORTUNITY_ROLE SOR ON SO.SALES_OPPORTUNITY_ID = SOR.SALES_OPPORTUNITY_ID", resultSetMapping="SalesOpportunityAndRoleMapping")
@SqlResultSetMapping(name="SalesOpportunityAndRoleMapping", entities={
@EntityResult(entityClass=SalesOpportunityAndRole.class, fields = {
@FieldResult(name="salesOpportunityId", column="salesOpportunityId")
,@FieldResult(name="opportunityName", column="opportunityName")
,@FieldResult(name="description", column="description")
,@FieldResult(name="nextStep", column="nextStep")
,@FieldResult(name="estimatedAmount", column="estimatedAmount")
,@FieldResult(name="estimatedProbability", column="estimatedProbability")
,@FieldResult(name="currencyUomId", column="currencyUomId")
,@FieldResult(name="marketingCampaignId", column="marketingCampaignId")
,@FieldResult(name="dataSourceId", column="dataSourceId")
,@FieldResult(name="estimatedCloseDate", column="estimatedCloseDate")
,@FieldResult(name="opportunityStageId", column="opportunityStageId")
,@FieldResult(name="typeEnumId", column="typeEnumId")
,@FieldResult(name="createdByUserLogin", column="createdByUserLogin")
,@FieldResult(name="partyId", column="partyId")
,@FieldResult(name="roleTypeId", column="roleTypeId")
})})
@org.hibernate.annotations.Entity(mutable = false)
@org.hibernate.annotations.AccessType("field")
public class SalesOpportunityAndRole extends Entity {
static {
java.util.Map<String, String> fields = new java.util.HashMap<String, String>();
        fields.put("salesOpportunityId", "SO.SALES_OPPORTUNITY_ID");
        fields.put("opportunityName", "SO.OPPORTUNITY_NAME");
        fields.put("description", "SO.DESCRIPTION");
        fields.put("nextStep", "SO.NEXT_STEP");
        fields.put("estimatedAmount", "SO.ESTIMATED_AMOUNT");
        fields.put("estimatedProbability", "SO.ESTIMATED_PROBABILITY");
        fields.put("currencyUomId", "SO.CURRENCY_UOM_ID");
        fields.put("marketingCampaignId", "SO.MARKETING_CAMPAIGN_ID");
        fields.put("dataSourceId", "SO.DATA_SOURCE_ID");
        fields.put("estimatedCloseDate", "SO.ESTIMATED_CLOSE_DATE");
        fields.put("opportunityStageId", "SO.OPPORTUNITY_STAGE_ID");
        fields.put("typeEnumId", "SO.TYPE_ENUM_ID");
        fields.put("createdByUserLogin", "SO.CREATED_BY_USER_LOGIN");
        fields.put("partyId", "SOR.PARTY_ID");
        fields.put("roleTypeId", "SOR.ROLE_TYPE_ID");
fieldMapColumns.put("SalesOpportunityAndRole", fields);
}
  public static enum Fields implements EntityFieldInterface<SalesOpportunityAndRole> {
    salesOpportunityId("salesOpportunityId"),
    opportunityName("opportunityName"),
    description("description"),
    nextStep("nextStep"),
    estimatedAmount("estimatedAmount"),
    estimatedProbability("estimatedProbability"),
    currencyUomId("currencyUomId"),
    marketingCampaignId("marketingCampaignId"),
    dataSourceId("dataSourceId"),
    estimatedCloseDate("estimatedCloseDate"),
    opportunityStageId("opportunityStageId"),
    typeEnumId("typeEnumId"),
    createdByUserLogin("createdByUserLogin"),
    partyId("partyId"),
    roleTypeId("roleTypeId");
    private final String fieldName;
    private Fields(String name) { fieldName = name; }
    /** {@inheritDoc} */
    public String getName() { return fieldName; }
    /** {@inheritDoc} */
    public String asc() { return fieldName + " ASC"; }
    /** {@inheritDoc} */
    public String desc() { return fieldName + " DESC"; }
  }

    @Id
   private String salesOpportunityId;
    
   private String opportunityName;
    
   private String description;
    
   private String nextStep;
    
   private BigDecimal estimatedAmount;
    
   private BigDecimal estimatedProbability;
    
   private String currencyUomId;
    
   private String marketingCampaignId;
    
   private String dataSourceId;
    
   private Timestamp estimatedCloseDate;
    
   private String opportunityStageId;
    
   private String typeEnumId;
    
   private String createdByUserLogin;
    
   private String partyId;
    
   private String roleTypeId;
   private transient PartySummaryCRMView partySummaryCRMView = null;

  /**
   * Default constructor.
   */
  public SalesOpportunityAndRole() {
      super();
      this.baseEntityName = "SalesOpportunityAndRole";
      this.isView = true;
      
      this.primaryKeyNames = new ArrayList<String>();
      this.primaryKeyNames.add("salesOpportunityId");this.primaryKeyNames.add("partyId");this.primaryKeyNames.add("roleTypeId");
      this.allFieldsNames = new ArrayList<String>();
      this.allFieldsNames.add("salesOpportunityId");this.allFieldsNames.add("opportunityName");this.allFieldsNames.add("description");this.allFieldsNames.add("nextStep");this.allFieldsNames.add("estimatedAmount");this.allFieldsNames.add("estimatedProbability");this.allFieldsNames.add("currencyUomId");this.allFieldsNames.add("marketingCampaignId");this.allFieldsNames.add("dataSourceId");this.allFieldsNames.add("estimatedCloseDate");this.allFieldsNames.add("opportunityStageId");this.allFieldsNames.add("typeEnumId");this.allFieldsNames.add("createdByUserLogin");this.allFieldsNames.add("partyId");this.allFieldsNames.add("roleTypeId");
      this.nonPrimaryKeyNames = new ArrayList<String>();
      this.nonPrimaryKeyNames.addAll(allFieldsNames);
      this.nonPrimaryKeyNames.removeAll(primaryKeyNames);
  }

  /**
   * Constructor with a repository.
   * @param repository a <code>RepositoryInterface</code> value
   */
  public SalesOpportunityAndRole(RepositoryInterface repository) {
      this();
      initRepository(repository);
  }

    /**
     * This is a view-entity, so the setter methods will be private to this class and for use in its fromMap constructor only
     */
    /**
     * Auto generated value setter.
     * @param salesOpportunityId the salesOpportunityId to set
     */
    public void setSalesOpportunityId(String salesOpportunityId) {
        this.salesOpportunityId = salesOpportunityId;
    }
    /**
     * Auto generated value setter.
     * @param opportunityName the opportunityName to set
     */
    public void setOpportunityName(String opportunityName) {
        this.opportunityName = opportunityName;
    }
    /**
     * Auto generated value setter.
     * @param description the description to set
     */
    public void setDescription(String description) {
        this.description = description;
    }
    /**
     * Auto generated value setter.
     * @param nextStep the nextStep to set
     */
    public void setNextStep(String nextStep) {
        this.nextStep = nextStep;
    }
    /**
     * Auto generated value setter.
     * @param estimatedAmount the estimatedAmount to set
     */
    public void setEstimatedAmount(BigDecimal estimatedAmount) {
        this.estimatedAmount = estimatedAmount;
    }
    /**
     * Auto generated value setter.
     * @param estimatedProbability the estimatedProbability to set
     */
    public void setEstimatedProbability(BigDecimal estimatedProbability) {
        this.estimatedProbability = estimatedProbability;
    }
    /**
     * Auto generated value setter.
     * @param currencyUomId the currencyUomId to set
     */
    public void setCurrencyUomId(String currencyUomId) {
        this.currencyUomId = currencyUomId;
    }
    /**
     * Auto generated value setter.
     * @param marketingCampaignId the marketingCampaignId to set
     */
    public void setMarketingCampaignId(String marketingCampaignId) {
        this.marketingCampaignId = marketingCampaignId;
    }
    /**
     * Auto generated value setter.
     * @param dataSourceId the dataSourceId to set
     */
    public void setDataSourceId(String dataSourceId) {
        this.dataSourceId = dataSourceId;
    }
    /**
     * Auto generated value setter.
     * @param estimatedCloseDate the estimatedCloseDate to set
     */
    public void setEstimatedCloseDate(Timestamp estimatedCloseDate) {
        this.estimatedCloseDate = estimatedCloseDate;
    }
    /**
     * Auto generated value setter.
     * @param opportunityStageId the opportunityStageId to set
     */
    public void setOpportunityStageId(String opportunityStageId) {
        this.opportunityStageId = opportunityStageId;
    }
    /**
     * Auto generated value setter.
     * @param typeEnumId the typeEnumId to set
     */
    public void setTypeEnumId(String typeEnumId) {
        this.typeEnumId = typeEnumId;
    }
    /**
     * Auto generated value setter.
     * @param createdByUserLogin the createdByUserLogin to set
     */
    public void setCreatedByUserLogin(String createdByUserLogin) {
        this.createdByUserLogin = createdByUserLogin;
    }
    /**
     * Auto generated value setter.
     * @param partyId the partyId to set
     */
    public void setPartyId(String partyId) {
        this.partyId = partyId;
    }
    /**
     * Auto generated value setter.
     * @param roleTypeId the roleTypeId to set
     */
    public void setRoleTypeId(String roleTypeId) {
        this.roleTypeId = roleTypeId;
    }

    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getSalesOpportunityId() {
        return this.salesOpportunityId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getOpportunityName() {
        return this.opportunityName;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getDescription() {
        return this.description;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getNextStep() {
        return this.nextStep;
    }
    /**
     * Auto generated value accessor.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getEstimatedAmount() {
        return this.estimatedAmount;
    }
    /**
     * Auto generated value accessor.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getEstimatedProbability() {
        return this.estimatedProbability;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getCurrencyUomId() {
        return this.currencyUomId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getMarketingCampaignId() {
        return this.marketingCampaignId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getDataSourceId() {
        return this.dataSourceId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getEstimatedCloseDate() {
        return this.estimatedCloseDate;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getOpportunityStageId() {
        return this.opportunityStageId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getTypeEnumId() {
        return this.typeEnumId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getCreatedByUserLogin() {
        return this.createdByUserLogin;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPartyId() {
        return this.partyId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getRoleTypeId() {
        return this.roleTypeId;
    }

    /**
     * Auto generated method that gets the related <code>PartySummaryCRMView</code> by the relation named <code>PartySummaryCRMView</code>.
     * @return the <code>PartySummaryCRMView</code>
     * @throws RepositoryException if an error occurs
     */
    public PartySummaryCRMView getPartySummaryCRMView() throws RepositoryException {
        if (this.partySummaryCRMView == null) {
            this.partySummaryCRMView = getRelatedOne(PartySummaryCRMView.class, "PartySummaryCRMView");
        }
        return this.partySummaryCRMView;
    }

    /**
     * Auto generated value setter.
     * @param partySummaryCRMView the partySummaryCRMView to set
    */
    public void setPartySummaryCRMView(PartySummaryCRMView partySummaryCRMView) {
        this.partySummaryCRMView = partySummaryCRMView;
    }


    /** {@inheritDoc} */
    @Override
    public void fromMap(Map<String, Object> mapValue) {
        preInit();
        setSalesOpportunityId((String) mapValue.get("salesOpportunityId"));
        setOpportunityName((String) mapValue.get("opportunityName"));
        setDescription((String) mapValue.get("description"));
        setNextStep((String) mapValue.get("nextStep"));
        setEstimatedAmount(convertToBigDecimal(mapValue.get("estimatedAmount")));
        setEstimatedProbability(convertToBigDecimal(mapValue.get("estimatedProbability")));
        setCurrencyUomId((String) mapValue.get("currencyUomId"));
        setMarketingCampaignId((String) mapValue.get("marketingCampaignId"));
        setDataSourceId((String) mapValue.get("dataSourceId"));
        setEstimatedCloseDate((Timestamp) mapValue.get("estimatedCloseDate"));
        setOpportunityStageId((String) mapValue.get("opportunityStageId"));
        setTypeEnumId((String) mapValue.get("typeEnumId"));
        setCreatedByUserLogin((String) mapValue.get("createdByUserLogin"));
        setPartyId((String) mapValue.get("partyId"));
        setRoleTypeId((String) mapValue.get("roleTypeId"));
        postInit();
    }

    /** {@inheritDoc} */
    @Override
    public Map<String, Object> toMap() {
        Map<String, Object> mapValue = new FastMap<String, Object>();
        mapValue.put("salesOpportunityId", getSalesOpportunityId());
        mapValue.put("opportunityName", getOpportunityName());
        mapValue.put("description", getDescription());
        mapValue.put("nextStep", getNextStep());
        mapValue.put("estimatedAmount", getEstimatedAmount());
        mapValue.put("estimatedProbability", getEstimatedProbability());
        mapValue.put("currencyUomId", getCurrencyUomId());
        mapValue.put("marketingCampaignId", getMarketingCampaignId());
        mapValue.put("dataSourceId", getDataSourceId());
        mapValue.put("estimatedCloseDate", getEstimatedCloseDate());
        mapValue.put("opportunityStageId", getOpportunityStageId());
        mapValue.put("typeEnumId", getTypeEnumId());
        mapValue.put("createdByUserLogin", getCreatedByUserLogin());
        mapValue.put("partyId", getPartyId());
        mapValue.put("roleTypeId", getRoleTypeId());
        return mapValue;
    }


}
