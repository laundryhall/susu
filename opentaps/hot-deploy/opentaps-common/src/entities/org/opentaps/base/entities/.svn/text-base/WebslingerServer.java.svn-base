package org.opentaps.base.entities;

/*
 * Copyright (c) Open Source Strategies, Inc.
 *
 * Opentaps is free software: you can redistribute it and/or modify it
 * under the terms of the GNU Affero General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Opentaps is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with Opentaps.  If not, see <http://www.gnu.org/licenses/>.
 */

// DO NOT EDIT THIS FILE!  THIS IS AUTO GENERATED AND WILL GET WRITTEN OVER PERIODICALLY WHEN THE DATA MODEL CHANGES
// EXTEND THIS CLASS INSTEAD.

import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;

import javolution.util.FastMap;

import org.opentaps.foundation.entity.Entity;
import org.opentaps.foundation.entity.EntityFieldInterface;
import org.opentaps.foundation.repository.RepositoryException;
import org.opentaps.foundation.repository.RepositoryInterface;
import javax.persistence.*;
import org.hibernate.search.annotations.*;
import java.lang.String;
import java.sql.Timestamp;

/**
 * Auto generated base entity WebslingerServer.
 */
@javax.persistence.Entity
@Table(name="WEBSLINGER_SERVER")
public class WebslingerServer extends Entity {
static {
java.util.Map<String, String> fields = new java.util.HashMap<String, String>();
        fields.put("webslingerServerId", "WEBSLINGER_SERVER_ID");
        fields.put("delegatorName", "DELEGATOR_NAME");
        fields.put("dispatcherName", "DISPATCHER_NAME");
        fields.put("serverName", "SERVER_NAME");
        fields.put("webSiteId", "WEB_SITE_ID");
        fields.put("target", "TARGET");
        fields.put("loadAtStart", "LOAD_AT_START");
        fields.put("lastUpdatedStamp", "LAST_UPDATED_STAMP");
        fields.put("lastUpdatedTxStamp", "LAST_UPDATED_TX_STAMP");
        fields.put("createdStamp", "CREATED_STAMP");
        fields.put("createdTxStamp", "CREATED_TX_STAMP");
fieldMapColumns.put("WebslingerServer", fields);
}
  public static enum Fields implements EntityFieldInterface<WebslingerServer> {
    webslingerServerId("webslingerServerId"),
    delegatorName("delegatorName"),
    dispatcherName("dispatcherName"),
    serverName("serverName"),
    webSiteId("webSiteId"),
    target("target"),
    loadAtStart("loadAtStart"),
    lastUpdatedStamp("lastUpdatedStamp"),
    lastUpdatedTxStamp("lastUpdatedTxStamp"),
    createdStamp("createdStamp"),
    createdTxStamp("createdTxStamp");
    private final String fieldName;
    private Fields(String name) { fieldName = name; }
    /** {@inheritDoc} */
    public String getName() { return fieldName; }
    /** {@inheritDoc} */
    public String asc() { return fieldName + " ASC"; }
    /** {@inheritDoc} */
    public String desc() { return fieldName + " DESC"; }
  }

   @org.hibernate.annotations.GenericGenerator(name="WebslingerServer_GEN",  strategy="org.opentaps.foundation.entity.hibernate.OpentapsIdentifierGenerator")
   @GeneratedValue(generator="WebslingerServer_GEN")
   @Id
   @Column(name="WEBSLINGER_SERVER_ID")
   private String webslingerServerId;
   @Column(name="DELEGATOR_NAME")
   private String delegatorName;
   @Column(name="DISPATCHER_NAME")
   private String dispatcherName;
   @Column(name="SERVER_NAME")
   private String serverName;
   @Column(name="WEB_SITE_ID")
   private String webSiteId;
   @Column(name="TARGET")
   private String target;
   @Column(name="LOAD_AT_START")
   private String loadAtStart;
   @Column(name="LAST_UPDATED_STAMP")
   private Timestamp lastUpdatedStamp;
   @Column(name="LAST_UPDATED_TX_STAMP")
   private Timestamp lastUpdatedTxStamp;
   @Column(name="CREATED_STAMP")
   private Timestamp createdStamp;
   @Column(name="CREATED_TX_STAMP")
   private Timestamp createdTxStamp;
   @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="WEB_SITE_ID", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private WebSite webSite = null;
   private transient List<WebslingerHostMapping> webslingerHostMappings = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="webslingerServer", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="WEBSLINGER_SERVER_ID")
   
   private List<WebslingerServerBase> webslingerServerBases = null;

  /**
   * Default constructor.
   */
  public WebslingerServer() {
      super();
      this.baseEntityName = "WebslingerServer";
      this.isView = false;
      
      this.primaryKeyNames = new ArrayList<String>();
      this.primaryKeyNames.add("webslingerServerId");
      this.allFieldsNames = new ArrayList<String>();
      this.allFieldsNames.add("webslingerServerId");this.allFieldsNames.add("delegatorName");this.allFieldsNames.add("dispatcherName");this.allFieldsNames.add("serverName");this.allFieldsNames.add("webSiteId");this.allFieldsNames.add("target");this.allFieldsNames.add("loadAtStart");this.allFieldsNames.add("lastUpdatedStamp");this.allFieldsNames.add("lastUpdatedTxStamp");this.allFieldsNames.add("createdStamp");this.allFieldsNames.add("createdTxStamp");
      this.nonPrimaryKeyNames = new ArrayList<String>();
      this.nonPrimaryKeyNames.addAll(allFieldsNames);
      this.nonPrimaryKeyNames.removeAll(primaryKeyNames);
  }

  /**
   * Constructor with a repository.
   * @param repository a <code>RepositoryInterface</code> value
   */
  public WebslingerServer(RepositoryInterface repository) {
      this();
      initRepository(repository);
  }

    /**
     * Auto generated value setter.
     * @param webslingerServerId the webslingerServerId to set
     */
    public void setWebslingerServerId(String webslingerServerId) {
        this.webslingerServerId = webslingerServerId;
    }
    /**
     * Auto generated value setter.
     * @param delegatorName the delegatorName to set
     */
    public void setDelegatorName(String delegatorName) {
        this.delegatorName = delegatorName;
    }
    /**
     * Auto generated value setter.
     * @param dispatcherName the dispatcherName to set
     */
    public void setDispatcherName(String dispatcherName) {
        this.dispatcherName = dispatcherName;
    }
    /**
     * Auto generated value setter.
     * @param serverName the serverName to set
     */
    public void setServerName(String serverName) {
        this.serverName = serverName;
    }
    /**
     * Auto generated value setter.
     * @param webSiteId the webSiteId to set
     */
    public void setWebSiteId(String webSiteId) {
        this.webSiteId = webSiteId;
    }
    /**
     * Auto generated value setter.
     * @param target the target to set
     */
    public void setTarget(String target) {
        this.target = target;
    }
    /**
     * Auto generated value setter.
     * @param loadAtStart the loadAtStart to set
     */
    public void setLoadAtStart(String loadAtStart) {
        this.loadAtStart = loadAtStart;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedStamp the lastUpdatedStamp to set
     */
    public void setLastUpdatedStamp(Timestamp lastUpdatedStamp) {
        this.lastUpdatedStamp = lastUpdatedStamp;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedTxStamp the lastUpdatedTxStamp to set
     */
    public void setLastUpdatedTxStamp(Timestamp lastUpdatedTxStamp) {
        this.lastUpdatedTxStamp = lastUpdatedTxStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdStamp the createdStamp to set
     */
    public void setCreatedStamp(Timestamp createdStamp) {
        this.createdStamp = createdStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdTxStamp the createdTxStamp to set
     */
    public void setCreatedTxStamp(Timestamp createdTxStamp) {
        this.createdTxStamp = createdTxStamp;
    }

    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getWebslingerServerId() {
        return this.webslingerServerId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getDelegatorName() {
        return this.delegatorName;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getDispatcherName() {
        return this.dispatcherName;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getServerName() {
        return this.serverName;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getWebSiteId() {
        return this.webSiteId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getTarget() {
        return this.target;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getLoadAtStart() {
        return this.loadAtStart;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedStamp() {
        return this.lastUpdatedStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedTxStamp() {
        return this.lastUpdatedTxStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedStamp() {
        return this.createdStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedTxStamp() {
        return this.createdTxStamp;
    }

    /**
     * Auto generated method that gets the related <code>WebSite</code> by the relation named <code>WebSite</code>.
     * @return the <code>WebSite</code>
     * @throws RepositoryException if an error occurs
     */
    public WebSite getWebSite() throws RepositoryException {
        if (this.webSite == null) {
            this.webSite = getRelatedOne(WebSite.class, "WebSite");
        }
        return this.webSite;
    }
    /**
     * Auto generated method that gets the related <code>WebslingerHostMapping</code> by the relation named <code>WebslingerHostMapping</code>.
     * @return the list of <code>WebslingerHostMapping</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends WebslingerHostMapping> getWebslingerHostMappings() throws RepositoryException {
        if (this.webslingerHostMappings == null) {
            this.webslingerHostMappings = getRelated(WebslingerHostMapping.class, "WebslingerHostMapping");
        }
        return this.webslingerHostMappings;
    }
    /**
     * Auto generated method that gets the related <code>WebslingerServerBase</code> by the relation named <code>WebslingerServerBase</code>.
     * @return the list of <code>WebslingerServerBase</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends WebslingerServerBase> getWebslingerServerBases() throws RepositoryException {
        if (this.webslingerServerBases == null) {
            this.webslingerServerBases = getRelated(WebslingerServerBase.class, "WebslingerServerBase");
        }
        return this.webslingerServerBases;
    }

    /**
     * Auto generated value setter.
     * @param webSite the webSite to set
    */
    public void setWebSite(WebSite webSite) {
        this.webSite = webSite;
    }
    /**
     * Auto generated value setter.
     * @param webslingerHostMappings the webslingerHostMappings to set
    */
    public void setWebslingerHostMappings(List<WebslingerHostMapping> webslingerHostMappings) {
        this.webslingerHostMappings = webslingerHostMappings;
    }
    /**
     * Auto generated value setter.
     * @param webslingerServerBases the webslingerServerBases to set
    */
    public void setWebslingerServerBases(List<WebslingerServerBase> webslingerServerBases) {
        this.webslingerServerBases = webslingerServerBases;
    }

    /**
     * Auto generated method that add item to collection.
     */
    public void addWebslingerServerBase(WebslingerServerBase webslingerServerBase) {
        if (this.webslingerServerBases == null) {
            this.webslingerServerBases = new ArrayList<WebslingerServerBase>();
        }
        this.webslingerServerBases.add(webslingerServerBase);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeWebslingerServerBase(WebslingerServerBase webslingerServerBase) {
        if (this.webslingerServerBases == null) {
            return;
        }
        this.webslingerServerBases.remove(webslingerServerBase);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearWebslingerServerBase() {
        if (this.webslingerServerBases == null) {
            return;
        }
        this.webslingerServerBases.clear();
    }

    /** {@inheritDoc} */
    @Override
    public void fromMap(Map<String, Object> mapValue) {
        preInit();
        setWebslingerServerId((String) mapValue.get("webslingerServerId"));
        setDelegatorName((String) mapValue.get("delegatorName"));
        setDispatcherName((String) mapValue.get("dispatcherName"));
        setServerName((String) mapValue.get("serverName"));
        setWebSiteId((String) mapValue.get("webSiteId"));
        setTarget((String) mapValue.get("target"));
        setLoadAtStart((String) mapValue.get("loadAtStart"));
        setLastUpdatedStamp((Timestamp) mapValue.get("lastUpdatedStamp"));
        setLastUpdatedTxStamp((Timestamp) mapValue.get("lastUpdatedTxStamp"));
        setCreatedStamp((Timestamp) mapValue.get("createdStamp"));
        setCreatedTxStamp((Timestamp) mapValue.get("createdTxStamp"));
        postInit();
    }

    /** {@inheritDoc} */
    @Override
    public Map<String, Object> toMap() {
        Map<String, Object> mapValue = new FastMap<String, Object>();
        mapValue.put("webslingerServerId", getWebslingerServerId());
        mapValue.put("delegatorName", getDelegatorName());
        mapValue.put("dispatcherName", getDispatcherName());
        mapValue.put("serverName", getServerName());
        mapValue.put("webSiteId", getWebSiteId());
        mapValue.put("target", getTarget());
        mapValue.put("loadAtStart", getLoadAtStart());
        mapValue.put("lastUpdatedStamp", getLastUpdatedStamp());
        mapValue.put("lastUpdatedTxStamp", getLastUpdatedTxStamp());
        mapValue.put("createdStamp", getCreatedStamp());
        mapValue.put("createdTxStamp", getCreatedTxStamp());
        return mapValue;
    }


}
