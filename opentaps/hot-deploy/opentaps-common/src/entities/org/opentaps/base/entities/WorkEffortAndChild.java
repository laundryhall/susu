package org.opentaps.base.entities;

/*
 * Copyright (c) Open Source Strategies, Inc.
 *
 * Opentaps is free software: you can redistribute it and/or modify it
 * under the terms of the GNU Affero General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Opentaps is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with Opentaps.  If not, see <http://www.gnu.org/licenses/>.
 */

// DO NOT EDIT THIS FILE!  THIS IS AUTO GENERATED AND WILL GET WRITTEN OVER PERIODICALLY WHEN THE DATA MODEL CHANGES
// EXTEND THIS CLASS INSTEAD.

import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;

import javolution.util.FastMap;

import org.opentaps.foundation.entity.Entity;
import org.opentaps.foundation.entity.EntityFieldInterface;
import org.opentaps.foundation.repository.RepositoryException;
import org.opentaps.foundation.repository.RepositoryInterface;
import javax.persistence.*;
import org.hibernate.search.annotations.*;
import java.lang.String;

/**
 * Auto generated base entity WorkEffortAndChild.
 */
@javax.persistence.Entity
@NamedNativeQuery(name="selectWorkEffortAndChilds", query="SELECT WEP.WORK_EFFORT_ID AS \"workEffortId\",WEP.WORK_EFFORT_NAME AS \"workEffortName\",WEP.WORK_EFFORT_TYPE_ID AS \"workEffortTypeId\",WEP.WORK_EFFORT_PARENT_ID AS \"workEffortParentId\",WEP.CURRENT_STATUS_ID AS \"currentStatusId\",WEPH.WORK_EFFORT_ID AS \"workEffortId\",WEPH.WORK_EFFORT_NAME AS \"workEffortName\",WEPH.WORK_EFFORT_TYPE_ID AS \"workEffortTypeId\",WEPH.CURRENT_STATUS_ID AS \"currentStatusId\" FROM WORK_EFFORT WEP INNER JOIN WORK_EFFORT WEPH ON WEP.WORK_EFFORT_ID = WEPH.WORK_EFFORT_PARENT_ID", resultSetMapping="WorkEffortAndChildMapping")
@SqlResultSetMapping(name="WorkEffortAndChildMapping", entities={
@EntityResult(entityClass=WorkEffortAndChild.class, fields = {
@FieldResult(name="workEffortId", column="workEffortId")
,@FieldResult(name="workEffortName", column="workEffortName")
,@FieldResult(name="workEffortTypeId", column="workEffortTypeId")
,@FieldResult(name="workEffortParentId", column="workEffortParentId")
,@FieldResult(name="currentStatusId", column="currentStatusId")
,@FieldResult(name="childWorkEffortId", column="childWorkEffortId")
,@FieldResult(name="childWorkEffortName", column="childWorkEffortName")
,@FieldResult(name="childWorkEffortTypeId", column="childWorkEffortTypeId")
,@FieldResult(name="childCurrentStatusId", column="childCurrentStatusId")
})})
@org.hibernate.annotations.Entity(mutable = false)
@org.hibernate.annotations.AccessType("field")
public class WorkEffortAndChild extends Entity {
static {
java.util.Map<String, String> fields = new java.util.HashMap<String, String>();
        fields.put("workEffortId", "WEP.WORK_EFFORT_ID");
        fields.put("workEffortName", "WEP.WORK_EFFORT_NAME");
        fields.put("workEffortTypeId", "WEP.WORK_EFFORT_TYPE_ID");
        fields.put("workEffortParentId", "WEP.WORK_EFFORT_PARENT_ID");
        fields.put("currentStatusId", "WEP.CURRENT_STATUS_ID");
        fields.put("childWorkEffortId", "WEPH.WORK_EFFORT_ID");
        fields.put("childWorkEffortName", "WEPH.WORK_EFFORT_NAME");
        fields.put("childWorkEffortTypeId", "WEPH.WORK_EFFORT_TYPE_ID");
        fields.put("childCurrentStatusId", "WEPH.CURRENT_STATUS_ID");
fieldMapColumns.put("WorkEffortAndChild", fields);
}
  public static enum Fields implements EntityFieldInterface<WorkEffortAndChild> {
    workEffortId("workEffortId"),
    workEffortName("workEffortName"),
    workEffortTypeId("workEffortTypeId"),
    workEffortParentId("workEffortParentId"),
    currentStatusId("currentStatusId"),
    childWorkEffortId("childWorkEffortId"),
    childWorkEffortName("childWorkEffortName"),
    childWorkEffortTypeId("childWorkEffortTypeId"),
    childCurrentStatusId("childCurrentStatusId");
    private final String fieldName;
    private Fields(String name) { fieldName = name; }
    /** {@inheritDoc} */
    public String getName() { return fieldName; }
    /** {@inheritDoc} */
    public String asc() { return fieldName + " ASC"; }
    /** {@inheritDoc} */
    public String desc() { return fieldName + " DESC"; }
  }

    @Id
   private String workEffortId;
    
   private String workEffortName;
    
   private String workEffortTypeId;
    
   private String workEffortParentId;
    
   private String currentStatusId;
    
   private String childWorkEffortId;
    
   private String childWorkEffortName;
    
   private String childWorkEffortTypeId;
    
   private String childCurrentStatusId;

  /**
   * Default constructor.
   */
  public WorkEffortAndChild() {
      super();
      this.baseEntityName = "WorkEffortAndChild";
      this.isView = true;
      
      this.primaryKeyNames = new ArrayList<String>();
      this.primaryKeyNames.add("workEffortId");this.primaryKeyNames.add("childWorkEffortId");
      this.allFieldsNames = new ArrayList<String>();
      this.allFieldsNames.add("workEffortId");this.allFieldsNames.add("workEffortName");this.allFieldsNames.add("workEffortTypeId");this.allFieldsNames.add("workEffortParentId");this.allFieldsNames.add("currentStatusId");this.allFieldsNames.add("childWorkEffortId");this.allFieldsNames.add("childWorkEffortName");this.allFieldsNames.add("childWorkEffortTypeId");this.allFieldsNames.add("childCurrentStatusId");
      this.nonPrimaryKeyNames = new ArrayList<String>();
      this.nonPrimaryKeyNames.addAll(allFieldsNames);
      this.nonPrimaryKeyNames.removeAll(primaryKeyNames);
  }

  /**
   * Constructor with a repository.
   * @param repository a <code>RepositoryInterface</code> value
   */
  public WorkEffortAndChild(RepositoryInterface repository) {
      this();
      initRepository(repository);
  }

    /**
     * This is a view-entity, so the setter methods will be private to this class and for use in its fromMap constructor only
     */
    /**
     * Auto generated value setter.
     * @param workEffortId the workEffortId to set
     */
    public void setWorkEffortId(String workEffortId) {
        this.workEffortId = workEffortId;
    }
    /**
     * Auto generated value setter.
     * @param workEffortName the workEffortName to set
     */
    public void setWorkEffortName(String workEffortName) {
        this.workEffortName = workEffortName;
    }
    /**
     * Auto generated value setter.
     * @param workEffortTypeId the workEffortTypeId to set
     */
    public void setWorkEffortTypeId(String workEffortTypeId) {
        this.workEffortTypeId = workEffortTypeId;
    }
    /**
     * Auto generated value setter.
     * @param workEffortParentId the workEffortParentId to set
     */
    public void setWorkEffortParentId(String workEffortParentId) {
        this.workEffortParentId = workEffortParentId;
    }
    /**
     * Auto generated value setter.
     * @param currentStatusId the currentStatusId to set
     */
    public void setCurrentStatusId(String currentStatusId) {
        this.currentStatusId = currentStatusId;
    }
    /**
     * Auto generated value setter.
     * @param childWorkEffortId the childWorkEffortId to set
     */
    public void setChildWorkEffortId(String childWorkEffortId) {
        this.childWorkEffortId = childWorkEffortId;
    }
    /**
     * Auto generated value setter.
     * @param childWorkEffortName the childWorkEffortName to set
     */
    public void setChildWorkEffortName(String childWorkEffortName) {
        this.childWorkEffortName = childWorkEffortName;
    }
    /**
     * Auto generated value setter.
     * @param childWorkEffortTypeId the childWorkEffortTypeId to set
     */
    public void setChildWorkEffortTypeId(String childWorkEffortTypeId) {
        this.childWorkEffortTypeId = childWorkEffortTypeId;
    }
    /**
     * Auto generated value setter.
     * @param childCurrentStatusId the childCurrentStatusId to set
     */
    public void setChildCurrentStatusId(String childCurrentStatusId) {
        this.childCurrentStatusId = childCurrentStatusId;
    }

    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getWorkEffortId() {
        return this.workEffortId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getWorkEffortName() {
        return this.workEffortName;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getWorkEffortTypeId() {
        return this.workEffortTypeId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getWorkEffortParentId() {
        return this.workEffortParentId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getCurrentStatusId() {
        return this.currentStatusId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getChildWorkEffortId() {
        return this.childWorkEffortId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getChildWorkEffortName() {
        return this.childWorkEffortName;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getChildWorkEffortTypeId() {
        return this.childWorkEffortTypeId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getChildCurrentStatusId() {
        return this.childCurrentStatusId;
    }




    /** {@inheritDoc} */
    @Override
    public void fromMap(Map<String, Object> mapValue) {
        preInit();
        setWorkEffortId((String) mapValue.get("workEffortId"));
        setWorkEffortName((String) mapValue.get("workEffortName"));
        setWorkEffortTypeId((String) mapValue.get("workEffortTypeId"));
        setWorkEffortParentId((String) mapValue.get("workEffortParentId"));
        setCurrentStatusId((String) mapValue.get("currentStatusId"));
        setChildWorkEffortId((String) mapValue.get("childWorkEffortId"));
        setChildWorkEffortName((String) mapValue.get("childWorkEffortName"));
        setChildWorkEffortTypeId((String) mapValue.get("childWorkEffortTypeId"));
        setChildCurrentStatusId((String) mapValue.get("childCurrentStatusId"));
        postInit();
    }

    /** {@inheritDoc} */
    @Override
    public Map<String, Object> toMap() {
        Map<String, Object> mapValue = new FastMap<String, Object>();
        mapValue.put("workEffortId", getWorkEffortId());
        mapValue.put("workEffortName", getWorkEffortName());
        mapValue.put("workEffortTypeId", getWorkEffortTypeId());
        mapValue.put("workEffortParentId", getWorkEffortParentId());
        mapValue.put("currentStatusId", getCurrentStatusId());
        mapValue.put("childWorkEffortId", getChildWorkEffortId());
        mapValue.put("childWorkEffortName", getChildWorkEffortName());
        mapValue.put("childWorkEffortTypeId", getChildWorkEffortTypeId());
        mapValue.put("childCurrentStatusId", getChildCurrentStatusId());
        return mapValue;
    }


}
