package org.opentaps.base.entities;

/*
 * Copyright (c) Open Source Strategies, Inc.
 *
 * Opentaps is free software: you can redistribute it and/or modify it
 * under the terms of the GNU Affero General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Opentaps is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with Opentaps.  If not, see <http://www.gnu.org/licenses/>.
 */

// DO NOT EDIT THIS FILE!  THIS IS AUTO GENERATED AND WILL GET WRITTEN OVER PERIODICALLY WHEN THE DATA MODEL CHANGES
// EXTEND THIS CLASS INSTEAD.

import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;

import javolution.util.FastMap;

import org.opentaps.foundation.entity.Entity;
import org.opentaps.foundation.entity.EntityFieldInterface;
import org.opentaps.foundation.repository.RepositoryException;
import org.opentaps.foundation.repository.RepositoryInterface;
import javax.persistence.*;
import org.hibernate.search.annotations.*;
import java.lang.String;
import java.sql.Timestamp;

/**
 * Auto generated base entity StandardLanguage.
 */
@javax.persistence.Entity
@Table(name="STANDARD_LANGUAGE")
public class StandardLanguage extends Entity {
static {
java.util.Map<String, String> fields = new java.util.HashMap<String, String>();
        fields.put("standardLanguageId", "STANDARD_LANGUAGE_ID");
        fields.put("langCode3t", "LANG_CODE3T");
        fields.put("langCode3b", "LANG_CODE3B");
        fields.put("langCode2", "LANG_CODE2");
        fields.put("langName", "LANG_NAME");
        fields.put("langFamily", "LANG_FAMILY");
        fields.put("langCharset", "LANG_CHARSET");
        fields.put("lastUpdatedStamp", "LAST_UPDATED_STAMP");
        fields.put("lastUpdatedTxStamp", "LAST_UPDATED_TX_STAMP");
        fields.put("createdStamp", "CREATED_STAMP");
        fields.put("createdTxStamp", "CREATED_TX_STAMP");
fieldMapColumns.put("StandardLanguage", fields);
}
  public static enum Fields implements EntityFieldInterface<StandardLanguage> {
    standardLanguageId("standardLanguageId"),
    langCode3t("langCode3t"),
    langCode3b("langCode3b"),
    langCode2("langCode2"),
    langName("langName"),
    langFamily("langFamily"),
    langCharset("langCharset"),
    lastUpdatedStamp("lastUpdatedStamp"),
    lastUpdatedTxStamp("lastUpdatedTxStamp"),
    createdStamp("createdStamp"),
    createdTxStamp("createdTxStamp");
    private final String fieldName;
    private Fields(String name) { fieldName = name; }
    /** {@inheritDoc} */
    public String getName() { return fieldName; }
    /** {@inheritDoc} */
    public String asc() { return fieldName + " ASC"; }
    /** {@inheritDoc} */
    public String desc() { return fieldName + " DESC"; }
  }

   @org.hibernate.annotations.GenericGenerator(name="StandardLanguage_GEN",  strategy="org.opentaps.foundation.entity.hibernate.OpentapsIdentifierGenerator")
   @GeneratedValue(generator="StandardLanguage_GEN")
   @Id
   @Column(name="STANDARD_LANGUAGE_ID")
   private String standardLanguageId;
   @Column(name="LANG_CODE3T")
   private String langCode3t;
   @Column(name="LANG_CODE3B")
   private String langCode3b;
   @Column(name="LANG_CODE2")
   private String langCode2;
   @Column(name="LANG_NAME")
   private String langName;
   @Column(name="LANG_FAMILY")
   private String langFamily;
   @Column(name="LANG_CHARSET")
   private String langCharset;
   @Column(name="LAST_UPDATED_STAMP")
   private Timestamp lastUpdatedStamp;
   @Column(name="LAST_UPDATED_TX_STAMP")
   private Timestamp lastUpdatedTxStamp;
   @Column(name="CREATED_STAMP")
   private Timestamp createdStamp;
   @Column(name="CREATED_TX_STAMP")
   private Timestamp createdTxStamp;

  /**
   * Default constructor.
   */
  public StandardLanguage() {
      super();
      this.baseEntityName = "StandardLanguage";
      this.isView = false;
      
      this.primaryKeyNames = new ArrayList<String>();
      this.primaryKeyNames.add("standardLanguageId");
      this.allFieldsNames = new ArrayList<String>();
      this.allFieldsNames.add("standardLanguageId");this.allFieldsNames.add("langCode3t");this.allFieldsNames.add("langCode3b");this.allFieldsNames.add("langCode2");this.allFieldsNames.add("langName");this.allFieldsNames.add("langFamily");this.allFieldsNames.add("langCharset");this.allFieldsNames.add("lastUpdatedStamp");this.allFieldsNames.add("lastUpdatedTxStamp");this.allFieldsNames.add("createdStamp");this.allFieldsNames.add("createdTxStamp");
      this.nonPrimaryKeyNames = new ArrayList<String>();
      this.nonPrimaryKeyNames.addAll(allFieldsNames);
      this.nonPrimaryKeyNames.removeAll(primaryKeyNames);
  }

  /**
   * Constructor with a repository.
   * @param repository a <code>RepositoryInterface</code> value
   */
  public StandardLanguage(RepositoryInterface repository) {
      this();
      initRepository(repository);
  }

    /**
     * Auto generated value setter.
     * @param standardLanguageId the standardLanguageId to set
     */
    public void setStandardLanguageId(String standardLanguageId) {
        this.standardLanguageId = standardLanguageId;
    }
    /**
     * Auto generated value setter.
     * @param langCode3t the langCode3t to set
     */
    public void setLangCode3t(String langCode3t) {
        this.langCode3t = langCode3t;
    }
    /**
     * Auto generated value setter.
     * @param langCode3b the langCode3b to set
     */
    public void setLangCode3b(String langCode3b) {
        this.langCode3b = langCode3b;
    }
    /**
     * Auto generated value setter.
     * @param langCode2 the langCode2 to set
     */
    public void setLangCode2(String langCode2) {
        this.langCode2 = langCode2;
    }
    /**
     * Auto generated value setter.
     * @param langName the langName to set
     */
    public void setLangName(String langName) {
        this.langName = langName;
    }
    /**
     * Auto generated value setter.
     * @param langFamily the langFamily to set
     */
    public void setLangFamily(String langFamily) {
        this.langFamily = langFamily;
    }
    /**
     * Auto generated value setter.
     * @param langCharset the langCharset to set
     */
    public void setLangCharset(String langCharset) {
        this.langCharset = langCharset;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedStamp the lastUpdatedStamp to set
     */
    public void setLastUpdatedStamp(Timestamp lastUpdatedStamp) {
        this.lastUpdatedStamp = lastUpdatedStamp;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedTxStamp the lastUpdatedTxStamp to set
     */
    public void setLastUpdatedTxStamp(Timestamp lastUpdatedTxStamp) {
        this.lastUpdatedTxStamp = lastUpdatedTxStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdStamp the createdStamp to set
     */
    public void setCreatedStamp(Timestamp createdStamp) {
        this.createdStamp = createdStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdTxStamp the createdTxStamp to set
     */
    public void setCreatedTxStamp(Timestamp createdTxStamp) {
        this.createdTxStamp = createdTxStamp;
    }

    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getStandardLanguageId() {
        return this.standardLanguageId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getLangCode3t() {
        return this.langCode3t;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getLangCode3b() {
        return this.langCode3b;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getLangCode2() {
        return this.langCode2;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getLangName() {
        return this.langName;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getLangFamily() {
        return this.langFamily;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getLangCharset() {
        return this.langCharset;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedStamp() {
        return this.lastUpdatedStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedTxStamp() {
        return this.lastUpdatedTxStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedStamp() {
        return this.createdStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedTxStamp() {
        return this.createdTxStamp;
    }




    /** {@inheritDoc} */
    @Override
    public void fromMap(Map<String, Object> mapValue) {
        preInit();
        setStandardLanguageId((String) mapValue.get("standardLanguageId"));
        setLangCode3t((String) mapValue.get("langCode3t"));
        setLangCode3b((String) mapValue.get("langCode3b"));
        setLangCode2((String) mapValue.get("langCode2"));
        setLangName((String) mapValue.get("langName"));
        setLangFamily((String) mapValue.get("langFamily"));
        setLangCharset((String) mapValue.get("langCharset"));
        setLastUpdatedStamp((Timestamp) mapValue.get("lastUpdatedStamp"));
        setLastUpdatedTxStamp((Timestamp) mapValue.get("lastUpdatedTxStamp"));
        setCreatedStamp((Timestamp) mapValue.get("createdStamp"));
        setCreatedTxStamp((Timestamp) mapValue.get("createdTxStamp"));
        postInit();
    }

    /** {@inheritDoc} */
    @Override
    public Map<String, Object> toMap() {
        Map<String, Object> mapValue = new FastMap<String, Object>();
        mapValue.put("standardLanguageId", getStandardLanguageId());
        mapValue.put("langCode3t", getLangCode3t());
        mapValue.put("langCode3b", getLangCode3b());
        mapValue.put("langCode2", getLangCode2());
        mapValue.put("langName", getLangName());
        mapValue.put("langFamily", getLangFamily());
        mapValue.put("langCharset", getLangCharset());
        mapValue.put("lastUpdatedStamp", getLastUpdatedStamp());
        mapValue.put("lastUpdatedTxStamp", getLastUpdatedTxStamp());
        mapValue.put("createdStamp", getCreatedStamp());
        mapValue.put("createdTxStamp", getCreatedTxStamp());
        return mapValue;
    }


}
