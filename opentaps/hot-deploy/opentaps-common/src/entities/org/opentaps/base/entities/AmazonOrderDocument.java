package org.opentaps.base.entities;

/*
 * Copyright (c) Open Source Strategies, Inc.
 *
 * Opentaps is free software: you can redistribute it and/or modify it
 * under the terms of the GNU Affero General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Opentaps is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with Opentaps.  If not, see <http://www.gnu.org/licenses/>.
 */

// DO NOT EDIT THIS FILE!  THIS IS AUTO GENERATED AND WILL GET WRITTEN OVER PERIODICALLY WHEN THE DATA MODEL CHANGES
// EXTEND THIS CLASS INSTEAD.

import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;

import javolution.util.FastMap;

import org.opentaps.foundation.entity.Entity;
import org.opentaps.foundation.entity.EntityFieldInterface;
import org.opentaps.foundation.repository.RepositoryException;
import org.opentaps.foundation.repository.RepositoryInterface;
import javax.persistence.*;
import org.hibernate.search.annotations.*;
import java.lang.Long;
import java.lang.String;
import java.sql.Timestamp;

/**
 * Auto generated base entity AmazonOrderDocument.
 */
@javax.persistence.Entity
@Table(name="AMAZON_ORDER_DOCUMENT")
public class AmazonOrderDocument extends Entity {
static {
java.util.Map<String, String> fields = new java.util.HashMap<String, String>();
        fields.put("documentId", "DOCUMENT_ID");
        fields.put("generatedTimestamp", "GENERATED_TIMESTAMP");
        fields.put("documentXml", "DOCUMENT_XML");
        fields.put("statusId", "STATUS_ID");
        fields.put("ackStatusId", "ACK_STATUS_ID");
        fields.put("downloadTimestamp", "DOWNLOAD_TIMESTAMP");
        fields.put("downloadErrorMessage", "DOWNLOAD_ERROR_MESSAGE");
        fields.put("importTimestamp", "IMPORT_TIMESTAMP");
        fields.put("extractionFailures", "EXTRACTION_FAILURES");
        fields.put("importErrorMessage", "IMPORT_ERROR_MESSAGE");
        fields.put("acknowledgeTimestamp", "ACKNOWLEDGE_TIMESTAMP");
        fields.put("acknowledgeErrorMessage", "ACKNOWLEDGE_ERROR_MESSAGE");
        fields.put("lastUpdatedStamp", "LAST_UPDATED_STAMP");
        fields.put("lastUpdatedTxStamp", "LAST_UPDATED_TX_STAMP");
        fields.put("createdStamp", "CREATED_STAMP");
        fields.put("createdTxStamp", "CREATED_TX_STAMP");
fieldMapColumns.put("AmazonOrderDocument", fields);
}
  public static enum Fields implements EntityFieldInterface<AmazonOrderDocument> {
    documentId("documentId"),
    generatedTimestamp("generatedTimestamp"),
    documentXml("documentXml"),
    statusId("statusId"),
    ackStatusId("ackStatusId"),
    downloadTimestamp("downloadTimestamp"),
    downloadErrorMessage("downloadErrorMessage"),
    importTimestamp("importTimestamp"),
    extractionFailures("extractionFailures"),
    importErrorMessage("importErrorMessage"),
    acknowledgeTimestamp("acknowledgeTimestamp"),
    acknowledgeErrorMessage("acknowledgeErrorMessage"),
    lastUpdatedStamp("lastUpdatedStamp"),
    lastUpdatedTxStamp("lastUpdatedTxStamp"),
    createdStamp("createdStamp"),
    createdTxStamp("createdTxStamp");
    private final String fieldName;
    private Fields(String name) { fieldName = name; }
    /** {@inheritDoc} */
    public String getName() { return fieldName; }
    /** {@inheritDoc} */
    public String asc() { return fieldName + " ASC"; }
    /** {@inheritDoc} */
    public String desc() { return fieldName + " DESC"; }
  }

   @org.hibernate.annotations.GenericGenerator(name="AmazonOrderDocument_GEN",  strategy="org.opentaps.foundation.entity.hibernate.OpentapsIdentifierGenerator")
   @GeneratedValue(generator="AmazonOrderDocument_GEN")
   @Id
   @Column(name="DOCUMENT_ID")
   private String documentId;
   @Column(name="GENERATED_TIMESTAMP")
   private Timestamp generatedTimestamp;
   @Column(name="DOCUMENT_XML")
   private String documentXml;
   @Column(name="STATUS_ID")
   private String statusId;
   @Column(name="ACK_STATUS_ID")
   private String ackStatusId;
   @Column(name="DOWNLOAD_TIMESTAMP")
   private Timestamp downloadTimestamp;
   @Column(name="DOWNLOAD_ERROR_MESSAGE")
   private String downloadErrorMessage;
   @Column(name="IMPORT_TIMESTAMP")
   private Timestamp importTimestamp;
   @Column(name="EXTRACTION_FAILURES")
   private Long extractionFailures;
   @Column(name="IMPORT_ERROR_MESSAGE")
   private String importErrorMessage;
   @Column(name="ACKNOWLEDGE_TIMESTAMP")
   private Timestamp acknowledgeTimestamp;
   @Column(name="ACKNOWLEDGE_ERROR_MESSAGE")
   private String acknowledgeErrorMessage;
   @Column(name="LAST_UPDATED_STAMP")
   private Timestamp lastUpdatedStamp;
   @Column(name="LAST_UPDATED_TX_STAMP")
   private Timestamp lastUpdatedTxStamp;
   @Column(name="CREATED_STAMP")
   private Timestamp createdStamp;
   @Column(name="CREATED_TX_STAMP")
   private Timestamp createdTxStamp;
   @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="STATUS_ID", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private StatusItem statusItem = null;
   @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="ACK_STATUS_ID", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private StatusItem ackStatusItem = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="amazonOrderDocument", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="DOCUMENT_ID")
   
   private List<AmazonOrder> amazonOrders = null;

  /**
   * Default constructor.
   */
  public AmazonOrderDocument() {
      super();
      this.baseEntityName = "AmazonOrderDocument";
      this.isView = false;
      
      this.primaryKeyNames = new ArrayList<String>();
      this.primaryKeyNames.add("documentId");
      this.allFieldsNames = new ArrayList<String>();
      this.allFieldsNames.add("documentId");this.allFieldsNames.add("generatedTimestamp");this.allFieldsNames.add("documentXml");this.allFieldsNames.add("statusId");this.allFieldsNames.add("ackStatusId");this.allFieldsNames.add("downloadTimestamp");this.allFieldsNames.add("downloadErrorMessage");this.allFieldsNames.add("importTimestamp");this.allFieldsNames.add("extractionFailures");this.allFieldsNames.add("importErrorMessage");this.allFieldsNames.add("acknowledgeTimestamp");this.allFieldsNames.add("acknowledgeErrorMessage");this.allFieldsNames.add("lastUpdatedStamp");this.allFieldsNames.add("lastUpdatedTxStamp");this.allFieldsNames.add("createdStamp");this.allFieldsNames.add("createdTxStamp");
      this.nonPrimaryKeyNames = new ArrayList<String>();
      this.nonPrimaryKeyNames.addAll(allFieldsNames);
      this.nonPrimaryKeyNames.removeAll(primaryKeyNames);
  }

  /**
   * Constructor with a repository.
   * @param repository a <code>RepositoryInterface</code> value
   */
  public AmazonOrderDocument(RepositoryInterface repository) {
      this();
      initRepository(repository);
  }

    /**
     * Auto generated value setter.
     * @param documentId the documentId to set
     */
    public void setDocumentId(String documentId) {
        this.documentId = documentId;
    }
    /**
     * Auto generated value setter.
     * @param generatedTimestamp the generatedTimestamp to set
     */
    public void setGeneratedTimestamp(Timestamp generatedTimestamp) {
        this.generatedTimestamp = generatedTimestamp;
    }
    /**
     * Auto generated value setter.
     * @param documentXml the documentXml to set
     */
    public void setDocumentXml(String documentXml) {
        this.documentXml = documentXml;
    }
    /**
     * Auto generated value setter.
     * @param statusId the statusId to set
     */
    public void setStatusId(String statusId) {
        this.statusId = statusId;
    }
    /**
     * Auto generated value setter.
     * @param ackStatusId the ackStatusId to set
     */
    public void setAckStatusId(String ackStatusId) {
        this.ackStatusId = ackStatusId;
    }
    /**
     * Auto generated value setter.
     * @param downloadTimestamp the downloadTimestamp to set
     */
    public void setDownloadTimestamp(Timestamp downloadTimestamp) {
        this.downloadTimestamp = downloadTimestamp;
    }
    /**
     * Auto generated value setter.
     * @param downloadErrorMessage the downloadErrorMessage to set
     */
    public void setDownloadErrorMessage(String downloadErrorMessage) {
        this.downloadErrorMessage = downloadErrorMessage;
    }
    /**
     * Auto generated value setter.
     * @param importTimestamp the importTimestamp to set
     */
    public void setImportTimestamp(Timestamp importTimestamp) {
        this.importTimestamp = importTimestamp;
    }
    /**
     * Auto generated value setter.
     * @param extractionFailures the extractionFailures to set
     */
    public void setExtractionFailures(Long extractionFailures) {
        this.extractionFailures = extractionFailures;
    }
    /**
     * Auto generated value setter.
     * @param importErrorMessage the importErrorMessage to set
     */
    public void setImportErrorMessage(String importErrorMessage) {
        this.importErrorMessage = importErrorMessage;
    }
    /**
     * Auto generated value setter.
     * @param acknowledgeTimestamp the acknowledgeTimestamp to set
     */
    public void setAcknowledgeTimestamp(Timestamp acknowledgeTimestamp) {
        this.acknowledgeTimestamp = acknowledgeTimestamp;
    }
    /**
     * Auto generated value setter.
     * @param acknowledgeErrorMessage the acknowledgeErrorMessage to set
     */
    public void setAcknowledgeErrorMessage(String acknowledgeErrorMessage) {
        this.acknowledgeErrorMessage = acknowledgeErrorMessage;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedStamp the lastUpdatedStamp to set
     */
    public void setLastUpdatedStamp(Timestamp lastUpdatedStamp) {
        this.lastUpdatedStamp = lastUpdatedStamp;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedTxStamp the lastUpdatedTxStamp to set
     */
    public void setLastUpdatedTxStamp(Timestamp lastUpdatedTxStamp) {
        this.lastUpdatedTxStamp = lastUpdatedTxStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdStamp the createdStamp to set
     */
    public void setCreatedStamp(Timestamp createdStamp) {
        this.createdStamp = createdStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdTxStamp the createdTxStamp to set
     */
    public void setCreatedTxStamp(Timestamp createdTxStamp) {
        this.createdTxStamp = createdTxStamp;
    }

    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getDocumentId() {
        return this.documentId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getGeneratedTimestamp() {
        return this.generatedTimestamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getDocumentXml() {
        return this.documentXml;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getStatusId() {
        return this.statusId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getAckStatusId() {
        return this.ackStatusId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getDownloadTimestamp() {
        return this.downloadTimestamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getDownloadErrorMessage() {
        return this.downloadErrorMessage;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getImportTimestamp() {
        return this.importTimestamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Long</code>
     */
    public Long getExtractionFailures() {
        return this.extractionFailures;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getImportErrorMessage() {
        return this.importErrorMessage;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getAcknowledgeTimestamp() {
        return this.acknowledgeTimestamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getAcknowledgeErrorMessage() {
        return this.acknowledgeErrorMessage;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedStamp() {
        return this.lastUpdatedStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedTxStamp() {
        return this.lastUpdatedTxStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedStamp() {
        return this.createdStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedTxStamp() {
        return this.createdTxStamp;
    }

    /**
     * Auto generated method that gets the related <code>StatusItem</code> by the relation named <code>StatusItem</code>.
     * @return the <code>StatusItem</code>
     * @throws RepositoryException if an error occurs
     */
    public StatusItem getStatusItem() throws RepositoryException {
        if (this.statusItem == null) {
            this.statusItem = getRelatedOne(StatusItem.class, "StatusItem");
        }
        return this.statusItem;
    }
    /**
     * Auto generated method that gets the related <code>StatusItem</code> by the relation named <code>AckStatusItem</code>.
     * @return the <code>StatusItem</code>
     * @throws RepositoryException if an error occurs
     */
    public StatusItem getAckStatusItem() throws RepositoryException {
        if (this.ackStatusItem == null) {
            this.ackStatusItem = getRelatedOne(StatusItem.class, "AckStatusItem");
        }
        return this.ackStatusItem;
    }
    /**
     * Auto generated method that gets the related <code>AmazonOrder</code> by the relation named <code>AmazonOrder</code>.
     * @return the list of <code>AmazonOrder</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends AmazonOrder> getAmazonOrders() throws RepositoryException {
        if (this.amazonOrders == null) {
            this.amazonOrders = getRelated(AmazonOrder.class, "AmazonOrder");
        }
        return this.amazonOrders;
    }

    /**
     * Auto generated value setter.
     * @param statusItem the statusItem to set
    */
    public void setStatusItem(StatusItem statusItem) {
        this.statusItem = statusItem;
    }
    /**
     * Auto generated value setter.
     * @param ackStatusItem the ackStatusItem to set
    */
    public void setAckStatusItem(StatusItem ackStatusItem) {
        this.ackStatusItem = ackStatusItem;
    }
    /**
     * Auto generated value setter.
     * @param amazonOrders the amazonOrders to set
    */
    public void setAmazonOrders(List<AmazonOrder> amazonOrders) {
        this.amazonOrders = amazonOrders;
    }


    /** {@inheritDoc} */
    @Override
    public void fromMap(Map<String, Object> mapValue) {
        preInit();
        setDocumentId((String) mapValue.get("documentId"));
        setGeneratedTimestamp((Timestamp) mapValue.get("generatedTimestamp"));
        setDocumentXml((String) mapValue.get("documentXml"));
        setStatusId((String) mapValue.get("statusId"));
        setAckStatusId((String) mapValue.get("ackStatusId"));
        setDownloadTimestamp((Timestamp) mapValue.get("downloadTimestamp"));
        setDownloadErrorMessage((String) mapValue.get("downloadErrorMessage"));
        setImportTimestamp((Timestamp) mapValue.get("importTimestamp"));
        setExtractionFailures((Long) mapValue.get("extractionFailures"));
        setImportErrorMessage((String) mapValue.get("importErrorMessage"));
        setAcknowledgeTimestamp((Timestamp) mapValue.get("acknowledgeTimestamp"));
        setAcknowledgeErrorMessage((String) mapValue.get("acknowledgeErrorMessage"));
        setLastUpdatedStamp((Timestamp) mapValue.get("lastUpdatedStamp"));
        setLastUpdatedTxStamp((Timestamp) mapValue.get("lastUpdatedTxStamp"));
        setCreatedStamp((Timestamp) mapValue.get("createdStamp"));
        setCreatedTxStamp((Timestamp) mapValue.get("createdTxStamp"));
        postInit();
    }

    /** {@inheritDoc} */
    @Override
    public Map<String, Object> toMap() {
        Map<String, Object> mapValue = new FastMap<String, Object>();
        mapValue.put("documentId", getDocumentId());
        mapValue.put("generatedTimestamp", getGeneratedTimestamp());
        mapValue.put("documentXml", getDocumentXml());
        mapValue.put("statusId", getStatusId());
        mapValue.put("ackStatusId", getAckStatusId());
        mapValue.put("downloadTimestamp", getDownloadTimestamp());
        mapValue.put("downloadErrorMessage", getDownloadErrorMessage());
        mapValue.put("importTimestamp", getImportTimestamp());
        mapValue.put("extractionFailures", getExtractionFailures());
        mapValue.put("importErrorMessage", getImportErrorMessage());
        mapValue.put("acknowledgeTimestamp", getAcknowledgeTimestamp());
        mapValue.put("acknowledgeErrorMessage", getAcknowledgeErrorMessage());
        mapValue.put("lastUpdatedStamp", getLastUpdatedStamp());
        mapValue.put("lastUpdatedTxStamp", getLastUpdatedTxStamp());
        mapValue.put("createdStamp", getCreatedStamp());
        mapValue.put("createdTxStamp", getCreatedTxStamp());
        return mapValue;
    }


}
