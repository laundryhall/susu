package org.opentaps.base.entities;

/*
 * Copyright (c) Open Source Strategies, Inc.
 *
 * Opentaps is free software: you can redistribute it and/or modify it
 * under the terms of the GNU Affero General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Opentaps is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with Opentaps.  If not, see <http://www.gnu.org/licenses/>.
 */

// DO NOT EDIT THIS FILE!  THIS IS AUTO GENERATED AND WILL GET WRITTEN OVER PERIODICALLY WHEN THE DATA MODEL CHANGES
// EXTEND THIS CLASS INSTEAD.

import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;

import javolution.util.FastMap;

import org.opentaps.foundation.entity.Entity;
import org.opentaps.foundation.entity.EntityFieldInterface;
import org.opentaps.foundation.repository.RepositoryException;
import org.opentaps.foundation.repository.RepositoryInterface;
import javax.persistence.*;
import org.hibernate.search.annotations.*;
import java.lang.Long;
import java.lang.String;
import java.sql.Timestamp;

/**
 * Auto generated base entity UserLogin.
 */
@javax.persistence.Entity
@Table(name="USER_LOGIN")
public class UserLogin extends Entity {
static {
java.util.Map<String, String> fields = new java.util.HashMap<String, String>();
        fields.put("userLoginId", "USER_LOGIN_ID");
        fields.put("currentPassword", "CURRENT_PASSWORD");
        fields.put("passwordHint", "PASSWORD_HINT");
        fields.put("isSystem", "IS_SYSTEM");
        fields.put("enabled", "ENABLED");
        fields.put("hasLoggedOut", "HAS_LOGGED_OUT");
        fields.put("requirePasswordChange", "REQUIRE_PASSWORD_CHANGE");
        fields.put("lastCurrencyUom", "LAST_CURRENCY_UOM");
        fields.put("lastLocale", "LAST_LOCALE");
        fields.put("lastTimeZone", "LAST_TIME_ZONE");
        fields.put("disabledDateTime", "DISABLED_DATE_TIME");
        fields.put("successiveFailedLogins", "SUCCESSIVE_FAILED_LOGINS");
        fields.put("userLdapDn", "USER_LDAP_DN");
        fields.put("lastUpdatedStamp", "LAST_UPDATED_STAMP");
        fields.put("lastUpdatedTxStamp", "LAST_UPDATED_TX_STAMP");
        fields.put("createdStamp", "CREATED_STAMP");
        fields.put("createdTxStamp", "CREATED_TX_STAMP");
        fields.put("partyId", "PARTY_ID");
fieldMapColumns.put("UserLogin", fields);
}
  public static enum Fields implements EntityFieldInterface<UserLogin> {
    userLoginId("userLoginId"),
    currentPassword("currentPassword"),
    passwordHint("passwordHint"),
    isSystem("isSystem"),
    enabled("enabled"),
    hasLoggedOut("hasLoggedOut"),
    requirePasswordChange("requirePasswordChange"),
    lastCurrencyUom("lastCurrencyUom"),
    lastLocale("lastLocale"),
    lastTimeZone("lastTimeZone"),
    disabledDateTime("disabledDateTime"),
    successiveFailedLogins("successiveFailedLogins"),
    userLdapDn("userLdapDn"),
    lastUpdatedStamp("lastUpdatedStamp"),
    lastUpdatedTxStamp("lastUpdatedTxStamp"),
    createdStamp("createdStamp"),
    createdTxStamp("createdTxStamp"),
    partyId("partyId");
    private final String fieldName;
    private Fields(String name) { fieldName = name; }
    /** {@inheritDoc} */
    public String getName() { return fieldName; }
    /** {@inheritDoc} */
    public String asc() { return fieldName + " ASC"; }
    /** {@inheritDoc} */
    public String desc() { return fieldName + " DESC"; }
  }

   @org.hibernate.annotations.GenericGenerator(name="UserLogin_GEN",  strategy="org.opentaps.foundation.entity.hibernate.OpentapsIdentifierGenerator")
   @GeneratedValue(generator="UserLogin_GEN")
   @Id
   @Column(name="USER_LOGIN_ID")
   private String userLoginId;
   @Column(name="CURRENT_PASSWORD")
   private String currentPassword;
   @Column(name="PASSWORD_HINT")
   private String passwordHint;
   @Column(name="IS_SYSTEM")
   private String isSystem;
   @Column(name="ENABLED")
   private String enabled;
   @Column(name="HAS_LOGGED_OUT")
   private String hasLoggedOut;
   @Column(name="REQUIRE_PASSWORD_CHANGE")
   private String requirePasswordChange;
   @Column(name="LAST_CURRENCY_UOM")
   private String lastCurrencyUom;
   @Column(name="LAST_LOCALE")
   private String lastLocale;
   @Column(name="LAST_TIME_ZONE")
   private String lastTimeZone;
   @Column(name="DISABLED_DATE_TIME")
   private Timestamp disabledDateTime;
   @Column(name="SUCCESSIVE_FAILED_LOGINS")
   private Long successiveFailedLogins;
   @Column(name="USER_LDAP_DN")
   private String userLdapDn;
   @Column(name="LAST_UPDATED_STAMP")
   private Timestamp lastUpdatedStamp;
   @Column(name="LAST_UPDATED_TX_STAMP")
   private Timestamp lastUpdatedTxStamp;
   @Column(name="CREATED_STAMP")
   private Timestamp createdStamp;
   @Column(name="CREATED_TX_STAMP")
   private Timestamp createdTxStamp;
   @Column(name="PARTY_ID")
   private String partyId;
   @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="PARTY_ID", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private Party party = null;
   private transient Person person = null;
   private transient PartyGroup partyGroup = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="openUserLogin", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="OPEN_USER_LOGIN_ID")
   
   private List<CashDrawer> openCashDrawers = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="operatorUserLogin", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="OPERATOR_USER_LOGIN_ID")
   
   private List<CashDrawer> operatorCashDrawers = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="closeUserLogin", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="CLOSE_USER_LOGIN_ID")
   
   private List<CashDrawer> closeCashDrawers = null;
   private transient List<ContactList> createdByContactLists = null;
   private transient List<ContactList> lastModifiedByContactLists = null;
   private transient List<Content> createdByContents = null;
   private transient List<Content> lastModifiedByContents = null;
   private transient List<ContentAssoc> createdByContentAssocs = null;
   private transient List<ContentAssoc> lastModifiedByContentAssocs = null;
   private transient List<DataResource> createdByDataResources = null;
   private transient List<DataResource> lastModifiedByDataResources = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="userLogin", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="USER_LOGIN_ID")
   
   private List<DataWarehouseTransform> dataWarehouseTransforms = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="userLogin", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="USER_LOGIN_ID")
   
   private List<EntityViewHistory> entityViewHistorys = null;
   private transient List<InventoryItemTrace> inventoryItemTraces = null;
   private transient List<InventoryItemValueHistory> inventoryItemValueHistorys = null;
   private transient List<InvoiceAdjustment> invoiceAdjustments = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="issuedByUserLogin", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="ISSUED_BY_USER_LOGIN_ID")
   
   private List<ItemIssuance> issuedByItemIssuances = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="authUserLogin", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="AUTH_USER_LOGIN_ID")
   
   private List<JobSandbox> authJobSandboxes = null;
   private transient List<JobSandbox> runAsJobSandboxes = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="userLogin", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="USER_LOGIN_ID")
   
   private List<KeyboardShortcut> keyboardShortcuts = null;
   private transient List<LockboxBatch> lockboxBatches = null;
   private transient List<OrderAdjustment> orderAdjustments = null;
   private transient List<OrderHeader> createdByOrderHeaders = null;
   private transient List<OrderItem> dontCancelSetOrderItems = null;
   private transient List<OrderItemChange> orderItemChanges = null;
   private transient List<OrderPaymentPreference> orderPaymentPreferences = null;
   private transient List<OrderStatus> orderStatuses = null;
   private transient List<Party> createdByPartys = null;
   private transient List<Party> lastModifiedByPartys = null;
   private transient List<PicklistRole> createdByPicklistRoles = null;
   private transient List<PicklistRole> lastModifiedByPicklistRoles = null;
   private transient List<PicklistStatusHistory> changePicklistStatusHistorys = null;
   private transient List<Product> createdByProducts = null;
   private transient List<Product> lastModifiedByProducts = null;
   private transient List<ProductFeaturePrice> createdByProductFeaturePrices = null;
   private transient List<ProductFeaturePrice> lastModifiedByProductFeaturePrices = null;
   private transient List<ProductPrice> createdByProductPrices = null;
   private transient List<ProductPrice> lastModifiedByProductPrices = null;
   private transient List<ProductPriceChange> changedByProductPriceChanges = null;
   private transient List<ProductPromo> createdByProductPromoes = null;
   private transient List<ProductPromo> lastModifiedByProductPromoes = null;
   private transient List<ProductPromoCode> createdByProductPromoCodes = null;
   private transient List<ProductPromoCode> lastModifiedByProductPromoCodes = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="userLogin", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="USER_LOGIN_ID")
   
   private List<ProductReview> productReviews = null;
   private transient List<QuoteAdjustment> quoteAdjustments = null;
   private transient List<ReturnAdjustment> returnAdjustments = null;
   private transient List<ReturnHeader> returnHeaders = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="createdByUserLogin", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="CREATED_BY_USER_LOGIN_ID")
   
   private List<SalesForecast> createdBySalesForecasts = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="modifiedByUserLogin", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="MODIFIED_BY_USER_LOGIN_ID")
   
   private List<SalesForecast> modifiedBySalesForecasts = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="modifiedByUserLogin", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="MODIFIED_BY_USER_LOGIN_ID")
   
   private List<SalesForecastHistory> modifiedBySalesForecastHistorys = null;
   private transient List<SalesOpportunity> salesOpportunitys = null;
   private transient List<SalesOpportunityHistory> salesOpportunityHistorys = null;
   private transient List<ServerHit> serverHits = null;
   private transient List<ServiceTestRecord> createdByServiceTestRecords = null;
   private transient List<ServiceTestRecord> modifiedByServiceTestRecords = null;
   private transient List<ShipmentReceipt> shipmentReceipts = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="approvedByUserLogin", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="APPROVED_BY_USER_LOGIN_ID")
   
   private List<Timesheet> approvedByTimesheets = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="userLogin", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="USER_LOGIN_ID")
   
   private List<UserLoginHistory> userLoginHistorys = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="userLogin", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="USER_LOGIN_ID")
   
   private List<UserLoginPasswordHistory> userLoginPasswordHistorys = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="userLogin", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="USER_LOGIN_ID")
   
   private List<UserLoginSecurityGroup> userLoginSecurityGroups = null;
   @OneToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="USER_LOGIN_ID", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private UserLoginSession userLoginSession = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="userLogin", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="USER_LOGIN_ID")
   
   private List<ViewPreference> viewPreferences = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="userLogin", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="USER_LOGIN_ID")
   
   private List<Visitor> visitors = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="userLogin", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="USER_LOGIN_ID")
   
   private List<WebUserPreference> webUserPreferences = null;
   private transient List<WorkEffortPartyAssignment> assignedByWorkEffortPartyAssignments = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="userLogin", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="USER_LOGIN_ID")
   
   private List<WorkEffortReview> workEffortReviews = null;
   private transient List<WorkEffortStatus> setByWorkEffortStatuses = null;

  /**
   * Default constructor.
   */
  public UserLogin() {
      super();
      this.baseEntityName = "UserLogin";
      this.isView = false;
      
      this.primaryKeyNames = new ArrayList<String>();
      this.primaryKeyNames.add("userLoginId");
      this.allFieldsNames = new ArrayList<String>();
      this.allFieldsNames.add("userLoginId");this.allFieldsNames.add("currentPassword");this.allFieldsNames.add("passwordHint");this.allFieldsNames.add("isSystem");this.allFieldsNames.add("enabled");this.allFieldsNames.add("hasLoggedOut");this.allFieldsNames.add("requirePasswordChange");this.allFieldsNames.add("lastCurrencyUom");this.allFieldsNames.add("lastLocale");this.allFieldsNames.add("lastTimeZone");this.allFieldsNames.add("disabledDateTime");this.allFieldsNames.add("successiveFailedLogins");this.allFieldsNames.add("userLdapDn");this.allFieldsNames.add("lastUpdatedStamp");this.allFieldsNames.add("lastUpdatedTxStamp");this.allFieldsNames.add("createdStamp");this.allFieldsNames.add("createdTxStamp");this.allFieldsNames.add("partyId");
      this.nonPrimaryKeyNames = new ArrayList<String>();
      this.nonPrimaryKeyNames.addAll(allFieldsNames);
      this.nonPrimaryKeyNames.removeAll(primaryKeyNames);
  }

  /**
   * Constructor with a repository.
   * @param repository a <code>RepositoryInterface</code> value
   */
  public UserLogin(RepositoryInterface repository) {
      this();
      initRepository(repository);
  }

    /**
     * Auto generated value setter.
     * @param userLoginId the userLoginId to set
     */
    public void setUserLoginId(String userLoginId) {
        this.userLoginId = userLoginId;
    }
    /**
     * Auto generated value setter.
     * @param currentPassword the currentPassword to set
     */
    public void setCurrentPassword(String currentPassword) {
        this.currentPassword = currentPassword;
    }
    /**
     * Auto generated value setter.
     * @param passwordHint the passwordHint to set
     */
    public void setPasswordHint(String passwordHint) {
        this.passwordHint = passwordHint;
    }
    /**
     * Auto generated value setter.
     * @param isSystem the isSystem to set
     */
    public void setIsSystem(String isSystem) {
        this.isSystem = isSystem;
    }
    /**
     * Auto generated value setter.
     * @param enabled the enabled to set
     */
    public void setEnabled(String enabled) {
        this.enabled = enabled;
    }
    /**
     * Auto generated value setter.
     * @param hasLoggedOut the hasLoggedOut to set
     */
    public void setHasLoggedOut(String hasLoggedOut) {
        this.hasLoggedOut = hasLoggedOut;
    }
    /**
     * Auto generated value setter.
     * @param requirePasswordChange the requirePasswordChange to set
     */
    public void setRequirePasswordChange(String requirePasswordChange) {
        this.requirePasswordChange = requirePasswordChange;
    }
    /**
     * Auto generated value setter.
     * @param lastCurrencyUom the lastCurrencyUom to set
     */
    public void setLastCurrencyUom(String lastCurrencyUom) {
        this.lastCurrencyUom = lastCurrencyUom;
    }
    /**
     * Auto generated value setter.
     * @param lastLocale the lastLocale to set
     */
    public void setLastLocale(String lastLocale) {
        this.lastLocale = lastLocale;
    }
    /**
     * Auto generated value setter.
     * @param lastTimeZone the lastTimeZone to set
     */
    public void setLastTimeZone(String lastTimeZone) {
        this.lastTimeZone = lastTimeZone;
    }
    /**
     * Auto generated value setter.
     * @param disabledDateTime the disabledDateTime to set
     */
    public void setDisabledDateTime(Timestamp disabledDateTime) {
        this.disabledDateTime = disabledDateTime;
    }
    /**
     * Auto generated value setter.
     * @param successiveFailedLogins the successiveFailedLogins to set
     */
    public void setSuccessiveFailedLogins(Long successiveFailedLogins) {
        this.successiveFailedLogins = successiveFailedLogins;
    }
    /**
     * Auto generated value setter.
     * @param userLdapDn the userLdapDn to set
     */
    public void setUserLdapDn(String userLdapDn) {
        this.userLdapDn = userLdapDn;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedStamp the lastUpdatedStamp to set
     */
    public void setLastUpdatedStamp(Timestamp lastUpdatedStamp) {
        this.lastUpdatedStamp = lastUpdatedStamp;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedTxStamp the lastUpdatedTxStamp to set
     */
    public void setLastUpdatedTxStamp(Timestamp lastUpdatedTxStamp) {
        this.lastUpdatedTxStamp = lastUpdatedTxStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdStamp the createdStamp to set
     */
    public void setCreatedStamp(Timestamp createdStamp) {
        this.createdStamp = createdStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdTxStamp the createdTxStamp to set
     */
    public void setCreatedTxStamp(Timestamp createdTxStamp) {
        this.createdTxStamp = createdTxStamp;
    }
    /**
     * Auto generated value setter.
     * @param partyId the partyId to set
     */
    public void setPartyId(String partyId) {
        this.partyId = partyId;
    }

    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getUserLoginId() {
        return this.userLoginId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getCurrentPassword() {
        return this.currentPassword;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPasswordHint() {
        return this.passwordHint;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getIsSystem() {
        return this.isSystem;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getEnabled() {
        return this.enabled;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getHasLoggedOut() {
        return this.hasLoggedOut;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getRequirePasswordChange() {
        return this.requirePasswordChange;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getLastCurrencyUom() {
        return this.lastCurrencyUom;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getLastLocale() {
        return this.lastLocale;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getLastTimeZone() {
        return this.lastTimeZone;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getDisabledDateTime() {
        return this.disabledDateTime;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Long</code>
     */
    public Long getSuccessiveFailedLogins() {
        return this.successiveFailedLogins;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getUserLdapDn() {
        return this.userLdapDn;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedStamp() {
        return this.lastUpdatedStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedTxStamp() {
        return this.lastUpdatedTxStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedStamp() {
        return this.createdStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedTxStamp() {
        return this.createdTxStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPartyId() {
        return this.partyId;
    }

    /**
     * Auto generated method that gets the related <code>Party</code> by the relation named <code>Party</code>.
     * @return the <code>Party</code>
     * @throws RepositoryException if an error occurs
     */
    public Party getParty() throws RepositoryException {
        if (this.party == null) {
            this.party = getRelatedOne(Party.class, "Party");
        }
        return this.party;
    }
    /**
     * Auto generated method that gets the related <code>Person</code> by the relation named <code>Person</code>.
     * @return the <code>Person</code>
     * @throws RepositoryException if an error occurs
     */
    public Person getPerson() throws RepositoryException {
        if (this.person == null) {
            this.person = getRelatedOne(Person.class, "Person");
        }
        return this.person;
    }
    /**
     * Auto generated method that gets the related <code>PartyGroup</code> by the relation named <code>PartyGroup</code>.
     * @return the <code>PartyGroup</code>
     * @throws RepositoryException if an error occurs
     */
    public PartyGroup getPartyGroup() throws RepositoryException {
        if (this.partyGroup == null) {
            this.partyGroup = getRelatedOne(PartyGroup.class, "PartyGroup");
        }
        return this.partyGroup;
    }
    /**
     * Auto generated method that gets the related <code>CashDrawer</code> by the relation named <code>OpenCashDrawer</code>.
     * @return the list of <code>CashDrawer</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends CashDrawer> getOpenCashDrawers() throws RepositoryException {
        if (this.openCashDrawers == null) {
            this.openCashDrawers = getRelated(CashDrawer.class, "OpenCashDrawer");
        }
        return this.openCashDrawers;
    }
    /**
     * Auto generated method that gets the related <code>CashDrawer</code> by the relation named <code>OperatorCashDrawer</code>.
     * @return the list of <code>CashDrawer</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends CashDrawer> getOperatorCashDrawers() throws RepositoryException {
        if (this.operatorCashDrawers == null) {
            this.operatorCashDrawers = getRelated(CashDrawer.class, "OperatorCashDrawer");
        }
        return this.operatorCashDrawers;
    }
    /**
     * Auto generated method that gets the related <code>CashDrawer</code> by the relation named <code>CloseCashDrawer</code>.
     * @return the list of <code>CashDrawer</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends CashDrawer> getCloseCashDrawers() throws RepositoryException {
        if (this.closeCashDrawers == null) {
            this.closeCashDrawers = getRelated(CashDrawer.class, "CloseCashDrawer");
        }
        return this.closeCashDrawers;
    }
    /**
     * Auto generated method that gets the related <code>ContactList</code> by the relation named <code>CreatedByContactList</code>.
     * @return the list of <code>ContactList</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ContactList> getCreatedByContactLists() throws RepositoryException {
        if (this.createdByContactLists == null) {
            this.createdByContactLists = getRelated(ContactList.class, "CreatedByContactList");
        }
        return this.createdByContactLists;
    }
    /**
     * Auto generated method that gets the related <code>ContactList</code> by the relation named <code>LastModifiedByContactList</code>.
     * @return the list of <code>ContactList</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ContactList> getLastModifiedByContactLists() throws RepositoryException {
        if (this.lastModifiedByContactLists == null) {
            this.lastModifiedByContactLists = getRelated(ContactList.class, "LastModifiedByContactList");
        }
        return this.lastModifiedByContactLists;
    }
    /**
     * Auto generated method that gets the related <code>Content</code> by the relation named <code>CreatedByContent</code>.
     * @return the list of <code>Content</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends Content> getCreatedByContents() throws RepositoryException {
        if (this.createdByContents == null) {
            this.createdByContents = getRelated(Content.class, "CreatedByContent");
        }
        return this.createdByContents;
    }
    /**
     * Auto generated method that gets the related <code>Content</code> by the relation named <code>LastModifiedByContent</code>.
     * @return the list of <code>Content</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends Content> getLastModifiedByContents() throws RepositoryException {
        if (this.lastModifiedByContents == null) {
            this.lastModifiedByContents = getRelated(Content.class, "LastModifiedByContent");
        }
        return this.lastModifiedByContents;
    }
    /**
     * Auto generated method that gets the related <code>ContentAssoc</code> by the relation named <code>CreatedByContentAssoc</code>.
     * @return the list of <code>ContentAssoc</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ContentAssoc> getCreatedByContentAssocs() throws RepositoryException {
        if (this.createdByContentAssocs == null) {
            this.createdByContentAssocs = getRelated(ContentAssoc.class, "CreatedByContentAssoc");
        }
        return this.createdByContentAssocs;
    }
    /**
     * Auto generated method that gets the related <code>ContentAssoc</code> by the relation named <code>LastModifiedByContentAssoc</code>.
     * @return the list of <code>ContentAssoc</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ContentAssoc> getLastModifiedByContentAssocs() throws RepositoryException {
        if (this.lastModifiedByContentAssocs == null) {
            this.lastModifiedByContentAssocs = getRelated(ContentAssoc.class, "LastModifiedByContentAssoc");
        }
        return this.lastModifiedByContentAssocs;
    }
    /**
     * Auto generated method that gets the related <code>DataResource</code> by the relation named <code>CreatedByDataResource</code>.
     * @return the list of <code>DataResource</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends DataResource> getCreatedByDataResources() throws RepositoryException {
        if (this.createdByDataResources == null) {
            this.createdByDataResources = getRelated(DataResource.class, "CreatedByDataResource");
        }
        return this.createdByDataResources;
    }
    /**
     * Auto generated method that gets the related <code>DataResource</code> by the relation named <code>LastModifiedByDataResource</code>.
     * @return the list of <code>DataResource</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends DataResource> getLastModifiedByDataResources() throws RepositoryException {
        if (this.lastModifiedByDataResources == null) {
            this.lastModifiedByDataResources = getRelated(DataResource.class, "LastModifiedByDataResource");
        }
        return this.lastModifiedByDataResources;
    }
    /**
     * Auto generated method that gets the related <code>DataWarehouseTransform</code> by the relation named <code>DataWarehouseTransform</code>.
     * @return the list of <code>DataWarehouseTransform</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends DataWarehouseTransform> getDataWarehouseTransforms() throws RepositoryException {
        if (this.dataWarehouseTransforms == null) {
            this.dataWarehouseTransforms = getRelated(DataWarehouseTransform.class, "DataWarehouseTransform");
        }
        return this.dataWarehouseTransforms;
    }
    /**
     * Auto generated method that gets the related <code>EntityViewHistory</code> by the relation named <code>EntityViewHistory</code>.
     * @return the list of <code>EntityViewHistory</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends EntityViewHistory> getEntityViewHistorys() throws RepositoryException {
        if (this.entityViewHistorys == null) {
            this.entityViewHistorys = getRelated(EntityViewHistory.class, "EntityViewHistory");
        }
        return this.entityViewHistorys;
    }
    /**
     * Auto generated method that gets the related <code>InventoryItemTrace</code> by the relation named <code>InventoryItemTrace</code>.
     * @return the list of <code>InventoryItemTrace</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends InventoryItemTrace> getInventoryItemTraces() throws RepositoryException {
        if (this.inventoryItemTraces == null) {
            this.inventoryItemTraces = getRelated(InventoryItemTrace.class, "InventoryItemTrace");
        }
        return this.inventoryItemTraces;
    }
    /**
     * Auto generated method that gets the related <code>InventoryItemValueHistory</code> by the relation named <code>InventoryItemValueHistory</code>.
     * @return the list of <code>InventoryItemValueHistory</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends InventoryItemValueHistory> getInventoryItemValueHistorys() throws RepositoryException {
        if (this.inventoryItemValueHistorys == null) {
            this.inventoryItemValueHistorys = getRelated(InventoryItemValueHistory.class, "InventoryItemValueHistory");
        }
        return this.inventoryItemValueHistorys;
    }
    /**
     * Auto generated method that gets the related <code>InvoiceAdjustment</code> by the relation named <code>InvoiceAdjustment</code>.
     * @return the list of <code>InvoiceAdjustment</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends InvoiceAdjustment> getInvoiceAdjustments() throws RepositoryException {
        if (this.invoiceAdjustments == null) {
            this.invoiceAdjustments = getRelated(InvoiceAdjustment.class, "InvoiceAdjustment");
        }
        return this.invoiceAdjustments;
    }
    /**
     * Auto generated method that gets the related <code>ItemIssuance</code> by the relation named <code>IssuedByItemIssuance</code>.
     * @return the list of <code>ItemIssuance</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ItemIssuance> getIssuedByItemIssuances() throws RepositoryException {
        if (this.issuedByItemIssuances == null) {
            this.issuedByItemIssuances = getRelated(ItemIssuance.class, "IssuedByItemIssuance");
        }
        return this.issuedByItemIssuances;
    }
    /**
     * Auto generated method that gets the related <code>JobSandbox</code> by the relation named <code>AuthJobSandbox</code>.
     * @return the list of <code>JobSandbox</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends JobSandbox> getAuthJobSandboxes() throws RepositoryException {
        if (this.authJobSandboxes == null) {
            this.authJobSandboxes = getRelated(JobSandbox.class, "AuthJobSandbox");
        }
        return this.authJobSandboxes;
    }
    /**
     * Auto generated method that gets the related <code>JobSandbox</code> by the relation named <code>RunAsJobSandbox</code>.
     * @return the list of <code>JobSandbox</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends JobSandbox> getRunAsJobSandboxes() throws RepositoryException {
        if (this.runAsJobSandboxes == null) {
            this.runAsJobSandboxes = getRelated(JobSandbox.class, "RunAsJobSandbox");
        }
        return this.runAsJobSandboxes;
    }
    /**
     * Auto generated method that gets the related <code>KeyboardShortcut</code> by the relation named <code>KeyboardShortcut</code>.
     * @return the list of <code>KeyboardShortcut</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends KeyboardShortcut> getKeyboardShortcuts() throws RepositoryException {
        if (this.keyboardShortcuts == null) {
            this.keyboardShortcuts = getRelated(KeyboardShortcut.class, "KeyboardShortcut");
        }
        return this.keyboardShortcuts;
    }
    /**
     * Auto generated method that gets the related <code>LockboxBatch</code> by the relation named <code>LockboxBatch</code>.
     * @return the list of <code>LockboxBatch</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends LockboxBatch> getLockboxBatches() throws RepositoryException {
        if (this.lockboxBatches == null) {
            this.lockboxBatches = getRelated(LockboxBatch.class, "LockboxBatch");
        }
        return this.lockboxBatches;
    }
    /**
     * Auto generated method that gets the related <code>OrderAdjustment</code> by the relation named <code>OrderAdjustment</code>.
     * @return the list of <code>OrderAdjustment</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends OrderAdjustment> getOrderAdjustments() throws RepositoryException {
        if (this.orderAdjustments == null) {
            this.orderAdjustments = getRelated(OrderAdjustment.class, "OrderAdjustment");
        }
        return this.orderAdjustments;
    }
    /**
     * Auto generated method that gets the related <code>OrderHeader</code> by the relation named <code>CreatedByOrderHeader</code>.
     * @return the list of <code>OrderHeader</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends OrderHeader> getCreatedByOrderHeaders() throws RepositoryException {
        if (this.createdByOrderHeaders == null) {
            this.createdByOrderHeaders = getRelated(OrderHeader.class, "CreatedByOrderHeader");
        }
        return this.createdByOrderHeaders;
    }
    /**
     * Auto generated method that gets the related <code>OrderItem</code> by the relation named <code>DontCancelSetOrderItem</code>.
     * @return the list of <code>OrderItem</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends OrderItem> getDontCancelSetOrderItems() throws RepositoryException {
        if (this.dontCancelSetOrderItems == null) {
            this.dontCancelSetOrderItems = getRelated(OrderItem.class, "DontCancelSetOrderItem");
        }
        return this.dontCancelSetOrderItems;
    }
    /**
     * Auto generated method that gets the related <code>OrderItemChange</code> by the relation named <code>OrderItemChange</code>.
     * @return the list of <code>OrderItemChange</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends OrderItemChange> getOrderItemChanges() throws RepositoryException {
        if (this.orderItemChanges == null) {
            this.orderItemChanges = getRelated(OrderItemChange.class, "OrderItemChange");
        }
        return this.orderItemChanges;
    }
    /**
     * Auto generated method that gets the related <code>OrderPaymentPreference</code> by the relation named <code>OrderPaymentPreference</code>.
     * @return the list of <code>OrderPaymentPreference</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends OrderPaymentPreference> getOrderPaymentPreferences() throws RepositoryException {
        if (this.orderPaymentPreferences == null) {
            this.orderPaymentPreferences = getRelated(OrderPaymentPreference.class, "OrderPaymentPreference");
        }
        return this.orderPaymentPreferences;
    }
    /**
     * Auto generated method that gets the related <code>OrderStatus</code> by the relation named <code>OrderStatus</code>.
     * @return the list of <code>OrderStatus</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends OrderStatus> getOrderStatuses() throws RepositoryException {
        if (this.orderStatuses == null) {
            this.orderStatuses = getRelated(OrderStatus.class, "OrderStatus");
        }
        return this.orderStatuses;
    }
    /**
     * Auto generated method that gets the related <code>Party</code> by the relation named <code>CreatedByParty</code>.
     * @return the list of <code>Party</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends Party> getCreatedByPartys() throws RepositoryException {
        if (this.createdByPartys == null) {
            this.createdByPartys = getRelated(Party.class, "CreatedByParty");
        }
        return this.createdByPartys;
    }
    /**
     * Auto generated method that gets the related <code>Party</code> by the relation named <code>LastModifiedByParty</code>.
     * @return the list of <code>Party</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends Party> getLastModifiedByPartys() throws RepositoryException {
        if (this.lastModifiedByPartys == null) {
            this.lastModifiedByPartys = getRelated(Party.class, "LastModifiedByParty");
        }
        return this.lastModifiedByPartys;
    }
    /**
     * Auto generated method that gets the related <code>PicklistRole</code> by the relation named <code>CreatedByPicklistRole</code>.
     * @return the list of <code>PicklistRole</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends PicklistRole> getCreatedByPicklistRoles() throws RepositoryException {
        if (this.createdByPicklistRoles == null) {
            this.createdByPicklistRoles = getRelated(PicklistRole.class, "CreatedByPicklistRole");
        }
        return this.createdByPicklistRoles;
    }
    /**
     * Auto generated method that gets the related <code>PicklistRole</code> by the relation named <code>LastModifiedByPicklistRole</code>.
     * @return the list of <code>PicklistRole</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends PicklistRole> getLastModifiedByPicklistRoles() throws RepositoryException {
        if (this.lastModifiedByPicklistRoles == null) {
            this.lastModifiedByPicklistRoles = getRelated(PicklistRole.class, "LastModifiedByPicklistRole");
        }
        return this.lastModifiedByPicklistRoles;
    }
    /**
     * Auto generated method that gets the related <code>PicklistStatusHistory</code> by the relation named <code>ChangePicklistStatusHistory</code>.
     * @return the list of <code>PicklistStatusHistory</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends PicklistStatusHistory> getChangePicklistStatusHistorys() throws RepositoryException {
        if (this.changePicklistStatusHistorys == null) {
            this.changePicklistStatusHistorys = getRelated(PicklistStatusHistory.class, "ChangePicklistStatusHistory");
        }
        return this.changePicklistStatusHistorys;
    }
    /**
     * Auto generated method that gets the related <code>Product</code> by the relation named <code>CreatedByProduct</code>.
     * @return the list of <code>Product</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends Product> getCreatedByProducts() throws RepositoryException {
        if (this.createdByProducts == null) {
            this.createdByProducts = getRelated(Product.class, "CreatedByProduct");
        }
        return this.createdByProducts;
    }
    /**
     * Auto generated method that gets the related <code>Product</code> by the relation named <code>LastModifiedByProduct</code>.
     * @return the list of <code>Product</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends Product> getLastModifiedByProducts() throws RepositoryException {
        if (this.lastModifiedByProducts == null) {
            this.lastModifiedByProducts = getRelated(Product.class, "LastModifiedByProduct");
        }
        return this.lastModifiedByProducts;
    }
    /**
     * Auto generated method that gets the related <code>ProductFeaturePrice</code> by the relation named <code>CreatedByProductFeaturePrice</code>.
     * @return the list of <code>ProductFeaturePrice</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ProductFeaturePrice> getCreatedByProductFeaturePrices() throws RepositoryException {
        if (this.createdByProductFeaturePrices == null) {
            this.createdByProductFeaturePrices = getRelated(ProductFeaturePrice.class, "CreatedByProductFeaturePrice");
        }
        return this.createdByProductFeaturePrices;
    }
    /**
     * Auto generated method that gets the related <code>ProductFeaturePrice</code> by the relation named <code>LastModifiedByProductFeaturePrice</code>.
     * @return the list of <code>ProductFeaturePrice</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ProductFeaturePrice> getLastModifiedByProductFeaturePrices() throws RepositoryException {
        if (this.lastModifiedByProductFeaturePrices == null) {
            this.lastModifiedByProductFeaturePrices = getRelated(ProductFeaturePrice.class, "LastModifiedByProductFeaturePrice");
        }
        return this.lastModifiedByProductFeaturePrices;
    }
    /**
     * Auto generated method that gets the related <code>ProductPrice</code> by the relation named <code>CreatedByProductPrice</code>.
     * @return the list of <code>ProductPrice</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ProductPrice> getCreatedByProductPrices() throws RepositoryException {
        if (this.createdByProductPrices == null) {
            this.createdByProductPrices = getRelated(ProductPrice.class, "CreatedByProductPrice");
        }
        return this.createdByProductPrices;
    }
    /**
     * Auto generated method that gets the related <code>ProductPrice</code> by the relation named <code>LastModifiedByProductPrice</code>.
     * @return the list of <code>ProductPrice</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ProductPrice> getLastModifiedByProductPrices() throws RepositoryException {
        if (this.lastModifiedByProductPrices == null) {
            this.lastModifiedByProductPrices = getRelated(ProductPrice.class, "LastModifiedByProductPrice");
        }
        return this.lastModifiedByProductPrices;
    }
    /**
     * Auto generated method that gets the related <code>ProductPriceChange</code> by the relation named <code>ChangedByProductPriceChange</code>.
     * @return the list of <code>ProductPriceChange</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ProductPriceChange> getChangedByProductPriceChanges() throws RepositoryException {
        if (this.changedByProductPriceChanges == null) {
            this.changedByProductPriceChanges = getRelated(ProductPriceChange.class, "ChangedByProductPriceChange");
        }
        return this.changedByProductPriceChanges;
    }
    /**
     * Auto generated method that gets the related <code>ProductPromo</code> by the relation named <code>CreatedByProductPromo</code>.
     * @return the list of <code>ProductPromo</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ProductPromo> getCreatedByProductPromoes() throws RepositoryException {
        if (this.createdByProductPromoes == null) {
            this.createdByProductPromoes = getRelated(ProductPromo.class, "CreatedByProductPromo");
        }
        return this.createdByProductPromoes;
    }
    /**
     * Auto generated method that gets the related <code>ProductPromo</code> by the relation named <code>LastModifiedByProductPromo</code>.
     * @return the list of <code>ProductPromo</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ProductPromo> getLastModifiedByProductPromoes() throws RepositoryException {
        if (this.lastModifiedByProductPromoes == null) {
            this.lastModifiedByProductPromoes = getRelated(ProductPromo.class, "LastModifiedByProductPromo");
        }
        return this.lastModifiedByProductPromoes;
    }
    /**
     * Auto generated method that gets the related <code>ProductPromoCode</code> by the relation named <code>CreatedByProductPromoCode</code>.
     * @return the list of <code>ProductPromoCode</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ProductPromoCode> getCreatedByProductPromoCodes() throws RepositoryException {
        if (this.createdByProductPromoCodes == null) {
            this.createdByProductPromoCodes = getRelated(ProductPromoCode.class, "CreatedByProductPromoCode");
        }
        return this.createdByProductPromoCodes;
    }
    /**
     * Auto generated method that gets the related <code>ProductPromoCode</code> by the relation named <code>LastModifiedByProductPromoCode</code>.
     * @return the list of <code>ProductPromoCode</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ProductPromoCode> getLastModifiedByProductPromoCodes() throws RepositoryException {
        if (this.lastModifiedByProductPromoCodes == null) {
            this.lastModifiedByProductPromoCodes = getRelated(ProductPromoCode.class, "LastModifiedByProductPromoCode");
        }
        return this.lastModifiedByProductPromoCodes;
    }
    /**
     * Auto generated method that gets the related <code>ProductReview</code> by the relation named <code>ProductReview</code>.
     * @return the list of <code>ProductReview</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ProductReview> getProductReviews() throws RepositoryException {
        if (this.productReviews == null) {
            this.productReviews = getRelated(ProductReview.class, "ProductReview");
        }
        return this.productReviews;
    }
    /**
     * Auto generated method that gets the related <code>QuoteAdjustment</code> by the relation named <code>QuoteAdjustment</code>.
     * @return the list of <code>QuoteAdjustment</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends QuoteAdjustment> getQuoteAdjustments() throws RepositoryException {
        if (this.quoteAdjustments == null) {
            this.quoteAdjustments = getRelated(QuoteAdjustment.class, "QuoteAdjustment");
        }
        return this.quoteAdjustments;
    }
    /**
     * Auto generated method that gets the related <code>ReturnAdjustment</code> by the relation named <code>ReturnAdjustment</code>.
     * @return the list of <code>ReturnAdjustment</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ReturnAdjustment> getReturnAdjustments() throws RepositoryException {
        if (this.returnAdjustments == null) {
            this.returnAdjustments = getRelated(ReturnAdjustment.class, "ReturnAdjustment");
        }
        return this.returnAdjustments;
    }
    /**
     * Auto generated method that gets the related <code>ReturnHeader</code> by the relation named <code>ReturnHeader</code>.
     * @return the list of <code>ReturnHeader</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ReturnHeader> getReturnHeaders() throws RepositoryException {
        if (this.returnHeaders == null) {
            this.returnHeaders = getRelated(ReturnHeader.class, "ReturnHeader");
        }
        return this.returnHeaders;
    }
    /**
     * Auto generated method that gets the related <code>SalesForecast</code> by the relation named <code>CreatedBySalesForecast</code>.
     * @return the list of <code>SalesForecast</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends SalesForecast> getCreatedBySalesForecasts() throws RepositoryException {
        if (this.createdBySalesForecasts == null) {
            this.createdBySalesForecasts = getRelated(SalesForecast.class, "CreatedBySalesForecast");
        }
        return this.createdBySalesForecasts;
    }
    /**
     * Auto generated method that gets the related <code>SalesForecast</code> by the relation named <code>ModifiedBySalesForecast</code>.
     * @return the list of <code>SalesForecast</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends SalesForecast> getModifiedBySalesForecasts() throws RepositoryException {
        if (this.modifiedBySalesForecasts == null) {
            this.modifiedBySalesForecasts = getRelated(SalesForecast.class, "ModifiedBySalesForecast");
        }
        return this.modifiedBySalesForecasts;
    }
    /**
     * Auto generated method that gets the related <code>SalesForecastHistory</code> by the relation named <code>ModifiedBySalesForecastHistory</code>.
     * @return the list of <code>SalesForecastHistory</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends SalesForecastHistory> getModifiedBySalesForecastHistorys() throws RepositoryException {
        if (this.modifiedBySalesForecastHistorys == null) {
            this.modifiedBySalesForecastHistorys = getRelated(SalesForecastHistory.class, "ModifiedBySalesForecastHistory");
        }
        return this.modifiedBySalesForecastHistorys;
    }
    /**
     * Auto generated method that gets the related <code>SalesOpportunity</code> by the relation named <code>SalesOpportunity</code>.
     * @return the list of <code>SalesOpportunity</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends SalesOpportunity> getSalesOpportunitys() throws RepositoryException {
        if (this.salesOpportunitys == null) {
            this.salesOpportunitys = getRelated(SalesOpportunity.class, "SalesOpportunity");
        }
        return this.salesOpportunitys;
    }
    /**
     * Auto generated method that gets the related <code>SalesOpportunityHistory</code> by the relation named <code>SalesOpportunityHistory</code>.
     * @return the list of <code>SalesOpportunityHistory</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends SalesOpportunityHistory> getSalesOpportunityHistorys() throws RepositoryException {
        if (this.salesOpportunityHistorys == null) {
            this.salesOpportunityHistorys = getRelated(SalesOpportunityHistory.class, "SalesOpportunityHistory");
        }
        return this.salesOpportunityHistorys;
    }
    /**
     * Auto generated method that gets the related <code>ServerHit</code> by the relation named <code>ServerHit</code>.
     * @return the list of <code>ServerHit</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ServerHit> getServerHits() throws RepositoryException {
        if (this.serverHits == null) {
            this.serverHits = getRelated(ServerHit.class, "ServerHit");
        }
        return this.serverHits;
    }
    /**
     * Auto generated method that gets the related <code>ServiceTestRecord</code> by the relation named <code>CreatedByServiceTestRecord</code>.
     * @return the list of <code>ServiceTestRecord</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ServiceTestRecord> getCreatedByServiceTestRecords() throws RepositoryException {
        if (this.createdByServiceTestRecords == null) {
            this.createdByServiceTestRecords = getRelated(ServiceTestRecord.class, "CreatedByServiceTestRecord");
        }
        return this.createdByServiceTestRecords;
    }
    /**
     * Auto generated method that gets the related <code>ServiceTestRecord</code> by the relation named <code>ModifiedByServiceTestRecord</code>.
     * @return the list of <code>ServiceTestRecord</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ServiceTestRecord> getModifiedByServiceTestRecords() throws RepositoryException {
        if (this.modifiedByServiceTestRecords == null) {
            this.modifiedByServiceTestRecords = getRelated(ServiceTestRecord.class, "ModifiedByServiceTestRecord");
        }
        return this.modifiedByServiceTestRecords;
    }
    /**
     * Auto generated method that gets the related <code>ShipmentReceipt</code> by the relation named <code>ShipmentReceipt</code>.
     * @return the list of <code>ShipmentReceipt</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ShipmentReceipt> getShipmentReceipts() throws RepositoryException {
        if (this.shipmentReceipts == null) {
            this.shipmentReceipts = getRelated(ShipmentReceipt.class, "ShipmentReceipt");
        }
        return this.shipmentReceipts;
    }
    /**
     * Auto generated method that gets the related <code>Timesheet</code> by the relation named <code>ApprovedByTimesheet</code>.
     * @return the list of <code>Timesheet</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends Timesheet> getApprovedByTimesheets() throws RepositoryException {
        if (this.approvedByTimesheets == null) {
            this.approvedByTimesheets = getRelated(Timesheet.class, "ApprovedByTimesheet");
        }
        return this.approvedByTimesheets;
    }
    /**
     * Auto generated method that gets the related <code>UserLoginHistory</code> by the relation named <code>UserLoginHistory</code>.
     * @return the list of <code>UserLoginHistory</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends UserLoginHistory> getUserLoginHistorys() throws RepositoryException {
        if (this.userLoginHistorys == null) {
            this.userLoginHistorys = getRelated(UserLoginHistory.class, "UserLoginHistory");
        }
        return this.userLoginHistorys;
    }
    /**
     * Auto generated method that gets the related <code>UserLoginPasswordHistory</code> by the relation named <code>UserLoginPasswordHistory</code>.
     * @return the list of <code>UserLoginPasswordHistory</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends UserLoginPasswordHistory> getUserLoginPasswordHistorys() throws RepositoryException {
        if (this.userLoginPasswordHistorys == null) {
            this.userLoginPasswordHistorys = getRelated(UserLoginPasswordHistory.class, "UserLoginPasswordHistory");
        }
        return this.userLoginPasswordHistorys;
    }
    /**
     * Auto generated method that gets the related <code>UserLoginSecurityGroup</code> by the relation named <code>UserLoginSecurityGroup</code>.
     * @return the list of <code>UserLoginSecurityGroup</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends UserLoginSecurityGroup> getUserLoginSecurityGroups() throws RepositoryException {
        if (this.userLoginSecurityGroups == null) {
            this.userLoginSecurityGroups = getRelated(UserLoginSecurityGroup.class, "UserLoginSecurityGroup");
        }
        return this.userLoginSecurityGroups;
    }
    /**
     * Auto generated method that gets the related <code>UserLoginSession</code> by the relation named <code>UserLoginSession</code>.
     * @return the <code>UserLoginSession</code>
     * @throws RepositoryException if an error occurs
     */
    public UserLoginSession getUserLoginSession() throws RepositoryException {
        if (this.userLoginSession == null) {
            this.userLoginSession = getRelatedOne(UserLoginSession.class, "UserLoginSession");
        }
        return this.userLoginSession;
    }
    /**
     * Auto generated method that gets the related <code>ViewPreference</code> by the relation named <code>ViewPreference</code>.
     * @return the list of <code>ViewPreference</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ViewPreference> getViewPreferences() throws RepositoryException {
        if (this.viewPreferences == null) {
            this.viewPreferences = getRelated(ViewPreference.class, "ViewPreference");
        }
        return this.viewPreferences;
    }
    /**
     * Auto generated method that gets the related <code>Visitor</code> by the relation named <code>Visitor</code>.
     * @return the list of <code>Visitor</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends Visitor> getVisitors() throws RepositoryException {
        if (this.visitors == null) {
            this.visitors = getRelated(Visitor.class, "Visitor");
        }
        return this.visitors;
    }
    /**
     * Auto generated method that gets the related <code>WebUserPreference</code> by the relation named <code>WebUserPreference</code>.
     * @return the list of <code>WebUserPreference</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends WebUserPreference> getWebUserPreferences() throws RepositoryException {
        if (this.webUserPreferences == null) {
            this.webUserPreferences = getRelated(WebUserPreference.class, "WebUserPreference");
        }
        return this.webUserPreferences;
    }
    /**
     * Auto generated method that gets the related <code>WorkEffortPartyAssignment</code> by the relation named <code>AssignedByWorkEffortPartyAssignment</code>.
     * @return the list of <code>WorkEffortPartyAssignment</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends WorkEffortPartyAssignment> getAssignedByWorkEffortPartyAssignments() throws RepositoryException {
        if (this.assignedByWorkEffortPartyAssignments == null) {
            this.assignedByWorkEffortPartyAssignments = getRelated(WorkEffortPartyAssignment.class, "AssignedByWorkEffortPartyAssignment");
        }
        return this.assignedByWorkEffortPartyAssignments;
    }
    /**
     * Auto generated method that gets the related <code>WorkEffortReview</code> by the relation named <code>WorkEffortReview</code>.
     * @return the list of <code>WorkEffortReview</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends WorkEffortReview> getWorkEffortReviews() throws RepositoryException {
        if (this.workEffortReviews == null) {
            this.workEffortReviews = getRelated(WorkEffortReview.class, "WorkEffortReview");
        }
        return this.workEffortReviews;
    }
    /**
     * Auto generated method that gets the related <code>WorkEffortStatus</code> by the relation named <code>SetByWorkEffortStatus</code>.
     * @return the list of <code>WorkEffortStatus</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends WorkEffortStatus> getSetByWorkEffortStatuses() throws RepositoryException {
        if (this.setByWorkEffortStatuses == null) {
            this.setByWorkEffortStatuses = getRelated(WorkEffortStatus.class, "SetByWorkEffortStatus");
        }
        return this.setByWorkEffortStatuses;
    }

    /**
     * Auto generated value setter.
     * @param party the party to set
    */
    public void setParty(Party party) {
        this.party = party;
    }
    /**
     * Auto generated value setter.
     * @param person the person to set
    */
    public void setPerson(Person person) {
        this.person = person;
    }
    /**
     * Auto generated value setter.
     * @param partyGroup the partyGroup to set
    */
    public void setPartyGroup(PartyGroup partyGroup) {
        this.partyGroup = partyGroup;
    }
    /**
     * Auto generated value setter.
     * @param openCashDrawers the openCashDrawers to set
    */
    public void setOpenCashDrawers(List<CashDrawer> openCashDrawers) {
        this.openCashDrawers = openCashDrawers;
    }
    /**
     * Auto generated value setter.
     * @param operatorCashDrawers the operatorCashDrawers to set
    */
    public void setOperatorCashDrawers(List<CashDrawer> operatorCashDrawers) {
        this.operatorCashDrawers = operatorCashDrawers;
    }
    /**
     * Auto generated value setter.
     * @param closeCashDrawers the closeCashDrawers to set
    */
    public void setCloseCashDrawers(List<CashDrawer> closeCashDrawers) {
        this.closeCashDrawers = closeCashDrawers;
    }
    /**
     * Auto generated value setter.
     * @param createdByContactLists the createdByContactLists to set
    */
    public void setCreatedByContactLists(List<ContactList> createdByContactLists) {
        this.createdByContactLists = createdByContactLists;
    }
    /**
     * Auto generated value setter.
     * @param lastModifiedByContactLists the lastModifiedByContactLists to set
    */
    public void setLastModifiedByContactLists(List<ContactList> lastModifiedByContactLists) {
        this.lastModifiedByContactLists = lastModifiedByContactLists;
    }
    /**
     * Auto generated value setter.
     * @param createdByContents the createdByContents to set
    */
    public void setCreatedByContents(List<Content> createdByContents) {
        this.createdByContents = createdByContents;
    }
    /**
     * Auto generated value setter.
     * @param lastModifiedByContents the lastModifiedByContents to set
    */
    public void setLastModifiedByContents(List<Content> lastModifiedByContents) {
        this.lastModifiedByContents = lastModifiedByContents;
    }
    /**
     * Auto generated value setter.
     * @param createdByContentAssocs the createdByContentAssocs to set
    */
    public void setCreatedByContentAssocs(List<ContentAssoc> createdByContentAssocs) {
        this.createdByContentAssocs = createdByContentAssocs;
    }
    /**
     * Auto generated value setter.
     * @param lastModifiedByContentAssocs the lastModifiedByContentAssocs to set
    */
    public void setLastModifiedByContentAssocs(List<ContentAssoc> lastModifiedByContentAssocs) {
        this.lastModifiedByContentAssocs = lastModifiedByContentAssocs;
    }
    /**
     * Auto generated value setter.
     * @param createdByDataResources the createdByDataResources to set
    */
    public void setCreatedByDataResources(List<DataResource> createdByDataResources) {
        this.createdByDataResources = createdByDataResources;
    }
    /**
     * Auto generated value setter.
     * @param lastModifiedByDataResources the lastModifiedByDataResources to set
    */
    public void setLastModifiedByDataResources(List<DataResource> lastModifiedByDataResources) {
        this.lastModifiedByDataResources = lastModifiedByDataResources;
    }
    /**
     * Auto generated value setter.
     * @param dataWarehouseTransforms the dataWarehouseTransforms to set
    */
    public void setDataWarehouseTransforms(List<DataWarehouseTransform> dataWarehouseTransforms) {
        this.dataWarehouseTransforms = dataWarehouseTransforms;
    }
    /**
     * Auto generated value setter.
     * @param entityViewHistorys the entityViewHistorys to set
    */
    public void setEntityViewHistorys(List<EntityViewHistory> entityViewHistorys) {
        this.entityViewHistorys = entityViewHistorys;
    }
    /**
     * Auto generated value setter.
     * @param inventoryItemTraces the inventoryItemTraces to set
    */
    public void setInventoryItemTraces(List<InventoryItemTrace> inventoryItemTraces) {
        this.inventoryItemTraces = inventoryItemTraces;
    }
    /**
     * Auto generated value setter.
     * @param inventoryItemValueHistorys the inventoryItemValueHistorys to set
    */
    public void setInventoryItemValueHistorys(List<InventoryItemValueHistory> inventoryItemValueHistorys) {
        this.inventoryItemValueHistorys = inventoryItemValueHistorys;
    }
    /**
     * Auto generated value setter.
     * @param invoiceAdjustments the invoiceAdjustments to set
    */
    public void setInvoiceAdjustments(List<InvoiceAdjustment> invoiceAdjustments) {
        this.invoiceAdjustments = invoiceAdjustments;
    }
    /**
     * Auto generated value setter.
     * @param issuedByItemIssuances the issuedByItemIssuances to set
    */
    public void setIssuedByItemIssuances(List<ItemIssuance> issuedByItemIssuances) {
        this.issuedByItemIssuances = issuedByItemIssuances;
    }
    /**
     * Auto generated value setter.
     * @param authJobSandboxes the authJobSandboxes to set
    */
    public void setAuthJobSandboxes(List<JobSandbox> authJobSandboxes) {
        this.authJobSandboxes = authJobSandboxes;
    }
    /**
     * Auto generated value setter.
     * @param runAsJobSandboxes the runAsJobSandboxes to set
    */
    public void setRunAsJobSandboxes(List<JobSandbox> runAsJobSandboxes) {
        this.runAsJobSandboxes = runAsJobSandboxes;
    }
    /**
     * Auto generated value setter.
     * @param keyboardShortcuts the keyboardShortcuts to set
    */
    public void setKeyboardShortcuts(List<KeyboardShortcut> keyboardShortcuts) {
        this.keyboardShortcuts = keyboardShortcuts;
    }
    /**
     * Auto generated value setter.
     * @param lockboxBatches the lockboxBatches to set
    */
    public void setLockboxBatches(List<LockboxBatch> lockboxBatches) {
        this.lockboxBatches = lockboxBatches;
    }
    /**
     * Auto generated value setter.
     * @param orderAdjustments the orderAdjustments to set
    */
    public void setOrderAdjustments(List<OrderAdjustment> orderAdjustments) {
        this.orderAdjustments = orderAdjustments;
    }
    /**
     * Auto generated value setter.
     * @param createdByOrderHeaders the createdByOrderHeaders to set
    */
    public void setCreatedByOrderHeaders(List<OrderHeader> createdByOrderHeaders) {
        this.createdByOrderHeaders = createdByOrderHeaders;
    }
    /**
     * Auto generated value setter.
     * @param dontCancelSetOrderItems the dontCancelSetOrderItems to set
    */
    public void setDontCancelSetOrderItems(List<OrderItem> dontCancelSetOrderItems) {
        this.dontCancelSetOrderItems = dontCancelSetOrderItems;
    }
    /**
     * Auto generated value setter.
     * @param orderItemChanges the orderItemChanges to set
    */
    public void setOrderItemChanges(List<OrderItemChange> orderItemChanges) {
        this.orderItemChanges = orderItemChanges;
    }
    /**
     * Auto generated value setter.
     * @param orderPaymentPreferences the orderPaymentPreferences to set
    */
    public void setOrderPaymentPreferences(List<OrderPaymentPreference> orderPaymentPreferences) {
        this.orderPaymentPreferences = orderPaymentPreferences;
    }
    /**
     * Auto generated value setter.
     * @param orderStatuses the orderStatuses to set
    */
    public void setOrderStatuses(List<OrderStatus> orderStatuses) {
        this.orderStatuses = orderStatuses;
    }
    /**
     * Auto generated value setter.
     * @param createdByPartys the createdByPartys to set
    */
    public void setCreatedByPartys(List<Party> createdByPartys) {
        this.createdByPartys = createdByPartys;
    }
    /**
     * Auto generated value setter.
     * @param lastModifiedByPartys the lastModifiedByPartys to set
    */
    public void setLastModifiedByPartys(List<Party> lastModifiedByPartys) {
        this.lastModifiedByPartys = lastModifiedByPartys;
    }
    /**
     * Auto generated value setter.
     * @param createdByPicklistRoles the createdByPicklistRoles to set
    */
    public void setCreatedByPicklistRoles(List<PicklistRole> createdByPicklistRoles) {
        this.createdByPicklistRoles = createdByPicklistRoles;
    }
    /**
     * Auto generated value setter.
     * @param lastModifiedByPicklistRoles the lastModifiedByPicklistRoles to set
    */
    public void setLastModifiedByPicklistRoles(List<PicklistRole> lastModifiedByPicklistRoles) {
        this.lastModifiedByPicklistRoles = lastModifiedByPicklistRoles;
    }
    /**
     * Auto generated value setter.
     * @param changePicklistStatusHistorys the changePicklistStatusHistorys to set
    */
    public void setChangePicklistStatusHistorys(List<PicklistStatusHistory> changePicklistStatusHistorys) {
        this.changePicklistStatusHistorys = changePicklistStatusHistorys;
    }
    /**
     * Auto generated value setter.
     * @param createdByProducts the createdByProducts to set
    */
    public void setCreatedByProducts(List<Product> createdByProducts) {
        this.createdByProducts = createdByProducts;
    }
    /**
     * Auto generated value setter.
     * @param lastModifiedByProducts the lastModifiedByProducts to set
    */
    public void setLastModifiedByProducts(List<Product> lastModifiedByProducts) {
        this.lastModifiedByProducts = lastModifiedByProducts;
    }
    /**
     * Auto generated value setter.
     * @param createdByProductFeaturePrices the createdByProductFeaturePrices to set
    */
    public void setCreatedByProductFeaturePrices(List<ProductFeaturePrice> createdByProductFeaturePrices) {
        this.createdByProductFeaturePrices = createdByProductFeaturePrices;
    }
    /**
     * Auto generated value setter.
     * @param lastModifiedByProductFeaturePrices the lastModifiedByProductFeaturePrices to set
    */
    public void setLastModifiedByProductFeaturePrices(List<ProductFeaturePrice> lastModifiedByProductFeaturePrices) {
        this.lastModifiedByProductFeaturePrices = lastModifiedByProductFeaturePrices;
    }
    /**
     * Auto generated value setter.
     * @param createdByProductPrices the createdByProductPrices to set
    */
    public void setCreatedByProductPrices(List<ProductPrice> createdByProductPrices) {
        this.createdByProductPrices = createdByProductPrices;
    }
    /**
     * Auto generated value setter.
     * @param lastModifiedByProductPrices the lastModifiedByProductPrices to set
    */
    public void setLastModifiedByProductPrices(List<ProductPrice> lastModifiedByProductPrices) {
        this.lastModifiedByProductPrices = lastModifiedByProductPrices;
    }
    /**
     * Auto generated value setter.
     * @param changedByProductPriceChanges the changedByProductPriceChanges to set
    */
    public void setChangedByProductPriceChanges(List<ProductPriceChange> changedByProductPriceChanges) {
        this.changedByProductPriceChanges = changedByProductPriceChanges;
    }
    /**
     * Auto generated value setter.
     * @param createdByProductPromoes the createdByProductPromoes to set
    */
    public void setCreatedByProductPromoes(List<ProductPromo> createdByProductPromoes) {
        this.createdByProductPromoes = createdByProductPromoes;
    }
    /**
     * Auto generated value setter.
     * @param lastModifiedByProductPromoes the lastModifiedByProductPromoes to set
    */
    public void setLastModifiedByProductPromoes(List<ProductPromo> lastModifiedByProductPromoes) {
        this.lastModifiedByProductPromoes = lastModifiedByProductPromoes;
    }
    /**
     * Auto generated value setter.
     * @param createdByProductPromoCodes the createdByProductPromoCodes to set
    */
    public void setCreatedByProductPromoCodes(List<ProductPromoCode> createdByProductPromoCodes) {
        this.createdByProductPromoCodes = createdByProductPromoCodes;
    }
    /**
     * Auto generated value setter.
     * @param lastModifiedByProductPromoCodes the lastModifiedByProductPromoCodes to set
    */
    public void setLastModifiedByProductPromoCodes(List<ProductPromoCode> lastModifiedByProductPromoCodes) {
        this.lastModifiedByProductPromoCodes = lastModifiedByProductPromoCodes;
    }
    /**
     * Auto generated value setter.
     * @param productReviews the productReviews to set
    */
    public void setProductReviews(List<ProductReview> productReviews) {
        this.productReviews = productReviews;
    }
    /**
     * Auto generated value setter.
     * @param quoteAdjustments the quoteAdjustments to set
    */
    public void setQuoteAdjustments(List<QuoteAdjustment> quoteAdjustments) {
        this.quoteAdjustments = quoteAdjustments;
    }
    /**
     * Auto generated value setter.
     * @param returnAdjustments the returnAdjustments to set
    */
    public void setReturnAdjustments(List<ReturnAdjustment> returnAdjustments) {
        this.returnAdjustments = returnAdjustments;
    }
    /**
     * Auto generated value setter.
     * @param returnHeaders the returnHeaders to set
    */
    public void setReturnHeaders(List<ReturnHeader> returnHeaders) {
        this.returnHeaders = returnHeaders;
    }
    /**
     * Auto generated value setter.
     * @param createdBySalesForecasts the createdBySalesForecasts to set
    */
    public void setCreatedBySalesForecasts(List<SalesForecast> createdBySalesForecasts) {
        this.createdBySalesForecasts = createdBySalesForecasts;
    }
    /**
     * Auto generated value setter.
     * @param modifiedBySalesForecasts the modifiedBySalesForecasts to set
    */
    public void setModifiedBySalesForecasts(List<SalesForecast> modifiedBySalesForecasts) {
        this.modifiedBySalesForecasts = modifiedBySalesForecasts;
    }
    /**
     * Auto generated value setter.
     * @param modifiedBySalesForecastHistorys the modifiedBySalesForecastHistorys to set
    */
    public void setModifiedBySalesForecastHistorys(List<SalesForecastHistory> modifiedBySalesForecastHistorys) {
        this.modifiedBySalesForecastHistorys = modifiedBySalesForecastHistorys;
    }
    /**
     * Auto generated value setter.
     * @param salesOpportunitys the salesOpportunitys to set
    */
    public void setSalesOpportunitys(List<SalesOpportunity> salesOpportunitys) {
        this.salesOpportunitys = salesOpportunitys;
    }
    /**
     * Auto generated value setter.
     * @param salesOpportunityHistorys the salesOpportunityHistorys to set
    */
    public void setSalesOpportunityHistorys(List<SalesOpportunityHistory> salesOpportunityHistorys) {
        this.salesOpportunityHistorys = salesOpportunityHistorys;
    }
    /**
     * Auto generated value setter.
     * @param serverHits the serverHits to set
    */
    public void setServerHits(List<ServerHit> serverHits) {
        this.serverHits = serverHits;
    }
    /**
     * Auto generated value setter.
     * @param createdByServiceTestRecords the createdByServiceTestRecords to set
    */
    public void setCreatedByServiceTestRecords(List<ServiceTestRecord> createdByServiceTestRecords) {
        this.createdByServiceTestRecords = createdByServiceTestRecords;
    }
    /**
     * Auto generated value setter.
     * @param modifiedByServiceTestRecords the modifiedByServiceTestRecords to set
    */
    public void setModifiedByServiceTestRecords(List<ServiceTestRecord> modifiedByServiceTestRecords) {
        this.modifiedByServiceTestRecords = modifiedByServiceTestRecords;
    }
    /**
     * Auto generated value setter.
     * @param shipmentReceipts the shipmentReceipts to set
    */
    public void setShipmentReceipts(List<ShipmentReceipt> shipmentReceipts) {
        this.shipmentReceipts = shipmentReceipts;
    }
    /**
     * Auto generated value setter.
     * @param approvedByTimesheets the approvedByTimesheets to set
    */
    public void setApprovedByTimesheets(List<Timesheet> approvedByTimesheets) {
        this.approvedByTimesheets = approvedByTimesheets;
    }
    /**
     * Auto generated value setter.
     * @param userLoginHistorys the userLoginHistorys to set
    */
    public void setUserLoginHistorys(List<UserLoginHistory> userLoginHistorys) {
        this.userLoginHistorys = userLoginHistorys;
    }
    /**
     * Auto generated value setter.
     * @param userLoginPasswordHistorys the userLoginPasswordHistorys to set
    */
    public void setUserLoginPasswordHistorys(List<UserLoginPasswordHistory> userLoginPasswordHistorys) {
        this.userLoginPasswordHistorys = userLoginPasswordHistorys;
    }
    /**
     * Auto generated value setter.
     * @param userLoginSecurityGroups the userLoginSecurityGroups to set
    */
    public void setUserLoginSecurityGroups(List<UserLoginSecurityGroup> userLoginSecurityGroups) {
        this.userLoginSecurityGroups = userLoginSecurityGroups;
    }
    /**
     * Auto generated value setter.
     * @param userLoginSession the userLoginSession to set
    */
    public void setUserLoginSession(UserLoginSession userLoginSession) {
        this.userLoginSession = userLoginSession;
    }
    /**
     * Auto generated value setter.
     * @param viewPreferences the viewPreferences to set
    */
    public void setViewPreferences(List<ViewPreference> viewPreferences) {
        this.viewPreferences = viewPreferences;
    }
    /**
     * Auto generated value setter.
     * @param visitors the visitors to set
    */
    public void setVisitors(List<Visitor> visitors) {
        this.visitors = visitors;
    }
    /**
     * Auto generated value setter.
     * @param webUserPreferences the webUserPreferences to set
    */
    public void setWebUserPreferences(List<WebUserPreference> webUserPreferences) {
        this.webUserPreferences = webUserPreferences;
    }
    /**
     * Auto generated value setter.
     * @param assignedByWorkEffortPartyAssignments the assignedByWorkEffortPartyAssignments to set
    */
    public void setAssignedByWorkEffortPartyAssignments(List<WorkEffortPartyAssignment> assignedByWorkEffortPartyAssignments) {
        this.assignedByWorkEffortPartyAssignments = assignedByWorkEffortPartyAssignments;
    }
    /**
     * Auto generated value setter.
     * @param workEffortReviews the workEffortReviews to set
    */
    public void setWorkEffortReviews(List<WorkEffortReview> workEffortReviews) {
        this.workEffortReviews = workEffortReviews;
    }
    /**
     * Auto generated value setter.
     * @param setByWorkEffortStatuses the setByWorkEffortStatuses to set
    */
    public void setSetByWorkEffortStatuses(List<WorkEffortStatus> setByWorkEffortStatuses) {
        this.setByWorkEffortStatuses = setByWorkEffortStatuses;
    }

    /**
     * Auto generated method that add item to collection.
     */
    public void addEntityViewHistory(EntityViewHistory entityViewHistory) {
        if (this.entityViewHistorys == null) {
            this.entityViewHistorys = new ArrayList<EntityViewHistory>();
        }
        this.entityViewHistorys.add(entityViewHistory);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeEntityViewHistory(EntityViewHistory entityViewHistory) {
        if (this.entityViewHistorys == null) {
            return;
        }
        this.entityViewHistorys.remove(entityViewHistory);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearEntityViewHistory() {
        if (this.entityViewHistorys == null) {
            return;
        }
        this.entityViewHistorys.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addUserLoginHistory(UserLoginHistory userLoginHistory) {
        if (this.userLoginHistorys == null) {
            this.userLoginHistorys = new ArrayList<UserLoginHistory>();
        }
        this.userLoginHistorys.add(userLoginHistory);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeUserLoginHistory(UserLoginHistory userLoginHistory) {
        if (this.userLoginHistorys == null) {
            return;
        }
        this.userLoginHistorys.remove(userLoginHistory);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearUserLoginHistory() {
        if (this.userLoginHistorys == null) {
            return;
        }
        this.userLoginHistorys.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addUserLoginPasswordHistory(UserLoginPasswordHistory userLoginPasswordHistory) {
        if (this.userLoginPasswordHistorys == null) {
            this.userLoginPasswordHistorys = new ArrayList<UserLoginPasswordHistory>();
        }
        this.userLoginPasswordHistorys.add(userLoginPasswordHistory);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeUserLoginPasswordHistory(UserLoginPasswordHistory userLoginPasswordHistory) {
        if (this.userLoginPasswordHistorys == null) {
            return;
        }
        this.userLoginPasswordHistorys.remove(userLoginPasswordHistory);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearUserLoginPasswordHistory() {
        if (this.userLoginPasswordHistorys == null) {
            return;
        }
        this.userLoginPasswordHistorys.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addUserLoginSecurityGroup(UserLoginSecurityGroup userLoginSecurityGroup) {
        if (this.userLoginSecurityGroups == null) {
            this.userLoginSecurityGroups = new ArrayList<UserLoginSecurityGroup>();
        }
        this.userLoginSecurityGroups.add(userLoginSecurityGroup);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeUserLoginSecurityGroup(UserLoginSecurityGroup userLoginSecurityGroup) {
        if (this.userLoginSecurityGroups == null) {
            return;
        }
        this.userLoginSecurityGroups.remove(userLoginSecurityGroup);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearUserLoginSecurityGroup() {
        if (this.userLoginSecurityGroups == null) {
            return;
        }
        this.userLoginSecurityGroups.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addViewPreference(ViewPreference viewPreference) {
        if (this.viewPreferences == null) {
            this.viewPreferences = new ArrayList<ViewPreference>();
        }
        this.viewPreferences.add(viewPreference);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeViewPreference(ViewPreference viewPreference) {
        if (this.viewPreferences == null) {
            return;
        }
        this.viewPreferences.remove(viewPreference);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearViewPreference() {
        if (this.viewPreferences == null) {
            return;
        }
        this.viewPreferences.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addWebUserPreference(WebUserPreference webUserPreference) {
        if (this.webUserPreferences == null) {
            this.webUserPreferences = new ArrayList<WebUserPreference>();
        }
        this.webUserPreferences.add(webUserPreference);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeWebUserPreference(WebUserPreference webUserPreference) {
        if (this.webUserPreferences == null) {
            return;
        }
        this.webUserPreferences.remove(webUserPreference);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearWebUserPreference() {
        if (this.webUserPreferences == null) {
            return;
        }
        this.webUserPreferences.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addWorkEffortReview(WorkEffortReview workEffortReview) {
        if (this.workEffortReviews == null) {
            this.workEffortReviews = new ArrayList<WorkEffortReview>();
        }
        this.workEffortReviews.add(workEffortReview);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeWorkEffortReview(WorkEffortReview workEffortReview) {
        if (this.workEffortReviews == null) {
            return;
        }
        this.workEffortReviews.remove(workEffortReview);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearWorkEffortReview() {
        if (this.workEffortReviews == null) {
            return;
        }
        this.workEffortReviews.clear();
    }

    /** {@inheritDoc} */
    @Override
    public void fromMap(Map<String, Object> mapValue) {
        preInit();
        setUserLoginId((String) mapValue.get("userLoginId"));
        setCurrentPassword((String) mapValue.get("currentPassword"));
        setPasswordHint((String) mapValue.get("passwordHint"));
        setIsSystem((String) mapValue.get("isSystem"));
        setEnabled((String) mapValue.get("enabled"));
        setHasLoggedOut((String) mapValue.get("hasLoggedOut"));
        setRequirePasswordChange((String) mapValue.get("requirePasswordChange"));
        setLastCurrencyUom((String) mapValue.get("lastCurrencyUom"));
        setLastLocale((String) mapValue.get("lastLocale"));
        setLastTimeZone((String) mapValue.get("lastTimeZone"));
        setDisabledDateTime((Timestamp) mapValue.get("disabledDateTime"));
        setSuccessiveFailedLogins((Long) mapValue.get("successiveFailedLogins"));
        setUserLdapDn((String) mapValue.get("userLdapDn"));
        setLastUpdatedStamp((Timestamp) mapValue.get("lastUpdatedStamp"));
        setLastUpdatedTxStamp((Timestamp) mapValue.get("lastUpdatedTxStamp"));
        setCreatedStamp((Timestamp) mapValue.get("createdStamp"));
        setCreatedTxStamp((Timestamp) mapValue.get("createdTxStamp"));
        setPartyId((String) mapValue.get("partyId"));
        postInit();
    }

    /** {@inheritDoc} */
    @Override
    public Map<String, Object> toMap() {
        Map<String, Object> mapValue = new FastMap<String, Object>();
        mapValue.put("userLoginId", getUserLoginId());
        mapValue.put("currentPassword", getCurrentPassword());
        mapValue.put("passwordHint", getPasswordHint());
        mapValue.put("isSystem", getIsSystem());
        mapValue.put("enabled", getEnabled());
        mapValue.put("hasLoggedOut", getHasLoggedOut());
        mapValue.put("requirePasswordChange", getRequirePasswordChange());
        mapValue.put("lastCurrencyUom", getLastCurrencyUom());
        mapValue.put("lastLocale", getLastLocale());
        mapValue.put("lastTimeZone", getLastTimeZone());
        mapValue.put("disabledDateTime", getDisabledDateTime());
        mapValue.put("successiveFailedLogins", getSuccessiveFailedLogins());
        mapValue.put("userLdapDn", getUserLdapDn());
        mapValue.put("lastUpdatedStamp", getLastUpdatedStamp());
        mapValue.put("lastUpdatedTxStamp", getLastUpdatedTxStamp());
        mapValue.put("createdStamp", getCreatedStamp());
        mapValue.put("createdTxStamp", getCreatedTxStamp());
        mapValue.put("partyId", getPartyId());
        return mapValue;
    }


}
