package org.opentaps.base.entities;

/*
 * Copyright (c) Open Source Strategies, Inc.
 *
 * Opentaps is free software: you can redistribute it and/or modify it
 * under the terms of the GNU Affero General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Opentaps is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with Opentaps.  If not, see <http://www.gnu.org/licenses/>.
 */

// DO NOT EDIT THIS FILE!  THIS IS AUTO GENERATED AND WILL GET WRITTEN OVER PERIODICALLY WHEN THE DATA MODEL CHANGES
// EXTEND THIS CLASS INSTEAD.

import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;

import javolution.util.FastMap;

import org.opentaps.foundation.entity.Entity;
import org.opentaps.foundation.entity.EntityFieldInterface;
import org.opentaps.foundation.repository.RepositoryException;
import org.opentaps.foundation.repository.RepositoryInterface;
import javax.persistence.*;
import org.hibernate.search.annotations.*;
import java.lang.String;
import java.sql.Timestamp;

/**
 * Auto generated base entity EnumerationType.
 */
@javax.persistence.Entity
@Table(name="ENUMERATION_TYPE")
public class EnumerationType extends Entity {
static {
java.util.Map<String, String> fields = new java.util.HashMap<String, String>();
        fields.put("enumTypeId", "ENUM_TYPE_ID");
        fields.put("parentTypeId", "PARENT_TYPE_ID");
        fields.put("hasTable", "HAS_TABLE");
        fields.put("description", "DESCRIPTION");
        fields.put("lastUpdatedStamp", "LAST_UPDATED_STAMP");
        fields.put("lastUpdatedTxStamp", "LAST_UPDATED_TX_STAMP");
        fields.put("createdStamp", "CREATED_STAMP");
        fields.put("createdTxStamp", "CREATED_TX_STAMP");
fieldMapColumns.put("EnumerationType", fields);
}
  public static enum Fields implements EntityFieldInterface<EnumerationType> {
    enumTypeId("enumTypeId"),
    parentTypeId("parentTypeId"),
    hasTable("hasTable"),
    description("description"),
    lastUpdatedStamp("lastUpdatedStamp"),
    lastUpdatedTxStamp("lastUpdatedTxStamp"),
    createdStamp("createdStamp"),
    createdTxStamp("createdTxStamp");
    private final String fieldName;
    private Fields(String name) { fieldName = name; }
    /** {@inheritDoc} */
    public String getName() { return fieldName; }
    /** {@inheritDoc} */
    public String asc() { return fieldName + " ASC"; }
    /** {@inheritDoc} */
    public String desc() { return fieldName + " DESC"; }
  }

   @org.hibernate.annotations.GenericGenerator(name="EnumerationType_GEN",  strategy="org.opentaps.foundation.entity.hibernate.OpentapsIdentifierGenerator")
   @GeneratedValue(generator="EnumerationType_GEN")
   @Id
   @Column(name="ENUM_TYPE_ID")
   private String enumTypeId;
   @Column(name="PARENT_TYPE_ID")
   private String parentTypeId;
   @Column(name="HAS_TABLE")
   private String hasTable;
   @Column(name="DESCRIPTION")
   private String description;
   @Column(name="LAST_UPDATED_STAMP")
   private Timestamp lastUpdatedStamp;
   @Column(name="LAST_UPDATED_TX_STAMP")
   private Timestamp lastUpdatedTxStamp;
   @Column(name="CREATED_STAMP")
   private Timestamp createdStamp;
   @Column(name="CREATED_TX_STAMP")
   private Timestamp createdTxStamp;
   @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="PARENT_TYPE_ID", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private EnumerationType parentEnumerationType = null;
   private transient List<AcctgTagEnumType> tag1AcctgTagEnumTypes = null;
   private transient List<AcctgTagEnumType> tag2AcctgTagEnumTypes = null;
   private transient List<AcctgTagEnumType> tag3AcctgTagEnumTypes = null;
   private transient List<AcctgTagEnumType> tag4AcctgTagEnumTypes = null;
   private transient List<AcctgTagEnumType> tag5AcctgTagEnumTypes = null;
   private transient List<AcctgTagEnumType> tag6AcctgTagEnumTypes = null;
   private transient List<AcctgTagEnumType> tag7AcctgTagEnumTypes = null;
   private transient List<AcctgTagEnumType> tag8AcctgTagEnumTypes = null;
   private transient List<AcctgTagEnumType> tag9AcctgTagEnumTypes = null;
   private transient List<AcctgTagEnumType> tag10AcctgTagEnumTypes = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="enumerationType", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="ENUM_TYPE_ID")
   
   private List<Enumeration> enumerations = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="parentEnumerationType", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="PARENT_TYPE_ID")
   
   private List<EnumerationType> childEnumerationTypes = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="enumerationType", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="ENUM_TYPE_ID")
   
   private List<TermTypeToEnumTypeMap> termTypeToEnumTypeMaps = null;

  /**
   * Default constructor.
   */
  public EnumerationType() {
      super();
      this.baseEntityName = "EnumerationType";
      this.isView = false;
      this.resourceName = "CommonEntityLabels";
      this.primaryKeyNames = new ArrayList<String>();
      this.primaryKeyNames.add("enumTypeId");
      this.allFieldsNames = new ArrayList<String>();
      this.allFieldsNames.add("enumTypeId");this.allFieldsNames.add("parentTypeId");this.allFieldsNames.add("hasTable");this.allFieldsNames.add("description");this.allFieldsNames.add("lastUpdatedStamp");this.allFieldsNames.add("lastUpdatedTxStamp");this.allFieldsNames.add("createdStamp");this.allFieldsNames.add("createdTxStamp");
      this.nonPrimaryKeyNames = new ArrayList<String>();
      this.nonPrimaryKeyNames.addAll(allFieldsNames);
      this.nonPrimaryKeyNames.removeAll(primaryKeyNames);
  }

  /**
   * Constructor with a repository.
   * @param repository a <code>RepositoryInterface</code> value
   */
  public EnumerationType(RepositoryInterface repository) {
      this();
      initRepository(repository);
  }

    /**
     * Auto generated value setter.
     * @param enumTypeId the enumTypeId to set
     */
    public void setEnumTypeId(String enumTypeId) {
        this.enumTypeId = enumTypeId;
    }
    /**
     * Auto generated value setter.
     * @param parentTypeId the parentTypeId to set
     */
    public void setParentTypeId(String parentTypeId) {
        this.parentTypeId = parentTypeId;
    }
    /**
     * Auto generated value setter.
     * @param hasTable the hasTable to set
     */
    public void setHasTable(String hasTable) {
        this.hasTable = hasTable;
    }
    /**
     * Auto generated value setter.
     * @param description the description to set
     */
    public void setDescription(String description) {
        this.description = description;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedStamp the lastUpdatedStamp to set
     */
    public void setLastUpdatedStamp(Timestamp lastUpdatedStamp) {
        this.lastUpdatedStamp = lastUpdatedStamp;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedTxStamp the lastUpdatedTxStamp to set
     */
    public void setLastUpdatedTxStamp(Timestamp lastUpdatedTxStamp) {
        this.lastUpdatedTxStamp = lastUpdatedTxStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdStamp the createdStamp to set
     */
    public void setCreatedStamp(Timestamp createdStamp) {
        this.createdStamp = createdStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdTxStamp the createdTxStamp to set
     */
    public void setCreatedTxStamp(Timestamp createdTxStamp) {
        this.createdTxStamp = createdTxStamp;
    }

    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getEnumTypeId() {
        return this.enumTypeId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getParentTypeId() {
        return this.parentTypeId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getHasTable() {
        return this.hasTable;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getDescription() {
        return this.description;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedStamp() {
        return this.lastUpdatedStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedTxStamp() {
        return this.lastUpdatedTxStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedStamp() {
        return this.createdStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedTxStamp() {
        return this.createdTxStamp;
    }

    /**
     * Auto generated method that gets the related <code>EnumerationType</code> by the relation named <code>ParentEnumerationType</code>.
     * @return the <code>EnumerationType</code>
     * @throws RepositoryException if an error occurs
     */
    public EnumerationType getParentEnumerationType() throws RepositoryException {
        if (this.parentEnumerationType == null) {
            this.parentEnumerationType = getRelatedOne(EnumerationType.class, "ParentEnumerationType");
        }
        return this.parentEnumerationType;
    }
    /**
     * Auto generated method that gets the related <code>AcctgTagEnumType</code> by the relation named <code>tag1AcctgTagEnumType</code>.
     * @return the list of <code>AcctgTagEnumType</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends AcctgTagEnumType> gettag1AcctgTagEnumTypes() throws RepositoryException {
        if (this.tag1AcctgTagEnumTypes == null) {
            this.tag1AcctgTagEnumTypes = getRelated(AcctgTagEnumType.class, "tag1AcctgTagEnumType");
        }
        return this.tag1AcctgTagEnumTypes;
    }
    /**
     * Auto generated method that gets the related <code>AcctgTagEnumType</code> by the relation named <code>tag2AcctgTagEnumType</code>.
     * @return the list of <code>AcctgTagEnumType</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends AcctgTagEnumType> gettag2AcctgTagEnumTypes() throws RepositoryException {
        if (this.tag2AcctgTagEnumTypes == null) {
            this.tag2AcctgTagEnumTypes = getRelated(AcctgTagEnumType.class, "tag2AcctgTagEnumType");
        }
        return this.tag2AcctgTagEnumTypes;
    }
    /**
     * Auto generated method that gets the related <code>AcctgTagEnumType</code> by the relation named <code>tag3AcctgTagEnumType</code>.
     * @return the list of <code>AcctgTagEnumType</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends AcctgTagEnumType> gettag3AcctgTagEnumTypes() throws RepositoryException {
        if (this.tag3AcctgTagEnumTypes == null) {
            this.tag3AcctgTagEnumTypes = getRelated(AcctgTagEnumType.class, "tag3AcctgTagEnumType");
        }
        return this.tag3AcctgTagEnumTypes;
    }
    /**
     * Auto generated method that gets the related <code>AcctgTagEnumType</code> by the relation named <code>tag4AcctgTagEnumType</code>.
     * @return the list of <code>AcctgTagEnumType</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends AcctgTagEnumType> gettag4AcctgTagEnumTypes() throws RepositoryException {
        if (this.tag4AcctgTagEnumTypes == null) {
            this.tag4AcctgTagEnumTypes = getRelated(AcctgTagEnumType.class, "tag4AcctgTagEnumType");
        }
        return this.tag4AcctgTagEnumTypes;
    }
    /**
     * Auto generated method that gets the related <code>AcctgTagEnumType</code> by the relation named <code>tag5AcctgTagEnumType</code>.
     * @return the list of <code>AcctgTagEnumType</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends AcctgTagEnumType> gettag5AcctgTagEnumTypes() throws RepositoryException {
        if (this.tag5AcctgTagEnumTypes == null) {
            this.tag5AcctgTagEnumTypes = getRelated(AcctgTagEnumType.class, "tag5AcctgTagEnumType");
        }
        return this.tag5AcctgTagEnumTypes;
    }
    /**
     * Auto generated method that gets the related <code>AcctgTagEnumType</code> by the relation named <code>tag6AcctgTagEnumType</code>.
     * @return the list of <code>AcctgTagEnumType</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends AcctgTagEnumType> gettag6AcctgTagEnumTypes() throws RepositoryException {
        if (this.tag6AcctgTagEnumTypes == null) {
            this.tag6AcctgTagEnumTypes = getRelated(AcctgTagEnumType.class, "tag6AcctgTagEnumType");
        }
        return this.tag6AcctgTagEnumTypes;
    }
    /**
     * Auto generated method that gets the related <code>AcctgTagEnumType</code> by the relation named <code>tag7AcctgTagEnumType</code>.
     * @return the list of <code>AcctgTagEnumType</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends AcctgTagEnumType> gettag7AcctgTagEnumTypes() throws RepositoryException {
        if (this.tag7AcctgTagEnumTypes == null) {
            this.tag7AcctgTagEnumTypes = getRelated(AcctgTagEnumType.class, "tag7AcctgTagEnumType");
        }
        return this.tag7AcctgTagEnumTypes;
    }
    /**
     * Auto generated method that gets the related <code>AcctgTagEnumType</code> by the relation named <code>tag8AcctgTagEnumType</code>.
     * @return the list of <code>AcctgTagEnumType</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends AcctgTagEnumType> gettag8AcctgTagEnumTypes() throws RepositoryException {
        if (this.tag8AcctgTagEnumTypes == null) {
            this.tag8AcctgTagEnumTypes = getRelated(AcctgTagEnumType.class, "tag8AcctgTagEnumType");
        }
        return this.tag8AcctgTagEnumTypes;
    }
    /**
     * Auto generated method that gets the related <code>AcctgTagEnumType</code> by the relation named <code>tag9AcctgTagEnumType</code>.
     * @return the list of <code>AcctgTagEnumType</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends AcctgTagEnumType> gettag9AcctgTagEnumTypes() throws RepositoryException {
        if (this.tag9AcctgTagEnumTypes == null) {
            this.tag9AcctgTagEnumTypes = getRelated(AcctgTagEnumType.class, "tag9AcctgTagEnumType");
        }
        return this.tag9AcctgTagEnumTypes;
    }
    /**
     * Auto generated method that gets the related <code>AcctgTagEnumType</code> by the relation named <code>tag10AcctgTagEnumType</code>.
     * @return the list of <code>AcctgTagEnumType</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends AcctgTagEnumType> gettag10AcctgTagEnumTypes() throws RepositoryException {
        if (this.tag10AcctgTagEnumTypes == null) {
            this.tag10AcctgTagEnumTypes = getRelated(AcctgTagEnumType.class, "tag10AcctgTagEnumType");
        }
        return this.tag10AcctgTagEnumTypes;
    }
    /**
     * Auto generated method that gets the related <code>Enumeration</code> by the relation named <code>Enumeration</code>.
     * @return the list of <code>Enumeration</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends Enumeration> getEnumerations() throws RepositoryException {
        if (this.enumerations == null) {
            this.enumerations = getRelated(Enumeration.class, "Enumeration");
        }
        return this.enumerations;
    }
    /**
     * Auto generated method that gets the related <code>EnumerationType</code> by the relation named <code>ChildEnumerationType</code>.
     * @return the list of <code>EnumerationType</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends EnumerationType> getChildEnumerationTypes() throws RepositoryException {
        if (this.childEnumerationTypes == null) {
            this.childEnumerationTypes = getRelated(EnumerationType.class, "ChildEnumerationType");
        }
        return this.childEnumerationTypes;
    }
    /**
     * Auto generated method that gets the related <code>TermTypeToEnumTypeMap</code> by the relation named <code>TermTypeToEnumTypeMap</code>.
     * @return the list of <code>TermTypeToEnumTypeMap</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends TermTypeToEnumTypeMap> getTermTypeToEnumTypeMaps() throws RepositoryException {
        if (this.termTypeToEnumTypeMaps == null) {
            this.termTypeToEnumTypeMaps = getRelated(TermTypeToEnumTypeMap.class, "TermTypeToEnumTypeMap");
        }
        return this.termTypeToEnumTypeMaps;
    }

    /**
     * Auto generated value setter.
     * @param parentEnumerationType the parentEnumerationType to set
    */
    public void setParentEnumerationType(EnumerationType parentEnumerationType) {
        this.parentEnumerationType = parentEnumerationType;
    }
    /**
     * Auto generated value setter.
     * @param tag1AcctgTagEnumTypes the tag1AcctgTagEnumTypes to set
    */
    public void settag1AcctgTagEnumTypes(List<AcctgTagEnumType> tag1AcctgTagEnumTypes) {
        this.tag1AcctgTagEnumTypes = tag1AcctgTagEnumTypes;
    }
    /**
     * Auto generated value setter.
     * @param tag2AcctgTagEnumTypes the tag2AcctgTagEnumTypes to set
    */
    public void settag2AcctgTagEnumTypes(List<AcctgTagEnumType> tag2AcctgTagEnumTypes) {
        this.tag2AcctgTagEnumTypes = tag2AcctgTagEnumTypes;
    }
    /**
     * Auto generated value setter.
     * @param tag3AcctgTagEnumTypes the tag3AcctgTagEnumTypes to set
    */
    public void settag3AcctgTagEnumTypes(List<AcctgTagEnumType> tag3AcctgTagEnumTypes) {
        this.tag3AcctgTagEnumTypes = tag3AcctgTagEnumTypes;
    }
    /**
     * Auto generated value setter.
     * @param tag4AcctgTagEnumTypes the tag4AcctgTagEnumTypes to set
    */
    public void settag4AcctgTagEnumTypes(List<AcctgTagEnumType> tag4AcctgTagEnumTypes) {
        this.tag4AcctgTagEnumTypes = tag4AcctgTagEnumTypes;
    }
    /**
     * Auto generated value setter.
     * @param tag5AcctgTagEnumTypes the tag5AcctgTagEnumTypes to set
    */
    public void settag5AcctgTagEnumTypes(List<AcctgTagEnumType> tag5AcctgTagEnumTypes) {
        this.tag5AcctgTagEnumTypes = tag5AcctgTagEnumTypes;
    }
    /**
     * Auto generated value setter.
     * @param tag6AcctgTagEnumTypes the tag6AcctgTagEnumTypes to set
    */
    public void settag6AcctgTagEnumTypes(List<AcctgTagEnumType> tag6AcctgTagEnumTypes) {
        this.tag6AcctgTagEnumTypes = tag6AcctgTagEnumTypes;
    }
    /**
     * Auto generated value setter.
     * @param tag7AcctgTagEnumTypes the tag7AcctgTagEnumTypes to set
    */
    public void settag7AcctgTagEnumTypes(List<AcctgTagEnumType> tag7AcctgTagEnumTypes) {
        this.tag7AcctgTagEnumTypes = tag7AcctgTagEnumTypes;
    }
    /**
     * Auto generated value setter.
     * @param tag8AcctgTagEnumTypes the tag8AcctgTagEnumTypes to set
    */
    public void settag8AcctgTagEnumTypes(List<AcctgTagEnumType> tag8AcctgTagEnumTypes) {
        this.tag8AcctgTagEnumTypes = tag8AcctgTagEnumTypes;
    }
    /**
     * Auto generated value setter.
     * @param tag9AcctgTagEnumTypes the tag9AcctgTagEnumTypes to set
    */
    public void settag9AcctgTagEnumTypes(List<AcctgTagEnumType> tag9AcctgTagEnumTypes) {
        this.tag9AcctgTagEnumTypes = tag9AcctgTagEnumTypes;
    }
    /**
     * Auto generated value setter.
     * @param tag10AcctgTagEnumTypes the tag10AcctgTagEnumTypes to set
    */
    public void settag10AcctgTagEnumTypes(List<AcctgTagEnumType> tag10AcctgTagEnumTypes) {
        this.tag10AcctgTagEnumTypes = tag10AcctgTagEnumTypes;
    }
    /**
     * Auto generated value setter.
     * @param enumerations the enumerations to set
    */
    public void setEnumerations(List<Enumeration> enumerations) {
        this.enumerations = enumerations;
    }
    /**
     * Auto generated value setter.
     * @param childEnumerationTypes the childEnumerationTypes to set
    */
    public void setChildEnumerationTypes(List<EnumerationType> childEnumerationTypes) {
        this.childEnumerationTypes = childEnumerationTypes;
    }
    /**
     * Auto generated value setter.
     * @param termTypeToEnumTypeMaps the termTypeToEnumTypeMaps to set
    */
    public void setTermTypeToEnumTypeMaps(List<TermTypeToEnumTypeMap> termTypeToEnumTypeMaps) {
        this.termTypeToEnumTypeMaps = termTypeToEnumTypeMaps;
    }

    /**
     * Auto generated method that add item to collection.
     */
    public void addTermTypeToEnumTypeMap(TermTypeToEnumTypeMap termTypeToEnumTypeMap) {
        if (this.termTypeToEnumTypeMaps == null) {
            this.termTypeToEnumTypeMaps = new ArrayList<TermTypeToEnumTypeMap>();
        }
        this.termTypeToEnumTypeMaps.add(termTypeToEnumTypeMap);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeTermTypeToEnumTypeMap(TermTypeToEnumTypeMap termTypeToEnumTypeMap) {
        if (this.termTypeToEnumTypeMaps == null) {
            return;
        }
        this.termTypeToEnumTypeMaps.remove(termTypeToEnumTypeMap);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearTermTypeToEnumTypeMap() {
        if (this.termTypeToEnumTypeMaps == null) {
            return;
        }
        this.termTypeToEnumTypeMaps.clear();
    }

    /** {@inheritDoc} */
    @Override
    public void fromMap(Map<String, Object> mapValue) {
        preInit();
        setEnumTypeId((String) mapValue.get("enumTypeId"));
        setParentTypeId((String) mapValue.get("parentTypeId"));
        setHasTable((String) mapValue.get("hasTable"));
        setDescription((String) mapValue.get("description"));
        setLastUpdatedStamp((Timestamp) mapValue.get("lastUpdatedStamp"));
        setLastUpdatedTxStamp((Timestamp) mapValue.get("lastUpdatedTxStamp"));
        setCreatedStamp((Timestamp) mapValue.get("createdStamp"));
        setCreatedTxStamp((Timestamp) mapValue.get("createdTxStamp"));
        postInit();
    }

    /** {@inheritDoc} */
    @Override
    public Map<String, Object> toMap() {
        Map<String, Object> mapValue = new FastMap<String, Object>();
        mapValue.put("enumTypeId", getEnumTypeId());
        mapValue.put("parentTypeId", getParentTypeId());
        mapValue.put("hasTable", getHasTable());
        mapValue.put("description", getDescription());
        mapValue.put("lastUpdatedStamp", getLastUpdatedStamp());
        mapValue.put("lastUpdatedTxStamp", getLastUpdatedTxStamp());
        mapValue.put("createdStamp", getCreatedStamp());
        mapValue.put("createdTxStamp", getCreatedTxStamp());
        return mapValue;
    }


}
