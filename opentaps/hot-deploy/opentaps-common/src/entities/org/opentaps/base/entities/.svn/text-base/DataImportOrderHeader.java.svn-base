package org.opentaps.base.entities;

/*
 * Copyright (c) Open Source Strategies, Inc.
 *
 * Opentaps is free software: you can redistribute it and/or modify it
 * under the terms of the GNU Affero General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Opentaps is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with Opentaps.  If not, see <http://www.gnu.org/licenses/>.
 */

// DO NOT EDIT THIS FILE!  THIS IS AUTO GENERATED AND WILL GET WRITTEN OVER PERIODICALLY WHEN THE DATA MODEL CHANGES
// EXTEND THIS CLASS INSTEAD.

import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;

import javolution.util.FastMap;

import org.opentaps.foundation.entity.Entity;
import org.opentaps.foundation.entity.EntityFieldInterface;
import org.opentaps.foundation.repository.RepositoryException;
import org.opentaps.foundation.repository.RepositoryInterface;
import javax.persistence.*;
import org.hibernate.search.annotations.*;
import java.lang.String;
import java.math.BigDecimal;
import java.sql.Timestamp;

/**
 * Auto generated base entity DataImportOrderHeader.
 */
@javax.persistence.Entity
@Table(name="DATA_IMPORT_ORDER_HEADER")
public class DataImportOrderHeader extends Entity {
static {
java.util.Map<String, String> fields = new java.util.HashMap<String, String>();
        fields.put("orderId", "ORDER_ID");
        fields.put("orderTypeId", "ORDER_TYPE_ID");
        fields.put("customerPartyId", "CUSTOMER_PARTY_ID");
        fields.put("supplierPartyId", "SUPPLIER_PARTY_ID");
        fields.put("orderDate", "ORDER_DATE");
        fields.put("currencyUomId", "CURRENCY_UOM_ID");
        fields.put("shippingTotal", "SHIPPING_TOTAL");
        fields.put("orderTax", "ORDER_TAX");
        fields.put("taxAuthPartyId", "TAX_AUTH_PARTY_ID");
        fields.put("adjustmentsTotal", "ADJUSTMENTS_TOTAL");
        fields.put("grandTotal", "GRAND_TOTAL");
        fields.put("comments", "COMMENTS");
        fields.put("productStoreId", "PRODUCT_STORE_ID");
        fields.put("salesChannelEnumId", "SALES_CHANNEL_ENUM_ID");
        fields.put("productStoreShipMethId", "PRODUCT_STORE_SHIP_METH_ID");
        fields.put("orderClosed", "ORDER_CLOSED");
        fields.put("shippingFirstName", "SHIPPING_FIRST_NAME");
        fields.put("shippingLastName", "SHIPPING_LAST_NAME");
        fields.put("shippingCompanyName", "SHIPPING_COMPANY_NAME");
        fields.put("shippingStreet", "SHIPPING_STREET");
        fields.put("shippingCity", "SHIPPING_CITY");
        fields.put("shippingRegion", "SHIPPING_REGION");
        fields.put("shippingPostcode", "SHIPPING_POSTCODE");
        fields.put("shippingCountry", "SHIPPING_COUNTRY");
        fields.put("shippingPhone", "SHIPPING_PHONE");
        fields.put("shippingFax", "SHIPPING_FAX");
        fields.put("billingFirstName", "BILLING_FIRST_NAME");
        fields.put("billingLastName", "BILLING_LAST_NAME");
        fields.put("billingCompanyName", "BILLING_COMPANY_NAME");
        fields.put("billingStreet", "BILLING_STREET");
        fields.put("billingCity", "BILLING_CITY");
        fields.put("billingRegion", "BILLING_REGION");
        fields.put("billingPostcode", "BILLING_POSTCODE");
        fields.put("billingCountry", "BILLING_COUNTRY");
        fields.put("billingPhone", "BILLING_PHONE");
        fields.put("billingFax", "BILLING_FAX");
        fields.put("importStatusId", "IMPORT_STATUS_ID");
        fields.put("importError", "IMPORT_ERROR");
        fields.put("processedTimestamp", "PROCESSED_TIMESTAMP");
        fields.put("lastUpdatedStamp", "LAST_UPDATED_STAMP");
        fields.put("lastUpdatedTxStamp", "LAST_UPDATED_TX_STAMP");
        fields.put("createdStamp", "CREATED_STAMP");
        fields.put("createdTxStamp", "CREATED_TX_STAMP");
fieldMapColumns.put("DataImportOrderHeader", fields);
}
  public static enum Fields implements EntityFieldInterface<DataImportOrderHeader> {
    orderId("orderId"),
    orderTypeId("orderTypeId"),
    customerPartyId("customerPartyId"),
    supplierPartyId("supplierPartyId"),
    orderDate("orderDate"),
    currencyUomId("currencyUomId"),
    shippingTotal("shippingTotal"),
    orderTax("orderTax"),
    taxAuthPartyId("taxAuthPartyId"),
    adjustmentsTotal("adjustmentsTotal"),
    grandTotal("grandTotal"),
    comments("comments"),
    productStoreId("productStoreId"),
    salesChannelEnumId("salesChannelEnumId"),
    productStoreShipMethId("productStoreShipMethId"),
    orderClosed("orderClosed"),
    shippingFirstName("shippingFirstName"),
    shippingLastName("shippingLastName"),
    shippingCompanyName("shippingCompanyName"),
    shippingStreet("shippingStreet"),
    shippingCity("shippingCity"),
    shippingRegion("shippingRegion"),
    shippingPostcode("shippingPostcode"),
    shippingCountry("shippingCountry"),
    shippingPhone("shippingPhone"),
    shippingFax("shippingFax"),
    billingFirstName("billingFirstName"),
    billingLastName("billingLastName"),
    billingCompanyName("billingCompanyName"),
    billingStreet("billingStreet"),
    billingCity("billingCity"),
    billingRegion("billingRegion"),
    billingPostcode("billingPostcode"),
    billingCountry("billingCountry"),
    billingPhone("billingPhone"),
    billingFax("billingFax"),
    importStatusId("importStatusId"),
    importError("importError"),
    processedTimestamp("processedTimestamp"),
    lastUpdatedStamp("lastUpdatedStamp"),
    lastUpdatedTxStamp("lastUpdatedTxStamp"),
    createdStamp("createdStamp"),
    createdTxStamp("createdTxStamp");
    private final String fieldName;
    private Fields(String name) { fieldName = name; }
    /** {@inheritDoc} */
    public String getName() { return fieldName; }
    /** {@inheritDoc} */
    public String asc() { return fieldName + " ASC"; }
    /** {@inheritDoc} */
    public String desc() { return fieldName + " DESC"; }
  }

   @org.hibernate.annotations.GenericGenerator(name="DataImportOrderHeader_GEN",  strategy="org.opentaps.foundation.entity.hibernate.OpentapsIdentifierGenerator")
   @GeneratedValue(generator="DataImportOrderHeader_GEN")
   @Id
   @Column(name="ORDER_ID")
   private String orderId;
   @Column(name="ORDER_TYPE_ID")
   private String orderTypeId;
   @Column(name="CUSTOMER_PARTY_ID")
   private String customerPartyId;
   @Column(name="SUPPLIER_PARTY_ID")
   private String supplierPartyId;
   @Column(name="ORDER_DATE")
   private Timestamp orderDate;
   @Column(name="CURRENCY_UOM_ID")
   private String currencyUomId;
   @Column(name="SHIPPING_TOTAL")
   private BigDecimal shippingTotal;
   @Column(name="ORDER_TAX")
   private BigDecimal orderTax;
   @Column(name="TAX_AUTH_PARTY_ID")
   private String taxAuthPartyId;
   @Column(name="ADJUSTMENTS_TOTAL")
   private BigDecimal adjustmentsTotal;
   @Column(name="GRAND_TOTAL")
   private BigDecimal grandTotal;
   @Column(name="COMMENTS")
   private String comments;
   @Column(name="PRODUCT_STORE_ID")
   private String productStoreId;
   @Column(name="SALES_CHANNEL_ENUM_ID")
   private String salesChannelEnumId;
   @Column(name="PRODUCT_STORE_SHIP_METH_ID")
   private String productStoreShipMethId;
   @Column(name="ORDER_CLOSED")
   private String orderClosed;
   @Column(name="SHIPPING_FIRST_NAME")
   private String shippingFirstName;
   @Column(name="SHIPPING_LAST_NAME")
   private String shippingLastName;
   @Column(name="SHIPPING_COMPANY_NAME")
   private String shippingCompanyName;
   @Column(name="SHIPPING_STREET")
   private String shippingStreet;
   @Column(name="SHIPPING_CITY")
   private String shippingCity;
   @Column(name="SHIPPING_REGION")
   private String shippingRegion;
   @Column(name="SHIPPING_POSTCODE")
   private String shippingPostcode;
   @Column(name="SHIPPING_COUNTRY")
   private String shippingCountry;
   @Column(name="SHIPPING_PHONE")
   private String shippingPhone;
   @Column(name="SHIPPING_FAX")
   private String shippingFax;
   @Column(name="BILLING_FIRST_NAME")
   private String billingFirstName;
   @Column(name="BILLING_LAST_NAME")
   private String billingLastName;
   @Column(name="BILLING_COMPANY_NAME")
   private String billingCompanyName;
   @Column(name="BILLING_STREET")
   private String billingStreet;
   @Column(name="BILLING_CITY")
   private String billingCity;
   @Column(name="BILLING_REGION")
   private String billingRegion;
   @Column(name="BILLING_POSTCODE")
   private String billingPostcode;
   @Column(name="BILLING_COUNTRY")
   private String billingCountry;
   @Column(name="BILLING_PHONE")
   private String billingPhone;
   @Column(name="BILLING_FAX")
   private String billingFax;
   @Column(name="IMPORT_STATUS_ID")
   private String importStatusId;
   @Column(name="IMPORT_ERROR")
   private String importError;
   @Column(name="PROCESSED_TIMESTAMP")
   private Timestamp processedTimestamp;
   @Column(name="LAST_UPDATED_STAMP")
   private Timestamp lastUpdatedStamp;
   @Column(name="LAST_UPDATED_TX_STAMP")
   private Timestamp lastUpdatedTxStamp;
   @Column(name="CREATED_STAMP")
   private Timestamp createdStamp;
   @Column(name="CREATED_TX_STAMP")
   private Timestamp createdTxStamp;
   @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="ORDER_TYPE_ID", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private OrderType orderType = null;
   @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="CUSTOMER_PARTY_ID", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private Party customerParty = null;
   @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="SUPPLIER_PARTY_ID", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private Party supplierParty = null;
   @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="CURRENCY_UOM_ID", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private Uom uom = null;
   @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="PRODUCT_STORE_SHIP_METH_ID", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private ProductStoreShipmentMeth productStoreShipmentMeth = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="dataImportOrderHeader", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="ORDER_ID")
   
   private List<DataImportOrderItem> dataImportOrderItems = null;

  /**
   * Default constructor.
   */
  public DataImportOrderHeader() {
      super();
      this.baseEntityName = "DataImportOrderHeader";
      this.isView = false;
      
      this.primaryKeyNames = new ArrayList<String>();
      this.primaryKeyNames.add("orderId");
      this.allFieldsNames = new ArrayList<String>();
      this.allFieldsNames.add("orderId");this.allFieldsNames.add("orderTypeId");this.allFieldsNames.add("customerPartyId");this.allFieldsNames.add("supplierPartyId");this.allFieldsNames.add("orderDate");this.allFieldsNames.add("currencyUomId");this.allFieldsNames.add("shippingTotal");this.allFieldsNames.add("orderTax");this.allFieldsNames.add("taxAuthPartyId");this.allFieldsNames.add("adjustmentsTotal");this.allFieldsNames.add("grandTotal");this.allFieldsNames.add("comments");this.allFieldsNames.add("productStoreId");this.allFieldsNames.add("salesChannelEnumId");this.allFieldsNames.add("productStoreShipMethId");this.allFieldsNames.add("orderClosed");this.allFieldsNames.add("shippingFirstName");this.allFieldsNames.add("shippingLastName");this.allFieldsNames.add("shippingCompanyName");this.allFieldsNames.add("shippingStreet");this.allFieldsNames.add("shippingCity");this.allFieldsNames.add("shippingRegion");this.allFieldsNames.add("shippingPostcode");this.allFieldsNames.add("shippingCountry");this.allFieldsNames.add("shippingPhone");this.allFieldsNames.add("shippingFax");this.allFieldsNames.add("billingFirstName");this.allFieldsNames.add("billingLastName");this.allFieldsNames.add("billingCompanyName");this.allFieldsNames.add("billingStreet");this.allFieldsNames.add("billingCity");this.allFieldsNames.add("billingRegion");this.allFieldsNames.add("billingPostcode");this.allFieldsNames.add("billingCountry");this.allFieldsNames.add("billingPhone");this.allFieldsNames.add("billingFax");this.allFieldsNames.add("importStatusId");this.allFieldsNames.add("importError");this.allFieldsNames.add("processedTimestamp");this.allFieldsNames.add("lastUpdatedStamp");this.allFieldsNames.add("lastUpdatedTxStamp");this.allFieldsNames.add("createdStamp");this.allFieldsNames.add("createdTxStamp");
      this.nonPrimaryKeyNames = new ArrayList<String>();
      this.nonPrimaryKeyNames.addAll(allFieldsNames);
      this.nonPrimaryKeyNames.removeAll(primaryKeyNames);
  }

  /**
   * Constructor with a repository.
   * @param repository a <code>RepositoryInterface</code> value
   */
  public DataImportOrderHeader(RepositoryInterface repository) {
      this();
      initRepository(repository);
  }

    /**
     * Auto generated value setter.
     * @param orderId the orderId to set
     */
    public void setOrderId(String orderId) {
        this.orderId = orderId;
    }
    /**
     * Auto generated value setter.
     * @param orderTypeId the orderTypeId to set
     */
    public void setOrderTypeId(String orderTypeId) {
        this.orderTypeId = orderTypeId;
    }
    /**
     * Auto generated value setter.
     * @param customerPartyId the customerPartyId to set
     */
    public void setCustomerPartyId(String customerPartyId) {
        this.customerPartyId = customerPartyId;
    }
    /**
     * Auto generated value setter.
     * @param supplierPartyId the supplierPartyId to set
     */
    public void setSupplierPartyId(String supplierPartyId) {
        this.supplierPartyId = supplierPartyId;
    }
    /**
     * Auto generated value setter.
     * @param orderDate the orderDate to set
     */
    public void setOrderDate(Timestamp orderDate) {
        this.orderDate = orderDate;
    }
    /**
     * Auto generated value setter.
     * @param currencyUomId the currencyUomId to set
     */
    public void setCurrencyUomId(String currencyUomId) {
        this.currencyUomId = currencyUomId;
    }
    /**
     * Auto generated value setter.
     * @param shippingTotal the shippingTotal to set
     */
    public void setShippingTotal(BigDecimal shippingTotal) {
        this.shippingTotal = shippingTotal;
    }
    /**
     * Auto generated value setter.
     * @param orderTax the orderTax to set
     */
    public void setOrderTax(BigDecimal orderTax) {
        this.orderTax = orderTax;
    }
    /**
     * Auto generated value setter.
     * @param taxAuthPartyId the taxAuthPartyId to set
     */
    public void setTaxAuthPartyId(String taxAuthPartyId) {
        this.taxAuthPartyId = taxAuthPartyId;
    }
    /**
     * Auto generated value setter.
     * @param adjustmentsTotal the adjustmentsTotal to set
     */
    public void setAdjustmentsTotal(BigDecimal adjustmentsTotal) {
        this.adjustmentsTotal = adjustmentsTotal;
    }
    /**
     * Auto generated value setter.
     * @param grandTotal the grandTotal to set
     */
    public void setGrandTotal(BigDecimal grandTotal) {
        this.grandTotal = grandTotal;
    }
    /**
     * Auto generated value setter.
     * @param comments the comments to set
     */
    public void setComments(String comments) {
        this.comments = comments;
    }
    /**
     * Auto generated value setter.
     * @param productStoreId the productStoreId to set
     */
    public void setProductStoreId(String productStoreId) {
        this.productStoreId = productStoreId;
    }
    /**
     * Auto generated value setter.
     * @param salesChannelEnumId the salesChannelEnumId to set
     */
    public void setSalesChannelEnumId(String salesChannelEnumId) {
        this.salesChannelEnumId = salesChannelEnumId;
    }
    /**
     * Auto generated value setter.
     * @param productStoreShipMethId the productStoreShipMethId to set
     */
    public void setProductStoreShipMethId(String productStoreShipMethId) {
        this.productStoreShipMethId = productStoreShipMethId;
    }
    /**
     * Auto generated value setter.
     * @param orderClosed the orderClosed to set
     */
    public void setOrderClosed(String orderClosed) {
        this.orderClosed = orderClosed;
    }
    /**
     * Auto generated value setter.
     * @param shippingFirstName the shippingFirstName to set
     */
    public void setShippingFirstName(String shippingFirstName) {
        this.shippingFirstName = shippingFirstName;
    }
    /**
     * Auto generated value setter.
     * @param shippingLastName the shippingLastName to set
     */
    public void setShippingLastName(String shippingLastName) {
        this.shippingLastName = shippingLastName;
    }
    /**
     * Auto generated value setter.
     * @param shippingCompanyName the shippingCompanyName to set
     */
    public void setShippingCompanyName(String shippingCompanyName) {
        this.shippingCompanyName = shippingCompanyName;
    }
    /**
     * Auto generated value setter.
     * @param shippingStreet the shippingStreet to set
     */
    public void setShippingStreet(String shippingStreet) {
        this.shippingStreet = shippingStreet;
    }
    /**
     * Auto generated value setter.
     * @param shippingCity the shippingCity to set
     */
    public void setShippingCity(String shippingCity) {
        this.shippingCity = shippingCity;
    }
    /**
     * Auto generated value setter.
     * @param shippingRegion the shippingRegion to set
     */
    public void setShippingRegion(String shippingRegion) {
        this.shippingRegion = shippingRegion;
    }
    /**
     * Auto generated value setter.
     * @param shippingPostcode the shippingPostcode to set
     */
    public void setShippingPostcode(String shippingPostcode) {
        this.shippingPostcode = shippingPostcode;
    }
    /**
     * Auto generated value setter.
     * @param shippingCountry the shippingCountry to set
     */
    public void setShippingCountry(String shippingCountry) {
        this.shippingCountry = shippingCountry;
    }
    /**
     * Auto generated value setter.
     * @param shippingPhone the shippingPhone to set
     */
    public void setShippingPhone(String shippingPhone) {
        this.shippingPhone = shippingPhone;
    }
    /**
     * Auto generated value setter.
     * @param shippingFax the shippingFax to set
     */
    public void setShippingFax(String shippingFax) {
        this.shippingFax = shippingFax;
    }
    /**
     * Auto generated value setter.
     * @param billingFirstName the billingFirstName to set
     */
    public void setBillingFirstName(String billingFirstName) {
        this.billingFirstName = billingFirstName;
    }
    /**
     * Auto generated value setter.
     * @param billingLastName the billingLastName to set
     */
    public void setBillingLastName(String billingLastName) {
        this.billingLastName = billingLastName;
    }
    /**
     * Auto generated value setter.
     * @param billingCompanyName the billingCompanyName to set
     */
    public void setBillingCompanyName(String billingCompanyName) {
        this.billingCompanyName = billingCompanyName;
    }
    /**
     * Auto generated value setter.
     * @param billingStreet the billingStreet to set
     */
    public void setBillingStreet(String billingStreet) {
        this.billingStreet = billingStreet;
    }
    /**
     * Auto generated value setter.
     * @param billingCity the billingCity to set
     */
    public void setBillingCity(String billingCity) {
        this.billingCity = billingCity;
    }
    /**
     * Auto generated value setter.
     * @param billingRegion the billingRegion to set
     */
    public void setBillingRegion(String billingRegion) {
        this.billingRegion = billingRegion;
    }
    /**
     * Auto generated value setter.
     * @param billingPostcode the billingPostcode to set
     */
    public void setBillingPostcode(String billingPostcode) {
        this.billingPostcode = billingPostcode;
    }
    /**
     * Auto generated value setter.
     * @param billingCountry the billingCountry to set
     */
    public void setBillingCountry(String billingCountry) {
        this.billingCountry = billingCountry;
    }
    /**
     * Auto generated value setter.
     * @param billingPhone the billingPhone to set
     */
    public void setBillingPhone(String billingPhone) {
        this.billingPhone = billingPhone;
    }
    /**
     * Auto generated value setter.
     * @param billingFax the billingFax to set
     */
    public void setBillingFax(String billingFax) {
        this.billingFax = billingFax;
    }
    /**
     * Auto generated value setter.
     * @param importStatusId the importStatusId to set
     */
    public void setImportStatusId(String importStatusId) {
        this.importStatusId = importStatusId;
    }
    /**
     * Auto generated value setter.
     * @param importError the importError to set
     */
    public void setImportError(String importError) {
        this.importError = importError;
    }
    /**
     * Auto generated value setter.
     * @param processedTimestamp the processedTimestamp to set
     */
    public void setProcessedTimestamp(Timestamp processedTimestamp) {
        this.processedTimestamp = processedTimestamp;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedStamp the lastUpdatedStamp to set
     */
    public void setLastUpdatedStamp(Timestamp lastUpdatedStamp) {
        this.lastUpdatedStamp = lastUpdatedStamp;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedTxStamp the lastUpdatedTxStamp to set
     */
    public void setLastUpdatedTxStamp(Timestamp lastUpdatedTxStamp) {
        this.lastUpdatedTxStamp = lastUpdatedTxStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdStamp the createdStamp to set
     */
    public void setCreatedStamp(Timestamp createdStamp) {
        this.createdStamp = createdStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdTxStamp the createdTxStamp to set
     */
    public void setCreatedTxStamp(Timestamp createdTxStamp) {
        this.createdTxStamp = createdTxStamp;
    }

    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getOrderId() {
        return this.orderId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getOrderTypeId() {
        return this.orderTypeId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getCustomerPartyId() {
        return this.customerPartyId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getSupplierPartyId() {
        return this.supplierPartyId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getOrderDate() {
        return this.orderDate;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getCurrencyUomId() {
        return this.currencyUomId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getShippingTotal() {
        return this.shippingTotal;
    }
    /**
     * Auto generated value accessor.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getOrderTax() {
        return this.orderTax;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getTaxAuthPartyId() {
        return this.taxAuthPartyId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getAdjustmentsTotal() {
        return this.adjustmentsTotal;
    }
    /**
     * Auto generated value accessor.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getGrandTotal() {
        return this.grandTotal;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getComments() {
        return this.comments;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getProductStoreId() {
        return this.productStoreId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getSalesChannelEnumId() {
        return this.salesChannelEnumId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getProductStoreShipMethId() {
        return this.productStoreShipMethId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getOrderClosed() {
        return this.orderClosed;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getShippingFirstName() {
        return this.shippingFirstName;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getShippingLastName() {
        return this.shippingLastName;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getShippingCompanyName() {
        return this.shippingCompanyName;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getShippingStreet() {
        return this.shippingStreet;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getShippingCity() {
        return this.shippingCity;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getShippingRegion() {
        return this.shippingRegion;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getShippingPostcode() {
        return this.shippingPostcode;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getShippingCountry() {
        return this.shippingCountry;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getShippingPhone() {
        return this.shippingPhone;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getShippingFax() {
        return this.shippingFax;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getBillingFirstName() {
        return this.billingFirstName;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getBillingLastName() {
        return this.billingLastName;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getBillingCompanyName() {
        return this.billingCompanyName;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getBillingStreet() {
        return this.billingStreet;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getBillingCity() {
        return this.billingCity;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getBillingRegion() {
        return this.billingRegion;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getBillingPostcode() {
        return this.billingPostcode;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getBillingCountry() {
        return this.billingCountry;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getBillingPhone() {
        return this.billingPhone;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getBillingFax() {
        return this.billingFax;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getImportStatusId() {
        return this.importStatusId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getImportError() {
        return this.importError;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getProcessedTimestamp() {
        return this.processedTimestamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedStamp() {
        return this.lastUpdatedStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedTxStamp() {
        return this.lastUpdatedTxStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedStamp() {
        return this.createdStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedTxStamp() {
        return this.createdTxStamp;
    }

    /**
     * Auto generated method that gets the related <code>OrderType</code> by the relation named <code>OrderType</code>.
     * @return the <code>OrderType</code>
     * @throws RepositoryException if an error occurs
     */
    public OrderType getOrderType() throws RepositoryException {
        if (this.orderType == null) {
            this.orderType = getRelatedOne(OrderType.class, "OrderType");
        }
        return this.orderType;
    }
    /**
     * Auto generated method that gets the related <code>Party</code> by the relation named <code>CustomerParty</code>.
     * @return the <code>Party</code>
     * @throws RepositoryException if an error occurs
     */
    public Party getCustomerParty() throws RepositoryException {
        if (this.customerParty == null) {
            this.customerParty = getRelatedOne(Party.class, "CustomerParty");
        }
        return this.customerParty;
    }
    /**
     * Auto generated method that gets the related <code>Party</code> by the relation named <code>SupplierParty</code>.
     * @return the <code>Party</code>
     * @throws RepositoryException if an error occurs
     */
    public Party getSupplierParty() throws RepositoryException {
        if (this.supplierParty == null) {
            this.supplierParty = getRelatedOne(Party.class, "SupplierParty");
        }
        return this.supplierParty;
    }
    /**
     * Auto generated method that gets the related <code>Uom</code> by the relation named <code>Uom</code>.
     * @return the <code>Uom</code>
     * @throws RepositoryException if an error occurs
     */
    public Uom getUom() throws RepositoryException {
        if (this.uom == null) {
            this.uom = getRelatedOne(Uom.class, "Uom");
        }
        return this.uom;
    }
    /**
     * Auto generated method that gets the related <code>ProductStoreShipmentMeth</code> by the relation named <code>ProductStoreShipmentMeth</code>.
     * @return the <code>ProductStoreShipmentMeth</code>
     * @throws RepositoryException if an error occurs
     */
    public ProductStoreShipmentMeth getProductStoreShipmentMeth() throws RepositoryException {
        if (this.productStoreShipmentMeth == null) {
            this.productStoreShipmentMeth = getRelatedOne(ProductStoreShipmentMeth.class, "ProductStoreShipmentMeth");
        }
        return this.productStoreShipmentMeth;
    }
    /**
     * Auto generated method that gets the related <code>DataImportOrderItem</code> by the relation named <code>DataImportOrderItem</code>.
     * @return the list of <code>DataImportOrderItem</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends DataImportOrderItem> getDataImportOrderItems() throws RepositoryException {
        if (this.dataImportOrderItems == null) {
            this.dataImportOrderItems = getRelated(DataImportOrderItem.class, "DataImportOrderItem");
        }
        return this.dataImportOrderItems;
    }

    /**
     * Auto generated value setter.
     * @param orderType the orderType to set
    */
    public void setOrderType(OrderType orderType) {
        this.orderType = orderType;
    }
    /**
     * Auto generated value setter.
     * @param customerParty the customerParty to set
    */
    public void setCustomerParty(Party customerParty) {
        this.customerParty = customerParty;
    }
    /**
     * Auto generated value setter.
     * @param supplierParty the supplierParty to set
    */
    public void setSupplierParty(Party supplierParty) {
        this.supplierParty = supplierParty;
    }
    /**
     * Auto generated value setter.
     * @param uom the uom to set
    */
    public void setUom(Uom uom) {
        this.uom = uom;
    }
    /**
     * Auto generated value setter.
     * @param productStoreShipmentMeth the productStoreShipmentMeth to set
    */
    public void setProductStoreShipmentMeth(ProductStoreShipmentMeth productStoreShipmentMeth) {
        this.productStoreShipmentMeth = productStoreShipmentMeth;
    }
    /**
     * Auto generated value setter.
     * @param dataImportOrderItems the dataImportOrderItems to set
    */
    public void setDataImportOrderItems(List<DataImportOrderItem> dataImportOrderItems) {
        this.dataImportOrderItems = dataImportOrderItems;
    }

    /**
     * Auto generated method that add item to collection.
     */
    public void addDataImportOrderItem(DataImportOrderItem dataImportOrderItem) {
        if (this.dataImportOrderItems == null) {
            this.dataImportOrderItems = new ArrayList<DataImportOrderItem>();
        }
        this.dataImportOrderItems.add(dataImportOrderItem);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeDataImportOrderItem(DataImportOrderItem dataImportOrderItem) {
        if (this.dataImportOrderItems == null) {
            return;
        }
        this.dataImportOrderItems.remove(dataImportOrderItem);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearDataImportOrderItem() {
        if (this.dataImportOrderItems == null) {
            return;
        }
        this.dataImportOrderItems.clear();
    }

    /** {@inheritDoc} */
    @Override
    public void fromMap(Map<String, Object> mapValue) {
        preInit();
        setOrderId((String) mapValue.get("orderId"));
        setOrderTypeId((String) mapValue.get("orderTypeId"));
        setCustomerPartyId((String) mapValue.get("customerPartyId"));
        setSupplierPartyId((String) mapValue.get("supplierPartyId"));
        setOrderDate((Timestamp) mapValue.get("orderDate"));
        setCurrencyUomId((String) mapValue.get("currencyUomId"));
        setShippingTotal(convertToBigDecimal(mapValue.get("shippingTotal")));
        setOrderTax(convertToBigDecimal(mapValue.get("orderTax")));
        setTaxAuthPartyId((String) mapValue.get("taxAuthPartyId"));
        setAdjustmentsTotal(convertToBigDecimal(mapValue.get("adjustmentsTotal")));
        setGrandTotal(convertToBigDecimal(mapValue.get("grandTotal")));
        setComments((String) mapValue.get("comments"));
        setProductStoreId((String) mapValue.get("productStoreId"));
        setSalesChannelEnumId((String) mapValue.get("salesChannelEnumId"));
        setProductStoreShipMethId((String) mapValue.get("productStoreShipMethId"));
        setOrderClosed((String) mapValue.get("orderClosed"));
        setShippingFirstName((String) mapValue.get("shippingFirstName"));
        setShippingLastName((String) mapValue.get("shippingLastName"));
        setShippingCompanyName((String) mapValue.get("shippingCompanyName"));
        setShippingStreet((String) mapValue.get("shippingStreet"));
        setShippingCity((String) mapValue.get("shippingCity"));
        setShippingRegion((String) mapValue.get("shippingRegion"));
        setShippingPostcode((String) mapValue.get("shippingPostcode"));
        setShippingCountry((String) mapValue.get("shippingCountry"));
        setShippingPhone((String) mapValue.get("shippingPhone"));
        setShippingFax((String) mapValue.get("shippingFax"));
        setBillingFirstName((String) mapValue.get("billingFirstName"));
        setBillingLastName((String) mapValue.get("billingLastName"));
        setBillingCompanyName((String) mapValue.get("billingCompanyName"));
        setBillingStreet((String) mapValue.get("billingStreet"));
        setBillingCity((String) mapValue.get("billingCity"));
        setBillingRegion((String) mapValue.get("billingRegion"));
        setBillingPostcode((String) mapValue.get("billingPostcode"));
        setBillingCountry((String) mapValue.get("billingCountry"));
        setBillingPhone((String) mapValue.get("billingPhone"));
        setBillingFax((String) mapValue.get("billingFax"));
        setImportStatusId((String) mapValue.get("importStatusId"));
        setImportError((String) mapValue.get("importError"));
        setProcessedTimestamp((Timestamp) mapValue.get("processedTimestamp"));
        setLastUpdatedStamp((Timestamp) mapValue.get("lastUpdatedStamp"));
        setLastUpdatedTxStamp((Timestamp) mapValue.get("lastUpdatedTxStamp"));
        setCreatedStamp((Timestamp) mapValue.get("createdStamp"));
        setCreatedTxStamp((Timestamp) mapValue.get("createdTxStamp"));
        postInit();
    }

    /** {@inheritDoc} */
    @Override
    public Map<String, Object> toMap() {
        Map<String, Object> mapValue = new FastMap<String, Object>();
        mapValue.put("orderId", getOrderId());
        mapValue.put("orderTypeId", getOrderTypeId());
        mapValue.put("customerPartyId", getCustomerPartyId());
        mapValue.put("supplierPartyId", getSupplierPartyId());
        mapValue.put("orderDate", getOrderDate());
        mapValue.put("currencyUomId", getCurrencyUomId());
        mapValue.put("shippingTotal", getShippingTotal());
        mapValue.put("orderTax", getOrderTax());
        mapValue.put("taxAuthPartyId", getTaxAuthPartyId());
        mapValue.put("adjustmentsTotal", getAdjustmentsTotal());
        mapValue.put("grandTotal", getGrandTotal());
        mapValue.put("comments", getComments());
        mapValue.put("productStoreId", getProductStoreId());
        mapValue.put("salesChannelEnumId", getSalesChannelEnumId());
        mapValue.put("productStoreShipMethId", getProductStoreShipMethId());
        mapValue.put("orderClosed", getOrderClosed());
        mapValue.put("shippingFirstName", getShippingFirstName());
        mapValue.put("shippingLastName", getShippingLastName());
        mapValue.put("shippingCompanyName", getShippingCompanyName());
        mapValue.put("shippingStreet", getShippingStreet());
        mapValue.put("shippingCity", getShippingCity());
        mapValue.put("shippingRegion", getShippingRegion());
        mapValue.put("shippingPostcode", getShippingPostcode());
        mapValue.put("shippingCountry", getShippingCountry());
        mapValue.put("shippingPhone", getShippingPhone());
        mapValue.put("shippingFax", getShippingFax());
        mapValue.put("billingFirstName", getBillingFirstName());
        mapValue.put("billingLastName", getBillingLastName());
        mapValue.put("billingCompanyName", getBillingCompanyName());
        mapValue.put("billingStreet", getBillingStreet());
        mapValue.put("billingCity", getBillingCity());
        mapValue.put("billingRegion", getBillingRegion());
        mapValue.put("billingPostcode", getBillingPostcode());
        mapValue.put("billingCountry", getBillingCountry());
        mapValue.put("billingPhone", getBillingPhone());
        mapValue.put("billingFax", getBillingFax());
        mapValue.put("importStatusId", getImportStatusId());
        mapValue.put("importError", getImportError());
        mapValue.put("processedTimestamp", getProcessedTimestamp());
        mapValue.put("lastUpdatedStamp", getLastUpdatedStamp());
        mapValue.put("lastUpdatedTxStamp", getLastUpdatedTxStamp());
        mapValue.put("createdStamp", getCreatedStamp());
        mapValue.put("createdTxStamp", getCreatedTxStamp());
        return mapValue;
    }


}
