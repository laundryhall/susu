package org.opentaps.base.entities;

/*
 * Copyright (c) Open Source Strategies, Inc.
 *
 * Opentaps is free software: you can redistribute it and/or modify it
 * under the terms of the GNU Affero General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Opentaps is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with Opentaps.  If not, see <http://www.gnu.org/licenses/>.
 */

// DO NOT EDIT THIS FILE!  THIS IS AUTO GENERATED AND WILL GET WRITTEN OVER PERIODICALLY WHEN THE DATA MODEL CHANGES
// EXTEND THIS CLASS INSTEAD.

import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;

import javolution.util.FastMap;

import org.opentaps.foundation.entity.Entity;
import org.opentaps.foundation.entity.EntityFieldInterface;
import org.opentaps.foundation.repository.RepositoryException;
import org.opentaps.foundation.repository.RepositoryInterface;
import javax.persistence.*;
import org.hibernate.search.annotations.*;
import java.lang.String;
import java.sql.Timestamp;

/**
 * Auto generated base entity PartyAndPostalAddress.
 */
@javax.persistence.Entity
@NamedNativeQuery(name="selectPartyAndPostalAddresss", query="SELECT CM.CONTACT_MECH_ID AS \"contactMechId\",PTY.PARTY_ID AS \"partyId\",PTY.STATUS_ID AS \"statusId\",PCM.FROM_DATE AS \"fromDate\",PCM.THRU_DATE AS \"thruDate\",PTY.PARTY_TYPE_ID AS \"partyTypeId\",CM.CONTACT_MECH_TYPE_ID AS \"contactMechTypeId\",CM.INFO_STRING AS \"infoString\",PCM.COMMENTS AS \"comments\",PCM.EXTENSION AS \"extension\",PCM.ALLOW_SOLICITATION AS \"allowSolicitation\",PA.TO_NAME AS \"toName\",PA.ATTN_NAME AS \"attnName\",PA.ADDRESS1 AS \"address1\",PA.ADDRESS2 AS \"address2\",PA.DIRECTIONS AS \"directions\",PA.CITY AS \"city\",PA.POSTAL_CODE AS \"postalCode\",PA.POSTAL_CODE_EXT AS \"postalCodeExt\",PA.COUNTRY_GEO_ID AS \"countryGeoId\",PA.STATE_PROVINCE_GEO_ID AS \"stateProvinceGeoId\",PA.POSTAL_CODE_GEO_ID AS \"postalCodeGeoId\" FROM PARTY PTY INNER JOIN PARTY_CONTACT_MECH PCM ON PTY.PARTY_ID = PCM.PARTY_ID INNER JOIN CONTACT_MECH CM ON PCM.CONTACT_MECH_ID = CM.CONTACT_MECH_ID INNER JOIN POSTAL_ADDRESS PA ON CM.CONTACT_MECH_ID = PA.CONTACT_MECH_ID", resultSetMapping="PartyAndPostalAddressMapping")
@SqlResultSetMapping(name="PartyAndPostalAddressMapping", entities={
@EntityResult(entityClass=PartyAndPostalAddress.class, fields = {
@FieldResult(name="contactMechId", column="contactMechId")
,@FieldResult(name="partyId", column="partyId")
,@FieldResult(name="statusId", column="statusId")
,@FieldResult(name="fromDate", column="fromDate")
,@FieldResult(name="thruDate", column="thruDate")
,@FieldResult(name="partyTypeId", column="partyTypeId")
,@FieldResult(name="contactMechTypeId", column="contactMechTypeId")
,@FieldResult(name="infoString", column="infoString")
,@FieldResult(name="comments", column="comments")
,@FieldResult(name="extension", column="extension")
,@FieldResult(name="allowSolicitation", column="allowSolicitation")
,@FieldResult(name="toName", column="toName")
,@FieldResult(name="attnName", column="attnName")
,@FieldResult(name="address1", column="address1")
,@FieldResult(name="address2", column="address2")
,@FieldResult(name="directions", column="directions")
,@FieldResult(name="city", column="city")
,@FieldResult(name="postalCode", column="postalCode")
,@FieldResult(name="postalCodeExt", column="postalCodeExt")
,@FieldResult(name="countryGeoId", column="countryGeoId")
,@FieldResult(name="stateProvinceGeoId", column="stateProvinceGeoId")
,@FieldResult(name="postalCodeGeoId", column="postalCodeGeoId")
})})
@org.hibernate.annotations.Entity(mutable = false)
@org.hibernate.annotations.AccessType("field")
public class PartyAndPostalAddress extends Entity {
static {
java.util.Map<String, String> fields = new java.util.HashMap<String, String>();
        fields.put("contactMechId", "CM.CONTACT_MECH_ID");
        fields.put("partyId", "PTY.PARTY_ID");
        fields.put("statusId", "PTY.STATUS_ID");
        fields.put("fromDate", "PCM.FROM_DATE");
        fields.put("thruDate", "PCM.THRU_DATE");
        fields.put("partyTypeId", "PTY.PARTY_TYPE_ID");
        fields.put("contactMechTypeId", "CM.CONTACT_MECH_TYPE_ID");
        fields.put("infoString", "CM.INFO_STRING");
        fields.put("comments", "PCM.COMMENTS");
        fields.put("extension", "PCM.EXTENSION");
        fields.put("allowSolicitation", "PCM.ALLOW_SOLICITATION");
        fields.put("toName", "PA.TO_NAME");
        fields.put("attnName", "PA.ATTN_NAME");
        fields.put("address1", "PA.ADDRESS1");
        fields.put("address2", "PA.ADDRESS2");
        fields.put("directions", "PA.DIRECTIONS");
        fields.put("city", "PA.CITY");
        fields.put("postalCode", "PA.POSTAL_CODE");
        fields.put("postalCodeExt", "PA.POSTAL_CODE_EXT");
        fields.put("countryGeoId", "PA.COUNTRY_GEO_ID");
        fields.put("stateProvinceGeoId", "PA.STATE_PROVINCE_GEO_ID");
        fields.put("postalCodeGeoId", "PA.POSTAL_CODE_GEO_ID");
fieldMapColumns.put("PartyAndPostalAddress", fields);
}
  public static enum Fields implements EntityFieldInterface<PartyAndPostalAddress> {
    contactMechId("contactMechId"),
    partyId("partyId"),
    statusId("statusId"),
    fromDate("fromDate"),
    thruDate("thruDate"),
    partyTypeId("partyTypeId"),
    contactMechTypeId("contactMechTypeId"),
    infoString("infoString"),
    comments("comments"),
    extension("extension"),
    allowSolicitation("allowSolicitation"),
    toName("toName"),
    attnName("attnName"),
    address1("address1"),
    address2("address2"),
    directions("directions"),
    city("city"),
    postalCode("postalCode"),
    postalCodeExt("postalCodeExt"),
    countryGeoId("countryGeoId"),
    stateProvinceGeoId("stateProvinceGeoId"),
    postalCodeGeoId("postalCodeGeoId");
    private final String fieldName;
    private Fields(String name) { fieldName = name; }
    /** {@inheritDoc} */
    public String getName() { return fieldName; }
    /** {@inheritDoc} */
    public String asc() { return fieldName + " ASC"; }
    /** {@inheritDoc} */
    public String desc() { return fieldName + " DESC"; }
  }

    
   private String contactMechId;
    @Id
   private String partyId;
    
   private String statusId;
    
   private Timestamp fromDate;
    
   private Timestamp thruDate;
    
   private String partyTypeId;
    
   private String contactMechTypeId;
    
   private String infoString;
    
   private String comments;
    
   private String extension;
    
   private String allowSolicitation;
    
   private String toName;
    
   private String attnName;
    
   private String address1;
    
   private String address2;
    
   private String directions;
    
   private String city;
    
   private String postalCode;
    
   private String postalCodeExt;
    
   private String countryGeoId;
    
   private String stateProvinceGeoId;
    
   private String postalCodeGeoId;
   private transient List<PartyContactMech> partyContactMeches = null;
   @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="PARTY_ID", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private Party party = null;
   @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="CONTACT_MECH_ID", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private ContactMech contactMech = null;
   @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="CONTACT_MECH_ID", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private PostalAddress postalAddress = null;

  /**
   * Default constructor.
   */
  public PartyAndPostalAddress() {
      super();
      this.baseEntityName = "PartyAndPostalAddress";
      this.isView = true;
      
      this.primaryKeyNames = new ArrayList<String>();
      this.primaryKeyNames.add("contactMechId");this.primaryKeyNames.add("partyId");this.primaryKeyNames.add("fromDate");
      this.allFieldsNames = new ArrayList<String>();
      this.allFieldsNames.add("contactMechId");this.allFieldsNames.add("partyId");this.allFieldsNames.add("statusId");this.allFieldsNames.add("fromDate");this.allFieldsNames.add("thruDate");this.allFieldsNames.add("partyTypeId");this.allFieldsNames.add("contactMechTypeId");this.allFieldsNames.add("infoString");this.allFieldsNames.add("comments");this.allFieldsNames.add("extension");this.allFieldsNames.add("allowSolicitation");this.allFieldsNames.add("toName");this.allFieldsNames.add("attnName");this.allFieldsNames.add("address1");this.allFieldsNames.add("address2");this.allFieldsNames.add("directions");this.allFieldsNames.add("city");this.allFieldsNames.add("postalCode");this.allFieldsNames.add("postalCodeExt");this.allFieldsNames.add("countryGeoId");this.allFieldsNames.add("stateProvinceGeoId");this.allFieldsNames.add("postalCodeGeoId");
      this.nonPrimaryKeyNames = new ArrayList<String>();
      this.nonPrimaryKeyNames.addAll(allFieldsNames);
      this.nonPrimaryKeyNames.removeAll(primaryKeyNames);
  }

  /**
   * Constructor with a repository.
   * @param repository a <code>RepositoryInterface</code> value
   */
  public PartyAndPostalAddress(RepositoryInterface repository) {
      this();
      initRepository(repository);
  }

    /**
     * This is a view-entity, so the setter methods will be private to this class and for use in its fromMap constructor only
     */
    /**
     * Auto generated value setter.
     * @param contactMechId the contactMechId to set
     */
    public void setContactMechId(String contactMechId) {
        this.contactMechId = contactMechId;
    }
    /**
     * Auto generated value setter.
     * @param partyId the partyId to set
     */
    public void setPartyId(String partyId) {
        this.partyId = partyId;
    }
    /**
     * Auto generated value setter.
     * @param statusId the statusId to set
     */
    public void setStatusId(String statusId) {
        this.statusId = statusId;
    }
    /**
     * Auto generated value setter.
     * @param fromDate the fromDate to set
     */
    public void setFromDate(Timestamp fromDate) {
        this.fromDate = fromDate;
    }
    /**
     * Auto generated value setter.
     * @param thruDate the thruDate to set
     */
    public void setThruDate(Timestamp thruDate) {
        this.thruDate = thruDate;
    }
    /**
     * Auto generated value setter.
     * @param partyTypeId the partyTypeId to set
     */
    public void setPartyTypeId(String partyTypeId) {
        this.partyTypeId = partyTypeId;
    }
    /**
     * Auto generated value setter.
     * @param contactMechTypeId the contactMechTypeId to set
     */
    public void setContactMechTypeId(String contactMechTypeId) {
        this.contactMechTypeId = contactMechTypeId;
    }
    /**
     * Auto generated value setter.
     * @param infoString the infoString to set
     */
    public void setInfoString(String infoString) {
        this.infoString = infoString;
    }
    /**
     * Auto generated value setter.
     * @param comments the comments to set
     */
    public void setComments(String comments) {
        this.comments = comments;
    }
    /**
     * Auto generated value setter.
     * @param extension the extension to set
     */
    public void setExtension(String extension) {
        this.extension = extension;
    }
    /**
     * Auto generated value setter.
     * @param allowSolicitation the allowSolicitation to set
     */
    public void setAllowSolicitation(String allowSolicitation) {
        this.allowSolicitation = allowSolicitation;
    }
    /**
     * Auto generated value setter.
     * @param toName the toName to set
     */
    public void setToName(String toName) {
        this.toName = toName;
    }
    /**
     * Auto generated value setter.
     * @param attnName the attnName to set
     */
    public void setAttnName(String attnName) {
        this.attnName = attnName;
    }
    /**
     * Auto generated value setter.
     * @param address1 the address1 to set
     */
    public void setAddress1(String address1) {
        this.address1 = address1;
    }
    /**
     * Auto generated value setter.
     * @param address2 the address2 to set
     */
    public void setAddress2(String address2) {
        this.address2 = address2;
    }
    /**
     * Auto generated value setter.
     * @param directions the directions to set
     */
    public void setDirections(String directions) {
        this.directions = directions;
    }
    /**
     * Auto generated value setter.
     * @param city the city to set
     */
    public void setCity(String city) {
        this.city = city;
    }
    /**
     * Auto generated value setter.
     * @param postalCode the postalCode to set
     */
    public void setPostalCode(String postalCode) {
        this.postalCode = postalCode;
    }
    /**
     * Auto generated value setter.
     * @param postalCodeExt the postalCodeExt to set
     */
    public void setPostalCodeExt(String postalCodeExt) {
        this.postalCodeExt = postalCodeExt;
    }
    /**
     * Auto generated value setter.
     * @param countryGeoId the countryGeoId to set
     */
    public void setCountryGeoId(String countryGeoId) {
        this.countryGeoId = countryGeoId;
    }
    /**
     * Auto generated value setter.
     * @param stateProvinceGeoId the stateProvinceGeoId to set
     */
    public void setStateProvinceGeoId(String stateProvinceGeoId) {
        this.stateProvinceGeoId = stateProvinceGeoId;
    }
    /**
     * Auto generated value setter.
     * @param postalCodeGeoId the postalCodeGeoId to set
     */
    public void setPostalCodeGeoId(String postalCodeGeoId) {
        this.postalCodeGeoId = postalCodeGeoId;
    }

    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getContactMechId() {
        return this.contactMechId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPartyId() {
        return this.partyId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getStatusId() {
        return this.statusId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getFromDate() {
        return this.fromDate;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getThruDate() {
        return this.thruDate;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPartyTypeId() {
        return this.partyTypeId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getContactMechTypeId() {
        return this.contactMechTypeId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getInfoString() {
        return this.infoString;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getComments() {
        return this.comments;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getExtension() {
        return this.extension;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getAllowSolicitation() {
        return this.allowSolicitation;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getToName() {
        return this.toName;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getAttnName() {
        return this.attnName;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getAddress1() {
        return this.address1;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getAddress2() {
        return this.address2;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getDirections() {
        return this.directions;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getCity() {
        return this.city;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPostalCode() {
        return this.postalCode;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPostalCodeExt() {
        return this.postalCodeExt;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getCountryGeoId() {
        return this.countryGeoId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getStateProvinceGeoId() {
        return this.stateProvinceGeoId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPostalCodeGeoId() {
        return this.postalCodeGeoId;
    }

    /**
     * Auto generated method that gets the related <code>PartyContactMech</code> by the relation named <code>PartyContactMech</code>.
     * @return the list of <code>PartyContactMech</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends PartyContactMech> getPartyContactMeches() throws RepositoryException {
        if (this.partyContactMeches == null) {
            this.partyContactMeches = getRelated(PartyContactMech.class, "PartyContactMech");
        }
        return this.partyContactMeches;
    }
    /**
     * Auto generated method that gets the related <code>Party</code> by the relation named <code>Party</code>.
     * @return the <code>Party</code>
     * @throws RepositoryException if an error occurs
     */
    public Party getParty() throws RepositoryException {
        if (this.party == null) {
            this.party = getRelatedOne(Party.class, "Party");
        }
        return this.party;
    }
    /**
     * Auto generated method that gets the related <code>ContactMech</code> by the relation named <code>ContactMech</code>.
     * @return the <code>ContactMech</code>
     * @throws RepositoryException if an error occurs
     */
    public ContactMech getContactMech() throws RepositoryException {
        if (this.contactMech == null) {
            this.contactMech = getRelatedOne(ContactMech.class, "ContactMech");
        }
        return this.contactMech;
    }
    /**
     * Auto generated method that gets the related <code>PostalAddress</code> by the relation named <code>PostalAddress</code>.
     * @return the <code>PostalAddress</code>
     * @throws RepositoryException if an error occurs
     */
    public PostalAddress getPostalAddress() throws RepositoryException {
        if (this.postalAddress == null) {
            this.postalAddress = getRelatedOne(PostalAddress.class, "PostalAddress");
        }
        return this.postalAddress;
    }

    /**
     * Auto generated value setter.
     * @param partyContactMeches the partyContactMeches to set
    */
    public void setPartyContactMeches(List<PartyContactMech> partyContactMeches) {
        this.partyContactMeches = partyContactMeches;
    }
    /**
     * Auto generated value setter.
     * @param party the party to set
    */
    public void setParty(Party party) {
        this.party = party;
    }
    /**
     * Auto generated value setter.
     * @param contactMech the contactMech to set
    */
    public void setContactMech(ContactMech contactMech) {
        this.contactMech = contactMech;
    }
    /**
     * Auto generated value setter.
     * @param postalAddress the postalAddress to set
    */
    public void setPostalAddress(PostalAddress postalAddress) {
        this.postalAddress = postalAddress;
    }


    /** {@inheritDoc} */
    @Override
    public void fromMap(Map<String, Object> mapValue) {
        preInit();
        setContactMechId((String) mapValue.get("contactMechId"));
        setPartyId((String) mapValue.get("partyId"));
        setStatusId((String) mapValue.get("statusId"));
        setFromDate((Timestamp) mapValue.get("fromDate"));
        setThruDate((Timestamp) mapValue.get("thruDate"));
        setPartyTypeId((String) mapValue.get("partyTypeId"));
        setContactMechTypeId((String) mapValue.get("contactMechTypeId"));
        setInfoString((String) mapValue.get("infoString"));
        setComments((String) mapValue.get("comments"));
        setExtension((String) mapValue.get("extension"));
        setAllowSolicitation((String) mapValue.get("allowSolicitation"));
        setToName((String) mapValue.get("toName"));
        setAttnName((String) mapValue.get("attnName"));
        setAddress1((String) mapValue.get("address1"));
        setAddress2((String) mapValue.get("address2"));
        setDirections((String) mapValue.get("directions"));
        setCity((String) mapValue.get("city"));
        setPostalCode((String) mapValue.get("postalCode"));
        setPostalCodeExt((String) mapValue.get("postalCodeExt"));
        setCountryGeoId((String) mapValue.get("countryGeoId"));
        setStateProvinceGeoId((String) mapValue.get("stateProvinceGeoId"));
        setPostalCodeGeoId((String) mapValue.get("postalCodeGeoId"));
        postInit();
    }

    /** {@inheritDoc} */
    @Override
    public Map<String, Object> toMap() {
        Map<String, Object> mapValue = new FastMap<String, Object>();
        mapValue.put("contactMechId", getContactMechId());
        mapValue.put("partyId", getPartyId());
        mapValue.put("statusId", getStatusId());
        mapValue.put("fromDate", getFromDate());
        mapValue.put("thruDate", getThruDate());
        mapValue.put("partyTypeId", getPartyTypeId());
        mapValue.put("contactMechTypeId", getContactMechTypeId());
        mapValue.put("infoString", getInfoString());
        mapValue.put("comments", getComments());
        mapValue.put("extension", getExtension());
        mapValue.put("allowSolicitation", getAllowSolicitation());
        mapValue.put("toName", getToName());
        mapValue.put("attnName", getAttnName());
        mapValue.put("address1", getAddress1());
        mapValue.put("address2", getAddress2());
        mapValue.put("directions", getDirections());
        mapValue.put("city", getCity());
        mapValue.put("postalCode", getPostalCode());
        mapValue.put("postalCodeExt", getPostalCodeExt());
        mapValue.put("countryGeoId", getCountryGeoId());
        mapValue.put("stateProvinceGeoId", getStateProvinceGeoId());
        mapValue.put("postalCodeGeoId", getPostalCodeGeoId());
        return mapValue;
    }


}
