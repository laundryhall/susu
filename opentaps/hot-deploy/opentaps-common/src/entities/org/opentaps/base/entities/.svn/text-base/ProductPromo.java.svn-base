package org.opentaps.base.entities;

/*
 * Copyright (c) Open Source Strategies, Inc.
 *
 * Opentaps is free software: you can redistribute it and/or modify it
 * under the terms of the GNU Affero General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Opentaps is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with Opentaps.  If not, see <http://www.gnu.org/licenses/>.
 */

// DO NOT EDIT THIS FILE!  THIS IS AUTO GENERATED AND WILL GET WRITTEN OVER PERIODICALLY WHEN THE DATA MODEL CHANGES
// EXTEND THIS CLASS INSTEAD.

import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;

import javolution.util.FastMap;

import org.opentaps.foundation.entity.Entity;
import org.opentaps.foundation.entity.EntityFieldInterface;
import org.opentaps.foundation.repository.RepositoryException;
import org.opentaps.foundation.repository.RepositoryInterface;
import javax.persistence.*;
import org.hibernate.search.annotations.*;
import java.lang.Long;
import java.lang.String;
import java.math.BigDecimal;
import java.sql.Timestamp;

/**
 * Auto generated base entity ProductPromo.
 */
@javax.persistence.Entity
@Table(name="PRODUCT_PROMO")
public class ProductPromo extends Entity {
static {
java.util.Map<String, String> fields = new java.util.HashMap<String, String>();
        fields.put("productPromoId", "PRODUCT_PROMO_ID");
        fields.put("promoName", "PROMO_NAME");
        fields.put("promoText", "PROMO_TEXT");
        fields.put("userEntered", "USER_ENTERED");
        fields.put("showToCustomer", "SHOW_TO_CUSTOMER");
        fields.put("requireCode", "REQUIRE_CODE");
        fields.put("useLimitPerOrder", "USE_LIMIT_PER_ORDER");
        fields.put("useLimitPerCustomer", "USE_LIMIT_PER_CUSTOMER");
        fields.put("useLimitPerPromotion", "USE_LIMIT_PER_PROMOTION");
        fields.put("billbackFactor", "BILLBACK_FACTOR");
        fields.put("overrideOrgPartyId", "OVERRIDE_ORG_PARTY_ID");
        fields.put("createdDate", "CREATED_DATE");
        fields.put("createdByUserLogin", "CREATED_BY_USER_LOGIN");
        fields.put("lastModifiedDate", "LAST_MODIFIED_DATE");
        fields.put("lastModifiedByUserLogin", "LAST_MODIFIED_BY_USER_LOGIN");
        fields.put("lastUpdatedStamp", "LAST_UPDATED_STAMP");
        fields.put("lastUpdatedTxStamp", "LAST_UPDATED_TX_STAMP");
        fields.put("createdStamp", "CREATED_STAMP");
        fields.put("createdTxStamp", "CREATED_TX_STAMP");
fieldMapColumns.put("ProductPromo", fields);
}
  public static enum Fields implements EntityFieldInterface<ProductPromo> {
    productPromoId("productPromoId"),
    promoName("promoName"),
    promoText("promoText"),
    userEntered("userEntered"),
    showToCustomer("showToCustomer"),
    requireCode("requireCode"),
    useLimitPerOrder("useLimitPerOrder"),
    useLimitPerCustomer("useLimitPerCustomer"),
    useLimitPerPromotion("useLimitPerPromotion"),
    billbackFactor("billbackFactor"),
    overrideOrgPartyId("overrideOrgPartyId"),
    createdDate("createdDate"),
    createdByUserLogin("createdByUserLogin"),
    lastModifiedDate("lastModifiedDate"),
    lastModifiedByUserLogin("lastModifiedByUserLogin"),
    lastUpdatedStamp("lastUpdatedStamp"),
    lastUpdatedTxStamp("lastUpdatedTxStamp"),
    createdStamp("createdStamp"),
    createdTxStamp("createdTxStamp");
    private final String fieldName;
    private Fields(String name) { fieldName = name; }
    /** {@inheritDoc} */
    public String getName() { return fieldName; }
    /** {@inheritDoc} */
    public String asc() { return fieldName + " ASC"; }
    /** {@inheritDoc} */
    public String desc() { return fieldName + " DESC"; }
  }

   @org.hibernate.annotations.GenericGenerator(name="ProductPromo_GEN",  strategy="org.opentaps.foundation.entity.hibernate.OpentapsIdentifierGenerator")
   @GeneratedValue(generator="ProductPromo_GEN")
   @Id
   @Column(name="PRODUCT_PROMO_ID")
   private String productPromoId;
   @Column(name="PROMO_NAME")
   private String promoName;
   @Column(name="PROMO_TEXT")
   private String promoText;
   @Column(name="USER_ENTERED")
   private String userEntered;
   @Column(name="SHOW_TO_CUSTOMER")
   private String showToCustomer;
   @Column(name="REQUIRE_CODE")
   private String requireCode;
   @Column(name="USE_LIMIT_PER_ORDER")
   private Long useLimitPerOrder;
   @Column(name="USE_LIMIT_PER_CUSTOMER")
   private Long useLimitPerCustomer;
   @Column(name="USE_LIMIT_PER_PROMOTION")
   private Long useLimitPerPromotion;
   @Column(name="BILLBACK_FACTOR")
   private BigDecimal billbackFactor;
   @Column(name="OVERRIDE_ORG_PARTY_ID")
   private String overrideOrgPartyId;
   @Column(name="CREATED_DATE")
   private Timestamp createdDate;
   @Column(name="CREATED_BY_USER_LOGIN")
   private String createdByUserLogin;
   @Column(name="LAST_MODIFIED_DATE")
   private Timestamp lastModifiedDate;
   @Column(name="LAST_MODIFIED_BY_USER_LOGIN")
   private String lastModifiedByUserLogin;
   @Column(name="LAST_UPDATED_STAMP")
   private Timestamp lastUpdatedStamp;
   @Column(name="LAST_UPDATED_TX_STAMP")
   private Timestamp lastUpdatedTxStamp;
   @Column(name="CREATED_STAMP")
   private Timestamp createdStamp;
   @Column(name="CREATED_TX_STAMP")
   private Timestamp createdTxStamp;
   @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="OVERRIDE_ORG_PARTY_ID", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private Party party = null;
   @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="CREATED_BY_USER_LOGIN", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private UserLogin relatedCreatedByUserLogin = null;
   @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="LAST_MODIFIED_BY_USER_LOGIN", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private UserLogin relatedLastModifiedByUserLogin = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="productPromo", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="PRODUCT_PROMO_ID")
   
   private List<AgreementPromoAppl> agreementPromoAppls = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="productPromo", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="PRODUCT_PROMO_ID")
   
   private List<MarketingCampaignPromo> marketingCampaignPromoes = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="productPromo", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="PRODUCT_PROMO_ID")
   
   private List<OrderAdjustment> orderAdjustments = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="productPromo", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="PRODUCT_PROMO_ID")
   
   private List<ProductPromoAction> productPromoActions = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="productPromo", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="PRODUCT_PROMO_ID")
   
   private List<ProductPromoCategory> productPromoCategorys = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="productPromo", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="PRODUCT_PROMO_ID")
   
   private List<ProductPromoCode> productPromoCodes = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="productPromo", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="PRODUCT_PROMO_ID")
   
   private List<ProductPromoCond> productPromoConds = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="productPromo", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="PRODUCT_PROMO_ID")
   
   private List<ProductPromoProduct> productPromoProducts = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="productPromo", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="PRODUCT_PROMO_ID")
   
   private List<ProductPromoRule> productPromoRules = null;
   private transient List<ProductPromoUse> productPromoUses = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="productPromo", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="PRODUCT_PROMO_ID")
   
   private List<ProductStorePromoAppl> productStorePromoAppls = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="productPromo", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="PRODUCT_PROMO_ID")
   
   private List<QuoteAdjustment> quoteAdjustments = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="productPromo", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="PRODUCT_PROMO_ID")
   
   private List<ReturnAdjustment> returnAdjustments = null;

  /**
   * Default constructor.
   */
  public ProductPromo() {
      super();
      this.baseEntityName = "ProductPromo";
      this.isView = false;
      
      this.primaryKeyNames = new ArrayList<String>();
      this.primaryKeyNames.add("productPromoId");
      this.allFieldsNames = new ArrayList<String>();
      this.allFieldsNames.add("productPromoId");this.allFieldsNames.add("promoName");this.allFieldsNames.add("promoText");this.allFieldsNames.add("userEntered");this.allFieldsNames.add("showToCustomer");this.allFieldsNames.add("requireCode");this.allFieldsNames.add("useLimitPerOrder");this.allFieldsNames.add("useLimitPerCustomer");this.allFieldsNames.add("useLimitPerPromotion");this.allFieldsNames.add("billbackFactor");this.allFieldsNames.add("overrideOrgPartyId");this.allFieldsNames.add("createdDate");this.allFieldsNames.add("createdByUserLogin");this.allFieldsNames.add("lastModifiedDate");this.allFieldsNames.add("lastModifiedByUserLogin");this.allFieldsNames.add("lastUpdatedStamp");this.allFieldsNames.add("lastUpdatedTxStamp");this.allFieldsNames.add("createdStamp");this.allFieldsNames.add("createdTxStamp");
      this.nonPrimaryKeyNames = new ArrayList<String>();
      this.nonPrimaryKeyNames.addAll(allFieldsNames);
      this.nonPrimaryKeyNames.removeAll(primaryKeyNames);
  }

  /**
   * Constructor with a repository.
   * @param repository a <code>RepositoryInterface</code> value
   */
  public ProductPromo(RepositoryInterface repository) {
      this();
      initRepository(repository);
  }

    /**
     * Auto generated value setter.
     * @param productPromoId the productPromoId to set
     */
    public void setProductPromoId(String productPromoId) {
        this.productPromoId = productPromoId;
    }
    /**
     * Auto generated value setter.
     * @param promoName the promoName to set
     */
    public void setPromoName(String promoName) {
        this.promoName = promoName;
    }
    /**
     * Auto generated value setter.
     * @param promoText the promoText to set
     */
    public void setPromoText(String promoText) {
        this.promoText = promoText;
    }
    /**
     * Auto generated value setter.
     * @param userEntered the userEntered to set
     */
    public void setUserEntered(String userEntered) {
        this.userEntered = userEntered;
    }
    /**
     * Auto generated value setter.
     * @param showToCustomer the showToCustomer to set
     */
    public void setShowToCustomer(String showToCustomer) {
        this.showToCustomer = showToCustomer;
    }
    /**
     * Auto generated value setter.
     * @param requireCode the requireCode to set
     */
    public void setRequireCode(String requireCode) {
        this.requireCode = requireCode;
    }
    /**
     * Auto generated value setter.
     * @param useLimitPerOrder the useLimitPerOrder to set
     */
    public void setUseLimitPerOrder(Long useLimitPerOrder) {
        this.useLimitPerOrder = useLimitPerOrder;
    }
    /**
     * Auto generated value setter.
     * @param useLimitPerCustomer the useLimitPerCustomer to set
     */
    public void setUseLimitPerCustomer(Long useLimitPerCustomer) {
        this.useLimitPerCustomer = useLimitPerCustomer;
    }
    /**
     * Auto generated value setter.
     * @param useLimitPerPromotion the useLimitPerPromotion to set
     */
    public void setUseLimitPerPromotion(Long useLimitPerPromotion) {
        this.useLimitPerPromotion = useLimitPerPromotion;
    }
    /**
     * Auto generated value setter.
     * @param billbackFactor the billbackFactor to set
     */
    public void setBillbackFactor(BigDecimal billbackFactor) {
        this.billbackFactor = billbackFactor;
    }
    /**
     * Auto generated value setter.
     * @param overrideOrgPartyId the overrideOrgPartyId to set
     */
    public void setOverrideOrgPartyId(String overrideOrgPartyId) {
        this.overrideOrgPartyId = overrideOrgPartyId;
    }
    /**
     * Auto generated value setter.
     * @param createdDate the createdDate to set
     */
    public void setCreatedDate(Timestamp createdDate) {
        this.createdDate = createdDate;
    }
    /**
     * Auto generated value setter.
     * @param createdByUserLogin the createdByUserLogin to set
     */
    public void setCreatedByUserLogin(String createdByUserLogin) {
        this.createdByUserLogin = createdByUserLogin;
    }
    /**
     * Auto generated value setter.
     * @param lastModifiedDate the lastModifiedDate to set
     */
    public void setLastModifiedDate(Timestamp lastModifiedDate) {
        this.lastModifiedDate = lastModifiedDate;
    }
    /**
     * Auto generated value setter.
     * @param lastModifiedByUserLogin the lastModifiedByUserLogin to set
     */
    public void setLastModifiedByUserLogin(String lastModifiedByUserLogin) {
        this.lastModifiedByUserLogin = lastModifiedByUserLogin;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedStamp the lastUpdatedStamp to set
     */
    public void setLastUpdatedStamp(Timestamp lastUpdatedStamp) {
        this.lastUpdatedStamp = lastUpdatedStamp;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedTxStamp the lastUpdatedTxStamp to set
     */
    public void setLastUpdatedTxStamp(Timestamp lastUpdatedTxStamp) {
        this.lastUpdatedTxStamp = lastUpdatedTxStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdStamp the createdStamp to set
     */
    public void setCreatedStamp(Timestamp createdStamp) {
        this.createdStamp = createdStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdTxStamp the createdTxStamp to set
     */
    public void setCreatedTxStamp(Timestamp createdTxStamp) {
        this.createdTxStamp = createdTxStamp;
    }

    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getProductPromoId() {
        return this.productPromoId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPromoName() {
        return this.promoName;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPromoText() {
        return this.promoText;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getUserEntered() {
        return this.userEntered;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getShowToCustomer() {
        return this.showToCustomer;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getRequireCode() {
        return this.requireCode;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Long</code>
     */
    public Long getUseLimitPerOrder() {
        return this.useLimitPerOrder;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Long</code>
     */
    public Long getUseLimitPerCustomer() {
        return this.useLimitPerCustomer;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Long</code>
     */
    public Long getUseLimitPerPromotion() {
        return this.useLimitPerPromotion;
    }
    /**
     * Auto generated value accessor.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getBillbackFactor() {
        return this.billbackFactor;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getOverrideOrgPartyId() {
        return this.overrideOrgPartyId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedDate() {
        return this.createdDate;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getCreatedByUserLogin() {
        return this.createdByUserLogin;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastModifiedDate() {
        return this.lastModifiedDate;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getLastModifiedByUserLogin() {
        return this.lastModifiedByUserLogin;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedStamp() {
        return this.lastUpdatedStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedTxStamp() {
        return this.lastUpdatedTxStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedStamp() {
        return this.createdStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedTxStamp() {
        return this.createdTxStamp;
    }

    /**
     * Auto generated method that gets the related <code>Party</code> by the relation named <code>Party</code>.
     * @return the <code>Party</code>
     * @throws RepositoryException if an error occurs
     */
    public Party getParty() throws RepositoryException {
        if (this.party == null) {
            this.party = getRelatedOne(Party.class, "Party");
        }
        return this.party;
    }
    /**
     * Auto generated method that gets the related <code>UserLogin</code> by the relation named <code>CreatedByUserLogin</code>.
     * @return the <code>UserLogin</code>
     * @throws RepositoryException if an error occurs
     */
    public UserLogin getRelatedCreatedByUserLogin() throws RepositoryException {
        if (this.relatedCreatedByUserLogin == null) {
            this.relatedCreatedByUserLogin = getRelatedOne(UserLogin.class, "CreatedByUserLogin");
        }
        return this.relatedCreatedByUserLogin;
    }
    /**
     * Auto generated method that gets the related <code>UserLogin</code> by the relation named <code>LastModifiedByUserLogin</code>.
     * @return the <code>UserLogin</code>
     * @throws RepositoryException if an error occurs
     */
    public UserLogin getRelatedLastModifiedByUserLogin() throws RepositoryException {
        if (this.relatedLastModifiedByUserLogin == null) {
            this.relatedLastModifiedByUserLogin = getRelatedOne(UserLogin.class, "LastModifiedByUserLogin");
        }
        return this.relatedLastModifiedByUserLogin;
    }
    /**
     * Auto generated method that gets the related <code>AgreementPromoAppl</code> by the relation named <code>AgreementPromoAppl</code>.
     * @return the list of <code>AgreementPromoAppl</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends AgreementPromoAppl> getAgreementPromoAppls() throws RepositoryException {
        if (this.agreementPromoAppls == null) {
            this.agreementPromoAppls = getRelated(AgreementPromoAppl.class, "AgreementPromoAppl");
        }
        return this.agreementPromoAppls;
    }
    /**
     * Auto generated method that gets the related <code>MarketingCampaignPromo</code> by the relation named <code>MarketingCampaignPromo</code>.
     * @return the list of <code>MarketingCampaignPromo</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends MarketingCampaignPromo> getMarketingCampaignPromoes() throws RepositoryException {
        if (this.marketingCampaignPromoes == null) {
            this.marketingCampaignPromoes = getRelated(MarketingCampaignPromo.class, "MarketingCampaignPromo");
        }
        return this.marketingCampaignPromoes;
    }
    /**
     * Auto generated method that gets the related <code>OrderAdjustment</code> by the relation named <code>OrderAdjustment</code>.
     * @return the list of <code>OrderAdjustment</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends OrderAdjustment> getOrderAdjustments() throws RepositoryException {
        if (this.orderAdjustments == null) {
            this.orderAdjustments = getRelated(OrderAdjustment.class, "OrderAdjustment");
        }
        return this.orderAdjustments;
    }
    /**
     * Auto generated method that gets the related <code>ProductPromoAction</code> by the relation named <code>ProductPromoAction</code>.
     * @return the list of <code>ProductPromoAction</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ProductPromoAction> getProductPromoActions() throws RepositoryException {
        if (this.productPromoActions == null) {
            this.productPromoActions = getRelated(ProductPromoAction.class, "ProductPromoAction");
        }
        return this.productPromoActions;
    }
    /**
     * Auto generated method that gets the related <code>ProductPromoCategory</code> by the relation named <code>ProductPromoCategory</code>.
     * @return the list of <code>ProductPromoCategory</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ProductPromoCategory> getProductPromoCategorys() throws RepositoryException {
        if (this.productPromoCategorys == null) {
            this.productPromoCategorys = getRelated(ProductPromoCategory.class, "ProductPromoCategory");
        }
        return this.productPromoCategorys;
    }
    /**
     * Auto generated method that gets the related <code>ProductPromoCode</code> by the relation named <code>ProductPromoCode</code>.
     * @return the list of <code>ProductPromoCode</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ProductPromoCode> getProductPromoCodes() throws RepositoryException {
        if (this.productPromoCodes == null) {
            this.productPromoCodes = getRelated(ProductPromoCode.class, "ProductPromoCode");
        }
        return this.productPromoCodes;
    }
    /**
     * Auto generated method that gets the related <code>ProductPromoCond</code> by the relation named <code>ProductPromoCond</code>.
     * @return the list of <code>ProductPromoCond</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ProductPromoCond> getProductPromoConds() throws RepositoryException {
        if (this.productPromoConds == null) {
            this.productPromoConds = getRelated(ProductPromoCond.class, "ProductPromoCond");
        }
        return this.productPromoConds;
    }
    /**
     * Auto generated method that gets the related <code>ProductPromoProduct</code> by the relation named <code>ProductPromoProduct</code>.
     * @return the list of <code>ProductPromoProduct</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ProductPromoProduct> getProductPromoProducts() throws RepositoryException {
        if (this.productPromoProducts == null) {
            this.productPromoProducts = getRelated(ProductPromoProduct.class, "ProductPromoProduct");
        }
        return this.productPromoProducts;
    }
    /**
     * Auto generated method that gets the related <code>ProductPromoRule</code> by the relation named <code>ProductPromoRule</code>.
     * @return the list of <code>ProductPromoRule</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ProductPromoRule> getProductPromoRules() throws RepositoryException {
        if (this.productPromoRules == null) {
            this.productPromoRules = getRelated(ProductPromoRule.class, "ProductPromoRule");
        }
        return this.productPromoRules;
    }
    /**
     * Auto generated method that gets the related <code>ProductPromoUse</code> by the relation named <code>ProductPromoUse</code>.
     * @return the list of <code>ProductPromoUse</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ProductPromoUse> getProductPromoUses() throws RepositoryException {
        if (this.productPromoUses == null) {
            this.productPromoUses = getRelated(ProductPromoUse.class, "ProductPromoUse");
        }
        return this.productPromoUses;
    }
    /**
     * Auto generated method that gets the related <code>ProductStorePromoAppl</code> by the relation named <code>ProductStorePromoAppl</code>.
     * @return the list of <code>ProductStorePromoAppl</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ProductStorePromoAppl> getProductStorePromoAppls() throws RepositoryException {
        if (this.productStorePromoAppls == null) {
            this.productStorePromoAppls = getRelated(ProductStorePromoAppl.class, "ProductStorePromoAppl");
        }
        return this.productStorePromoAppls;
    }
    /**
     * Auto generated method that gets the related <code>QuoteAdjustment</code> by the relation named <code>QuoteAdjustment</code>.
     * @return the list of <code>QuoteAdjustment</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends QuoteAdjustment> getQuoteAdjustments() throws RepositoryException {
        if (this.quoteAdjustments == null) {
            this.quoteAdjustments = getRelated(QuoteAdjustment.class, "QuoteAdjustment");
        }
        return this.quoteAdjustments;
    }
    /**
     * Auto generated method that gets the related <code>ReturnAdjustment</code> by the relation named <code>ReturnAdjustment</code>.
     * @return the list of <code>ReturnAdjustment</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ReturnAdjustment> getReturnAdjustments() throws RepositoryException {
        if (this.returnAdjustments == null) {
            this.returnAdjustments = getRelated(ReturnAdjustment.class, "ReturnAdjustment");
        }
        return this.returnAdjustments;
    }

    /**
     * Auto generated value setter.
     * @param party the party to set
    */
    public void setParty(Party party) {
        this.party = party;
    }
    /**
     * Auto generated value setter.
     * @param relatedCreatedByUserLogin the relatedCreatedByUserLogin to set
    */
    public void setRelatedCreatedByUserLogin(UserLogin relatedCreatedByUserLogin) {
        this.relatedCreatedByUserLogin = relatedCreatedByUserLogin;
    }
    /**
     * Auto generated value setter.
     * @param relatedLastModifiedByUserLogin the relatedLastModifiedByUserLogin to set
    */
    public void setRelatedLastModifiedByUserLogin(UserLogin relatedLastModifiedByUserLogin) {
        this.relatedLastModifiedByUserLogin = relatedLastModifiedByUserLogin;
    }
    /**
     * Auto generated value setter.
     * @param agreementPromoAppls the agreementPromoAppls to set
    */
    public void setAgreementPromoAppls(List<AgreementPromoAppl> agreementPromoAppls) {
        this.agreementPromoAppls = agreementPromoAppls;
    }
    /**
     * Auto generated value setter.
     * @param marketingCampaignPromoes the marketingCampaignPromoes to set
    */
    public void setMarketingCampaignPromoes(List<MarketingCampaignPromo> marketingCampaignPromoes) {
        this.marketingCampaignPromoes = marketingCampaignPromoes;
    }
    /**
     * Auto generated value setter.
     * @param orderAdjustments the orderAdjustments to set
    */
    public void setOrderAdjustments(List<OrderAdjustment> orderAdjustments) {
        this.orderAdjustments = orderAdjustments;
    }
    /**
     * Auto generated value setter.
     * @param productPromoActions the productPromoActions to set
    */
    public void setProductPromoActions(List<ProductPromoAction> productPromoActions) {
        this.productPromoActions = productPromoActions;
    }
    /**
     * Auto generated value setter.
     * @param productPromoCategorys the productPromoCategorys to set
    */
    public void setProductPromoCategorys(List<ProductPromoCategory> productPromoCategorys) {
        this.productPromoCategorys = productPromoCategorys;
    }
    /**
     * Auto generated value setter.
     * @param productPromoCodes the productPromoCodes to set
    */
    public void setProductPromoCodes(List<ProductPromoCode> productPromoCodes) {
        this.productPromoCodes = productPromoCodes;
    }
    /**
     * Auto generated value setter.
     * @param productPromoConds the productPromoConds to set
    */
    public void setProductPromoConds(List<ProductPromoCond> productPromoConds) {
        this.productPromoConds = productPromoConds;
    }
    /**
     * Auto generated value setter.
     * @param productPromoProducts the productPromoProducts to set
    */
    public void setProductPromoProducts(List<ProductPromoProduct> productPromoProducts) {
        this.productPromoProducts = productPromoProducts;
    }
    /**
     * Auto generated value setter.
     * @param productPromoRules the productPromoRules to set
    */
    public void setProductPromoRules(List<ProductPromoRule> productPromoRules) {
        this.productPromoRules = productPromoRules;
    }
    /**
     * Auto generated value setter.
     * @param productPromoUses the productPromoUses to set
    */
    public void setProductPromoUses(List<ProductPromoUse> productPromoUses) {
        this.productPromoUses = productPromoUses;
    }
    /**
     * Auto generated value setter.
     * @param productStorePromoAppls the productStorePromoAppls to set
    */
    public void setProductStorePromoAppls(List<ProductStorePromoAppl> productStorePromoAppls) {
        this.productStorePromoAppls = productStorePromoAppls;
    }
    /**
     * Auto generated value setter.
     * @param quoteAdjustments the quoteAdjustments to set
    */
    public void setQuoteAdjustments(List<QuoteAdjustment> quoteAdjustments) {
        this.quoteAdjustments = quoteAdjustments;
    }
    /**
     * Auto generated value setter.
     * @param returnAdjustments the returnAdjustments to set
    */
    public void setReturnAdjustments(List<ReturnAdjustment> returnAdjustments) {
        this.returnAdjustments = returnAdjustments;
    }

    /**
     * Auto generated method that add item to collection.
     */
    public void addAgreementPromoAppl(AgreementPromoAppl agreementPromoAppl) {
        if (this.agreementPromoAppls == null) {
            this.agreementPromoAppls = new ArrayList<AgreementPromoAppl>();
        }
        this.agreementPromoAppls.add(agreementPromoAppl);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeAgreementPromoAppl(AgreementPromoAppl agreementPromoAppl) {
        if (this.agreementPromoAppls == null) {
            return;
        }
        this.agreementPromoAppls.remove(agreementPromoAppl);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearAgreementPromoAppl() {
        if (this.agreementPromoAppls == null) {
            return;
        }
        this.agreementPromoAppls.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addMarketingCampaignPromoe(MarketingCampaignPromo marketingCampaignPromoe) {
        if (this.marketingCampaignPromoes == null) {
            this.marketingCampaignPromoes = new ArrayList<MarketingCampaignPromo>();
        }
        this.marketingCampaignPromoes.add(marketingCampaignPromoe);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeMarketingCampaignPromoe(MarketingCampaignPromo marketingCampaignPromoe) {
        if (this.marketingCampaignPromoes == null) {
            return;
        }
        this.marketingCampaignPromoes.remove(marketingCampaignPromoe);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearMarketingCampaignPromoe() {
        if (this.marketingCampaignPromoes == null) {
            return;
        }
        this.marketingCampaignPromoes.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addProductPromoAction(ProductPromoAction productPromoAction) {
        if (this.productPromoActions == null) {
            this.productPromoActions = new ArrayList<ProductPromoAction>();
        }
        this.productPromoActions.add(productPromoAction);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeProductPromoAction(ProductPromoAction productPromoAction) {
        if (this.productPromoActions == null) {
            return;
        }
        this.productPromoActions.remove(productPromoAction);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearProductPromoAction() {
        if (this.productPromoActions == null) {
            return;
        }
        this.productPromoActions.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addProductPromoCategory(ProductPromoCategory productPromoCategory) {
        if (this.productPromoCategorys == null) {
            this.productPromoCategorys = new ArrayList<ProductPromoCategory>();
        }
        this.productPromoCategorys.add(productPromoCategory);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeProductPromoCategory(ProductPromoCategory productPromoCategory) {
        if (this.productPromoCategorys == null) {
            return;
        }
        this.productPromoCategorys.remove(productPromoCategory);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearProductPromoCategory() {
        if (this.productPromoCategorys == null) {
            return;
        }
        this.productPromoCategorys.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addProductPromoCond(ProductPromoCond productPromoCond) {
        if (this.productPromoConds == null) {
            this.productPromoConds = new ArrayList<ProductPromoCond>();
        }
        this.productPromoConds.add(productPromoCond);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeProductPromoCond(ProductPromoCond productPromoCond) {
        if (this.productPromoConds == null) {
            return;
        }
        this.productPromoConds.remove(productPromoCond);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearProductPromoCond() {
        if (this.productPromoConds == null) {
            return;
        }
        this.productPromoConds.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addProductPromoProduct(ProductPromoProduct productPromoProduct) {
        if (this.productPromoProducts == null) {
            this.productPromoProducts = new ArrayList<ProductPromoProduct>();
        }
        this.productPromoProducts.add(productPromoProduct);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeProductPromoProduct(ProductPromoProduct productPromoProduct) {
        if (this.productPromoProducts == null) {
            return;
        }
        this.productPromoProducts.remove(productPromoProduct);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearProductPromoProduct() {
        if (this.productPromoProducts == null) {
            return;
        }
        this.productPromoProducts.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addProductPromoRule(ProductPromoRule productPromoRule) {
        if (this.productPromoRules == null) {
            this.productPromoRules = new ArrayList<ProductPromoRule>();
        }
        this.productPromoRules.add(productPromoRule);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeProductPromoRule(ProductPromoRule productPromoRule) {
        if (this.productPromoRules == null) {
            return;
        }
        this.productPromoRules.remove(productPromoRule);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearProductPromoRule() {
        if (this.productPromoRules == null) {
            return;
        }
        this.productPromoRules.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addProductStorePromoAppl(ProductStorePromoAppl productStorePromoAppl) {
        if (this.productStorePromoAppls == null) {
            this.productStorePromoAppls = new ArrayList<ProductStorePromoAppl>();
        }
        this.productStorePromoAppls.add(productStorePromoAppl);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeProductStorePromoAppl(ProductStorePromoAppl productStorePromoAppl) {
        if (this.productStorePromoAppls == null) {
            return;
        }
        this.productStorePromoAppls.remove(productStorePromoAppl);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearProductStorePromoAppl() {
        if (this.productStorePromoAppls == null) {
            return;
        }
        this.productStorePromoAppls.clear();
    }

    /** {@inheritDoc} */
    @Override
    public void fromMap(Map<String, Object> mapValue) {
        preInit();
        setProductPromoId((String) mapValue.get("productPromoId"));
        setPromoName((String) mapValue.get("promoName"));
        setPromoText((String) mapValue.get("promoText"));
        setUserEntered((String) mapValue.get("userEntered"));
        setShowToCustomer((String) mapValue.get("showToCustomer"));
        setRequireCode((String) mapValue.get("requireCode"));
        setUseLimitPerOrder((Long) mapValue.get("useLimitPerOrder"));
        setUseLimitPerCustomer((Long) mapValue.get("useLimitPerCustomer"));
        setUseLimitPerPromotion((Long) mapValue.get("useLimitPerPromotion"));
        setBillbackFactor(convertToBigDecimal(mapValue.get("billbackFactor")));
        setOverrideOrgPartyId((String) mapValue.get("overrideOrgPartyId"));
        setCreatedDate((Timestamp) mapValue.get("createdDate"));
        setCreatedByUserLogin((String) mapValue.get("createdByUserLogin"));
        setLastModifiedDate((Timestamp) mapValue.get("lastModifiedDate"));
        setLastModifiedByUserLogin((String) mapValue.get("lastModifiedByUserLogin"));
        setLastUpdatedStamp((Timestamp) mapValue.get("lastUpdatedStamp"));
        setLastUpdatedTxStamp((Timestamp) mapValue.get("lastUpdatedTxStamp"));
        setCreatedStamp((Timestamp) mapValue.get("createdStamp"));
        setCreatedTxStamp((Timestamp) mapValue.get("createdTxStamp"));
        postInit();
    }

    /** {@inheritDoc} */
    @Override
    public Map<String, Object> toMap() {
        Map<String, Object> mapValue = new FastMap<String, Object>();
        mapValue.put("productPromoId", getProductPromoId());
        mapValue.put("promoName", getPromoName());
        mapValue.put("promoText", getPromoText());
        mapValue.put("userEntered", getUserEntered());
        mapValue.put("showToCustomer", getShowToCustomer());
        mapValue.put("requireCode", getRequireCode());
        mapValue.put("useLimitPerOrder", getUseLimitPerOrder());
        mapValue.put("useLimitPerCustomer", getUseLimitPerCustomer());
        mapValue.put("useLimitPerPromotion", getUseLimitPerPromotion());
        mapValue.put("billbackFactor", getBillbackFactor());
        mapValue.put("overrideOrgPartyId", getOverrideOrgPartyId());
        mapValue.put("createdDate", getCreatedDate());
        mapValue.put("createdByUserLogin", getCreatedByUserLogin());
        mapValue.put("lastModifiedDate", getLastModifiedDate());
        mapValue.put("lastModifiedByUserLogin", getLastModifiedByUserLogin());
        mapValue.put("lastUpdatedStamp", getLastUpdatedStamp());
        mapValue.put("lastUpdatedTxStamp", getLastUpdatedTxStamp());
        mapValue.put("createdStamp", getCreatedStamp());
        mapValue.put("createdTxStamp", getCreatedTxStamp());
        return mapValue;
    }


}
