package org.opentaps.base.entities;

/*
 * Copyright (c) Open Source Strategies, Inc.
 *
 * Opentaps is free software: you can redistribute it and/or modify it
 * under the terms of the GNU Affero General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Opentaps is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with Opentaps.  If not, see <http://www.gnu.org/licenses/>.
 */

// DO NOT EDIT THIS FILE!  THIS IS AUTO GENERATED AND WILL GET WRITTEN OVER PERIODICALLY WHEN THE DATA MODEL CHANGES
// EXTEND THIS CLASS INSTEAD.

import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;

import javolution.util.FastMap;

import org.opentaps.foundation.entity.Entity;
import org.opentaps.foundation.entity.EntityFieldInterface;
import org.opentaps.foundation.repository.RepositoryException;
import org.opentaps.foundation.repository.RepositoryInterface;
import javax.persistence.*;
import org.hibernate.search.annotations.*;
import java.lang.String;
import java.sql.Timestamp;

/**
 * Auto generated base entity PaymentGatewayPayPal.
 */
@javax.persistence.Entity
@Table(name="PAYMENT_GATEWAY_PAY_PAL")
public class PaymentGatewayPayPal extends Entity {
static {
java.util.Map<String, String> fields = new java.util.HashMap<String, String>();
        fields.put("paymentGatewayConfigId", "PAYMENT_GATEWAY_CONFIG_ID");
        fields.put("businessEmail", "BUSINESS_EMAIL");
        fields.put("notifyUrl", "NOTIFY_URL");
        fields.put("returnUrl", "RETURN_URL");
        fields.put("cancelReturnUrl", "CANCEL_RETURN_URL");
        fields.put("imageUrl", "IMAGE_URL");
        fields.put("confirmTemplate", "CONFIRM_TEMPLATE");
        fields.put("redirectUrl", "REDIRECT_URL");
        fields.put("confirmUrl", "CONFIRM_URL");
        fields.put("lastUpdatedStamp", "LAST_UPDATED_STAMP");
        fields.put("lastUpdatedTxStamp", "LAST_UPDATED_TX_STAMP");
        fields.put("createdStamp", "CREATED_STAMP");
        fields.put("createdTxStamp", "CREATED_TX_STAMP");
fieldMapColumns.put("PaymentGatewayPayPal", fields);
}
  public static enum Fields implements EntityFieldInterface<PaymentGatewayPayPal> {
    paymentGatewayConfigId("paymentGatewayConfigId"),
    businessEmail("businessEmail"),
    notifyUrl("notifyUrl"),
    returnUrl("returnUrl"),
    cancelReturnUrl("cancelReturnUrl"),
    imageUrl("imageUrl"),
    confirmTemplate("confirmTemplate"),
    redirectUrl("redirectUrl"),
    confirmUrl("confirmUrl"),
    lastUpdatedStamp("lastUpdatedStamp"),
    lastUpdatedTxStamp("lastUpdatedTxStamp"),
    createdStamp("createdStamp"),
    createdTxStamp("createdTxStamp");
    private final String fieldName;
    private Fields(String name) { fieldName = name; }
    /** {@inheritDoc} */
    public String getName() { return fieldName; }
    /** {@inheritDoc} */
    public String asc() { return fieldName + " ASC"; }
    /** {@inheritDoc} */
    public String desc() { return fieldName + " DESC"; }
  }

   @org.hibernate.annotations.GenericGenerator(name="PaymentGatewayPayPal_GEN",  strategy="org.opentaps.foundation.entity.hibernate.OpentapsIdentifierGenerator")
   @GeneratedValue(generator="PaymentGatewayPayPal_GEN")
   @Id
   @Column(name="PAYMENT_GATEWAY_CONFIG_ID")
   private String paymentGatewayConfigId;
   @Column(name="BUSINESS_EMAIL")
   private String businessEmail;
   @Column(name="NOTIFY_URL")
   private String notifyUrl;
   @Column(name="RETURN_URL")
   private String returnUrl;
   @Column(name="CANCEL_RETURN_URL")
   private String cancelReturnUrl;
   @Column(name="IMAGE_URL")
   private String imageUrl;
   @Column(name="CONFIRM_TEMPLATE")
   private String confirmTemplate;
   @Column(name="REDIRECT_URL")
   private String redirectUrl;
   @Column(name="CONFIRM_URL")
   private String confirmUrl;
   @Column(name="LAST_UPDATED_STAMP")
   private Timestamp lastUpdatedStamp;
   @Column(name="LAST_UPDATED_TX_STAMP")
   private Timestamp lastUpdatedTxStamp;
   @Column(name="CREATED_STAMP")
   private Timestamp createdStamp;
   @Column(name="CREATED_TX_STAMP")
   private Timestamp createdTxStamp;
   @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="PAYMENT_GATEWAY_CONFIG_ID", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private PaymentGatewayConfig paymentGatewayConfig = null;

  /**
   * Default constructor.
   */
  public PaymentGatewayPayPal() {
      super();
      this.baseEntityName = "PaymentGatewayPayPal";
      this.isView = false;
      
      this.primaryKeyNames = new ArrayList<String>();
      this.primaryKeyNames.add("paymentGatewayConfigId");
      this.allFieldsNames = new ArrayList<String>();
      this.allFieldsNames.add("paymentGatewayConfigId");this.allFieldsNames.add("businessEmail");this.allFieldsNames.add("notifyUrl");this.allFieldsNames.add("returnUrl");this.allFieldsNames.add("cancelReturnUrl");this.allFieldsNames.add("imageUrl");this.allFieldsNames.add("confirmTemplate");this.allFieldsNames.add("redirectUrl");this.allFieldsNames.add("confirmUrl");this.allFieldsNames.add("lastUpdatedStamp");this.allFieldsNames.add("lastUpdatedTxStamp");this.allFieldsNames.add("createdStamp");this.allFieldsNames.add("createdTxStamp");
      this.nonPrimaryKeyNames = new ArrayList<String>();
      this.nonPrimaryKeyNames.addAll(allFieldsNames);
      this.nonPrimaryKeyNames.removeAll(primaryKeyNames);
  }

  /**
   * Constructor with a repository.
   * @param repository a <code>RepositoryInterface</code> value
   */
  public PaymentGatewayPayPal(RepositoryInterface repository) {
      this();
      initRepository(repository);
  }

    /**
     * Auto generated value setter.
     * @param paymentGatewayConfigId the paymentGatewayConfigId to set
     */
    public void setPaymentGatewayConfigId(String paymentGatewayConfigId) {
        this.paymentGatewayConfigId = paymentGatewayConfigId;
    }
    /**
     * Auto generated value setter.
     * @param businessEmail the businessEmail to set
     */
    public void setBusinessEmail(String businessEmail) {
        this.businessEmail = businessEmail;
    }
    /**
     * Auto generated value setter.
     * @param notifyUrl the notifyUrl to set
     */
    public void setNotifyUrl(String notifyUrl) {
        this.notifyUrl = notifyUrl;
    }
    /**
     * Auto generated value setter.
     * @param returnUrl the returnUrl to set
     */
    public void setReturnUrl(String returnUrl) {
        this.returnUrl = returnUrl;
    }
    /**
     * Auto generated value setter.
     * @param cancelReturnUrl the cancelReturnUrl to set
     */
    public void setCancelReturnUrl(String cancelReturnUrl) {
        this.cancelReturnUrl = cancelReturnUrl;
    }
    /**
     * Auto generated value setter.
     * @param imageUrl the imageUrl to set
     */
    public void setImageUrl(String imageUrl) {
        this.imageUrl = imageUrl;
    }
    /**
     * Auto generated value setter.
     * @param confirmTemplate the confirmTemplate to set
     */
    public void setConfirmTemplate(String confirmTemplate) {
        this.confirmTemplate = confirmTemplate;
    }
    /**
     * Auto generated value setter.
     * @param redirectUrl the redirectUrl to set
     */
    public void setRedirectUrl(String redirectUrl) {
        this.redirectUrl = redirectUrl;
    }
    /**
     * Auto generated value setter.
     * @param confirmUrl the confirmUrl to set
     */
    public void setConfirmUrl(String confirmUrl) {
        this.confirmUrl = confirmUrl;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedStamp the lastUpdatedStamp to set
     */
    public void setLastUpdatedStamp(Timestamp lastUpdatedStamp) {
        this.lastUpdatedStamp = lastUpdatedStamp;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedTxStamp the lastUpdatedTxStamp to set
     */
    public void setLastUpdatedTxStamp(Timestamp lastUpdatedTxStamp) {
        this.lastUpdatedTxStamp = lastUpdatedTxStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdStamp the createdStamp to set
     */
    public void setCreatedStamp(Timestamp createdStamp) {
        this.createdStamp = createdStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdTxStamp the createdTxStamp to set
     */
    public void setCreatedTxStamp(Timestamp createdTxStamp) {
        this.createdTxStamp = createdTxStamp;
    }

    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPaymentGatewayConfigId() {
        return this.paymentGatewayConfigId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getBusinessEmail() {
        return this.businessEmail;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getNotifyUrl() {
        return this.notifyUrl;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getReturnUrl() {
        return this.returnUrl;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getCancelReturnUrl() {
        return this.cancelReturnUrl;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getImageUrl() {
        return this.imageUrl;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getConfirmTemplate() {
        return this.confirmTemplate;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getRedirectUrl() {
        return this.redirectUrl;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getConfirmUrl() {
        return this.confirmUrl;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedStamp() {
        return this.lastUpdatedStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedTxStamp() {
        return this.lastUpdatedTxStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedStamp() {
        return this.createdStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedTxStamp() {
        return this.createdTxStamp;
    }

    /**
     * Auto generated method that gets the related <code>PaymentGatewayConfig</code> by the relation named <code>PaymentGatewayConfig</code>.
     * @return the <code>PaymentGatewayConfig</code>
     * @throws RepositoryException if an error occurs
     */
    public PaymentGatewayConfig getPaymentGatewayConfig() throws RepositoryException {
        if (this.paymentGatewayConfig == null) {
            this.paymentGatewayConfig = getRelatedOne(PaymentGatewayConfig.class, "PaymentGatewayConfig");
        }
        return this.paymentGatewayConfig;
    }

    /**
     * Auto generated value setter.
     * @param paymentGatewayConfig the paymentGatewayConfig to set
    */
    public void setPaymentGatewayConfig(PaymentGatewayConfig paymentGatewayConfig) {
        this.paymentGatewayConfig = paymentGatewayConfig;
    }


    /** {@inheritDoc} */
    @Override
    public void fromMap(Map<String, Object> mapValue) {
        preInit();
        setPaymentGatewayConfigId((String) mapValue.get("paymentGatewayConfigId"));
        setBusinessEmail((String) mapValue.get("businessEmail"));
        setNotifyUrl((String) mapValue.get("notifyUrl"));
        setReturnUrl((String) mapValue.get("returnUrl"));
        setCancelReturnUrl((String) mapValue.get("cancelReturnUrl"));
        setImageUrl((String) mapValue.get("imageUrl"));
        setConfirmTemplate((String) mapValue.get("confirmTemplate"));
        setRedirectUrl((String) mapValue.get("redirectUrl"));
        setConfirmUrl((String) mapValue.get("confirmUrl"));
        setLastUpdatedStamp((Timestamp) mapValue.get("lastUpdatedStamp"));
        setLastUpdatedTxStamp((Timestamp) mapValue.get("lastUpdatedTxStamp"));
        setCreatedStamp((Timestamp) mapValue.get("createdStamp"));
        setCreatedTxStamp((Timestamp) mapValue.get("createdTxStamp"));
        postInit();
    }

    /** {@inheritDoc} */
    @Override
    public Map<String, Object> toMap() {
        Map<String, Object> mapValue = new FastMap<String, Object>();
        mapValue.put("paymentGatewayConfigId", getPaymentGatewayConfigId());
        mapValue.put("businessEmail", getBusinessEmail());
        mapValue.put("notifyUrl", getNotifyUrl());
        mapValue.put("returnUrl", getReturnUrl());
        mapValue.put("cancelReturnUrl", getCancelReturnUrl());
        mapValue.put("imageUrl", getImageUrl());
        mapValue.put("confirmTemplate", getConfirmTemplate());
        mapValue.put("redirectUrl", getRedirectUrl());
        mapValue.put("confirmUrl", getConfirmUrl());
        mapValue.put("lastUpdatedStamp", getLastUpdatedStamp());
        mapValue.put("lastUpdatedTxStamp", getLastUpdatedTxStamp());
        mapValue.put("createdStamp", getCreatedStamp());
        mapValue.put("createdTxStamp", getCreatedTxStamp());
        return mapValue;
    }


}
