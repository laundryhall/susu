package org.opentaps.base.entities;

/*
 * Copyright (c) Open Source Strategies, Inc.
 *
 * Opentaps is free software: you can redistribute it and/or modify it
 * under the terms of the GNU Affero General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Opentaps is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with Opentaps.  If not, see <http://www.gnu.org/licenses/>.
 */

// DO NOT EDIT THIS FILE!  THIS IS AUTO GENERATED AND WILL GET WRITTEN OVER PERIODICALLY WHEN THE DATA MODEL CHANGES
// EXTEND THIS CLASS INSTEAD.

import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;

import javolution.util.FastMap;

import org.opentaps.foundation.entity.Entity;
import org.opentaps.foundation.entity.EntityFieldInterface;
import org.opentaps.foundation.repository.RepositoryException;
import org.opentaps.foundation.repository.RepositoryInterface;
import javax.persistence.*;
import org.hibernate.search.annotations.*;
import java.lang.String;
import java.math.BigDecimal;
import java.sql.Timestamp;

/**
 * Auto generated base entity TimesheetAndTimeEntry.
 */
@javax.persistence.Entity
@NamedNativeQuery(name="selectTimesheetAndTimeEntrys", query="SELECT TE.FROM_DATE AS \"fromDate\",TE.COMMENTS AS \"comments\",TS.COMMENTS AS \"comments\",TS.TIMESHEET_ID AS \"timesheetId\",TS.PARTY_ID AS \"partyId\",TS.FROM_DATE AS \"fromDate\",TS.THRU_DATE AS \"thruDate\",TS.STATUS_ID AS \"statusId\",TS.APPROVED_BY_USER_LOGIN_ID AS \"approvedByUserLoginId\",TE.TIME_ENTRY_ID AS \"timeEntryId\",TE.RATE_TYPE_ID AS \"rateTypeId\",TE.WORK_EFFORT_ID AS \"workEffortId\",TE.INVOICE_ID AS \"invoiceId\",TE.INVOICE_ITEM_SEQ_ID AS \"invoiceItemSeqId\",TE.HOURS AS \"hours\" FROM TIMESHEET TS LEFT JOIN TIME_ENTRY TE ON TS.TIMESHEET_ID = TE.TIMESHEET_ID", resultSetMapping="TimesheetAndTimeEntryMapping")
@SqlResultSetMapping(name="TimesheetAndTimeEntryMapping", entities={
@EntityResult(entityClass=TimesheetAndTimeEntry.class, fields = {
@FieldResult(name="activityDate", column="activityDate")
,@FieldResult(name="entryComments", column="entryComments")
,@FieldResult(name="sheetComments", column="sheetComments")
,@FieldResult(name="timesheetId", column="timesheetId")
,@FieldResult(name="partyId", column="partyId")
,@FieldResult(name="fromDate", column="fromDate")
,@FieldResult(name="thruDate", column="thruDate")
,@FieldResult(name="statusId", column="statusId")
,@FieldResult(name="approvedByUserLoginId", column="approvedByUserLoginId")
,@FieldResult(name="timeEntryId", column="timeEntryId")
,@FieldResult(name="rateTypeId", column="rateTypeId")
,@FieldResult(name="workEffortId", column="workEffortId")
,@FieldResult(name="invoiceId", column="invoiceId")
,@FieldResult(name="invoiceItemSeqId", column="invoiceItemSeqId")
,@FieldResult(name="hours", column="hours")
})})
@org.hibernate.annotations.Entity(mutable = false)
@org.hibernate.annotations.AccessType("field")
public class TimesheetAndTimeEntry extends Entity {
static {
java.util.Map<String, String> fields = new java.util.HashMap<String, String>();
        fields.put("activityDate", "TE.FROM_DATE");
        fields.put("entryComments", "TE.COMMENTS");
        fields.put("sheetComments", "TS.COMMENTS");
        fields.put("timesheetId", "TS.TIMESHEET_ID");
        fields.put("partyId", "TS.PARTY_ID");
        fields.put("fromDate", "TS.FROM_DATE");
        fields.put("thruDate", "TS.THRU_DATE");
        fields.put("statusId", "TS.STATUS_ID");
        fields.put("approvedByUserLoginId", "TS.APPROVED_BY_USER_LOGIN_ID");
        fields.put("timeEntryId", "TE.TIME_ENTRY_ID");
        fields.put("rateTypeId", "TE.RATE_TYPE_ID");
        fields.put("workEffortId", "TE.WORK_EFFORT_ID");
        fields.put("invoiceId", "TE.INVOICE_ID");
        fields.put("invoiceItemSeqId", "TE.INVOICE_ITEM_SEQ_ID");
        fields.put("hours", "TE.HOURS");
fieldMapColumns.put("TimesheetAndTimeEntry", fields);
}
  public static enum Fields implements EntityFieldInterface<TimesheetAndTimeEntry> {
    activityDate("activityDate"),
    entryComments("entryComments"),
    sheetComments("sheetComments"),
    timesheetId("timesheetId"),
    partyId("partyId"),
    fromDate("fromDate"),
    thruDate("thruDate"),
    statusId("statusId"),
    approvedByUserLoginId("approvedByUserLoginId"),
    timeEntryId("timeEntryId"),
    rateTypeId("rateTypeId"),
    workEffortId("workEffortId"),
    invoiceId("invoiceId"),
    invoiceItemSeqId("invoiceItemSeqId"),
    hours("hours");
    private final String fieldName;
    private Fields(String name) { fieldName = name; }
    /** {@inheritDoc} */
    public String getName() { return fieldName; }
    /** {@inheritDoc} */
    public String asc() { return fieldName + " ASC"; }
    /** {@inheritDoc} */
    public String desc() { return fieldName + " DESC"; }
  }

    
   private Timestamp activityDate;
    
   private String entryComments;
    
   private String sheetComments;
    @Id
   private String timesheetId;
    
   private String partyId;
    
   private Timestamp fromDate;
    
   private Timestamp thruDate;
    
   private String statusId;
    
   private String approvedByUserLoginId;
    
   private String timeEntryId;
    
   private String rateTypeId;
    
   private String workEffortId;
    
   private String invoiceId;
    
   private String invoiceItemSeqId;
    
   private BigDecimal hours;
   @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="WORK_EFFORT_ID", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private WorkEffort workEffort = null;
   @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="INVOICE_ID", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private Invoice invoice = null;
   private transient InvoiceItem invoiceItem = null;
   @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="RATE_TYPE_ID", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private RateType rateType = null;

  /**
   * Default constructor.
   */
  public TimesheetAndTimeEntry() {
      super();
      this.baseEntityName = "TimesheetAndTimeEntry";
      this.isView = true;
      
      this.primaryKeyNames = new ArrayList<String>();
      this.primaryKeyNames.add("timesheetId");this.primaryKeyNames.add("timeEntryId");
      this.allFieldsNames = new ArrayList<String>();
      this.allFieldsNames.add("activityDate");this.allFieldsNames.add("entryComments");this.allFieldsNames.add("sheetComments");this.allFieldsNames.add("timesheetId");this.allFieldsNames.add("partyId");this.allFieldsNames.add("fromDate");this.allFieldsNames.add("thruDate");this.allFieldsNames.add("statusId");this.allFieldsNames.add("approvedByUserLoginId");this.allFieldsNames.add("timeEntryId");this.allFieldsNames.add("rateTypeId");this.allFieldsNames.add("workEffortId");this.allFieldsNames.add("invoiceId");this.allFieldsNames.add("invoiceItemSeqId");this.allFieldsNames.add("hours");
      this.nonPrimaryKeyNames = new ArrayList<String>();
      this.nonPrimaryKeyNames.addAll(allFieldsNames);
      this.nonPrimaryKeyNames.removeAll(primaryKeyNames);
  }

  /**
   * Constructor with a repository.
   * @param repository a <code>RepositoryInterface</code> value
   */
  public TimesheetAndTimeEntry(RepositoryInterface repository) {
      this();
      initRepository(repository);
  }

    /**
     * This is a view-entity, so the setter methods will be private to this class and for use in its fromMap constructor only
     */
    /**
     * Auto generated value setter.
     * @param activityDate the activityDate to set
     */
    public void setActivityDate(Timestamp activityDate) {
        this.activityDate = activityDate;
    }
    /**
     * Auto generated value setter.
     * @param entryComments the entryComments to set
     */
    public void setEntryComments(String entryComments) {
        this.entryComments = entryComments;
    }
    /**
     * Auto generated value setter.
     * @param sheetComments the sheetComments to set
     */
    public void setSheetComments(String sheetComments) {
        this.sheetComments = sheetComments;
    }
    /**
     * Auto generated value setter.
     * @param timesheetId the timesheetId to set
     */
    public void setTimesheetId(String timesheetId) {
        this.timesheetId = timesheetId;
    }
    /**
     * Auto generated value setter.
     * @param partyId the partyId to set
     */
    public void setPartyId(String partyId) {
        this.partyId = partyId;
    }
    /**
     * Auto generated value setter.
     * @param fromDate the fromDate to set
     */
    public void setFromDate(Timestamp fromDate) {
        this.fromDate = fromDate;
    }
    /**
     * Auto generated value setter.
     * @param thruDate the thruDate to set
     */
    public void setThruDate(Timestamp thruDate) {
        this.thruDate = thruDate;
    }
    /**
     * Auto generated value setter.
     * @param statusId the statusId to set
     */
    public void setStatusId(String statusId) {
        this.statusId = statusId;
    }
    /**
     * Auto generated value setter.
     * @param approvedByUserLoginId the approvedByUserLoginId to set
     */
    public void setApprovedByUserLoginId(String approvedByUserLoginId) {
        this.approvedByUserLoginId = approvedByUserLoginId;
    }
    /**
     * Auto generated value setter.
     * @param timeEntryId the timeEntryId to set
     */
    public void setTimeEntryId(String timeEntryId) {
        this.timeEntryId = timeEntryId;
    }
    /**
     * Auto generated value setter.
     * @param rateTypeId the rateTypeId to set
     */
    public void setRateTypeId(String rateTypeId) {
        this.rateTypeId = rateTypeId;
    }
    /**
     * Auto generated value setter.
     * @param workEffortId the workEffortId to set
     */
    public void setWorkEffortId(String workEffortId) {
        this.workEffortId = workEffortId;
    }
    /**
     * Auto generated value setter.
     * @param invoiceId the invoiceId to set
     */
    public void setInvoiceId(String invoiceId) {
        this.invoiceId = invoiceId;
    }
    /**
     * Auto generated value setter.
     * @param invoiceItemSeqId the invoiceItemSeqId to set
     */
    public void setInvoiceItemSeqId(String invoiceItemSeqId) {
        this.invoiceItemSeqId = invoiceItemSeqId;
    }
    /**
     * Auto generated value setter.
     * @param hours the hours to set
     */
    public void setHours(BigDecimal hours) {
        this.hours = hours;
    }

    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getActivityDate() {
        return this.activityDate;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getEntryComments() {
        return this.entryComments;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getSheetComments() {
        return this.sheetComments;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getTimesheetId() {
        return this.timesheetId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPartyId() {
        return this.partyId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getFromDate() {
        return this.fromDate;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getThruDate() {
        return this.thruDate;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getStatusId() {
        return this.statusId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getApprovedByUserLoginId() {
        return this.approvedByUserLoginId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getTimeEntryId() {
        return this.timeEntryId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getRateTypeId() {
        return this.rateTypeId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getWorkEffortId() {
        return this.workEffortId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getInvoiceId() {
        return this.invoiceId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getInvoiceItemSeqId() {
        return this.invoiceItemSeqId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getHours() {
        return this.hours;
    }

    /**
     * Auto generated method that gets the related <code>WorkEffort</code> by the relation named <code>WorkEffort</code>.
     * @return the <code>WorkEffort</code>
     * @throws RepositoryException if an error occurs
     */
    public WorkEffort getWorkEffort() throws RepositoryException {
        if (this.workEffort == null) {
            this.workEffort = getRelatedOne(WorkEffort.class, "WorkEffort");
        }
        return this.workEffort;
    }
    /**
     * Auto generated method that gets the related <code>Invoice</code> by the relation named <code>Invoice</code>.
     * @return the <code>Invoice</code>
     * @throws RepositoryException if an error occurs
     */
    public Invoice getInvoice() throws RepositoryException {
        if (this.invoice == null) {
            this.invoice = getRelatedOne(Invoice.class, "Invoice");
        }
        return this.invoice;
    }
    /**
     * Auto generated method that gets the related <code>InvoiceItem</code> by the relation named <code>InvoiceItem</code>.
     * @return the <code>InvoiceItem</code>
     * @throws RepositoryException if an error occurs
     */
    public InvoiceItem getInvoiceItem() throws RepositoryException {
        if (this.invoiceItem == null) {
            this.invoiceItem = getRelatedOne(InvoiceItem.class, "InvoiceItem");
        }
        return this.invoiceItem;
    }
    /**
     * Auto generated method that gets the related <code>RateType</code> by the relation named <code>RateType</code>.
     * @return the <code>RateType</code>
     * @throws RepositoryException if an error occurs
     */
    public RateType getRateType() throws RepositoryException {
        if (this.rateType == null) {
            this.rateType = getRelatedOne(RateType.class, "RateType");
        }
        return this.rateType;
    }

    /**
     * Auto generated value setter.
     * @param workEffort the workEffort to set
    */
    public void setWorkEffort(WorkEffort workEffort) {
        this.workEffort = workEffort;
    }
    /**
     * Auto generated value setter.
     * @param invoice the invoice to set
    */
    public void setInvoice(Invoice invoice) {
        this.invoice = invoice;
    }
    /**
     * Auto generated value setter.
     * @param invoiceItem the invoiceItem to set
    */
    public void setInvoiceItem(InvoiceItem invoiceItem) {
        this.invoiceItem = invoiceItem;
    }
    /**
     * Auto generated value setter.
     * @param rateType the rateType to set
    */
    public void setRateType(RateType rateType) {
        this.rateType = rateType;
    }


    /** {@inheritDoc} */
    @Override
    public void fromMap(Map<String, Object> mapValue) {
        preInit();
        setActivityDate((Timestamp) mapValue.get("activityDate"));
        setEntryComments((String) mapValue.get("entryComments"));
        setSheetComments((String) mapValue.get("sheetComments"));
        setTimesheetId((String) mapValue.get("timesheetId"));
        setPartyId((String) mapValue.get("partyId"));
        setFromDate((Timestamp) mapValue.get("fromDate"));
        setThruDate((Timestamp) mapValue.get("thruDate"));
        setStatusId((String) mapValue.get("statusId"));
        setApprovedByUserLoginId((String) mapValue.get("approvedByUserLoginId"));
        setTimeEntryId((String) mapValue.get("timeEntryId"));
        setRateTypeId((String) mapValue.get("rateTypeId"));
        setWorkEffortId((String) mapValue.get("workEffortId"));
        setInvoiceId((String) mapValue.get("invoiceId"));
        setInvoiceItemSeqId((String) mapValue.get("invoiceItemSeqId"));
        setHours(convertToBigDecimal(mapValue.get("hours")));
        postInit();
    }

    /** {@inheritDoc} */
    @Override
    public Map<String, Object> toMap() {
        Map<String, Object> mapValue = new FastMap<String, Object>();
        mapValue.put("activityDate", getActivityDate());
        mapValue.put("entryComments", getEntryComments());
        mapValue.put("sheetComments", getSheetComments());
        mapValue.put("timesheetId", getTimesheetId());
        mapValue.put("partyId", getPartyId());
        mapValue.put("fromDate", getFromDate());
        mapValue.put("thruDate", getThruDate());
        mapValue.put("statusId", getStatusId());
        mapValue.put("approvedByUserLoginId", getApprovedByUserLoginId());
        mapValue.put("timeEntryId", getTimeEntryId());
        mapValue.put("rateTypeId", getRateTypeId());
        mapValue.put("workEffortId", getWorkEffortId());
        mapValue.put("invoiceId", getInvoiceId());
        mapValue.put("invoiceItemSeqId", getInvoiceItemSeqId());
        mapValue.put("hours", getHours());
        return mapValue;
    }


}
