package org.opentaps.base.entities;

/*
 * Copyright (c) Open Source Strategies, Inc.
 *
 * Opentaps is free software: you can redistribute it and/or modify it
 * under the terms of the GNU Affero General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Opentaps is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with Opentaps.  If not, see <http://www.gnu.org/licenses/>.
 */

// DO NOT EDIT THIS FILE!  THIS IS AUTO GENERATED AND WILL GET WRITTEN OVER PERIODICALLY WHEN THE DATA MODEL CHANGES
// EXTEND THIS CLASS INSTEAD.

import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;

import javolution.util.FastMap;

import org.opentaps.foundation.entity.Entity;
import org.opentaps.foundation.entity.EntityFieldInterface;
import org.opentaps.foundation.repository.RepositoryException;
import org.opentaps.foundation.repository.RepositoryInterface;
import javax.persistence.*;
import org.hibernate.search.annotations.*;
import java.lang.String;
import java.math.BigDecimal;
import java.sql.Timestamp;

/**
 * Auto generated base entity OrderReportGroupByProduct.
 */
@javax.persistence.Entity
@NamedNativeQuery(name="selectOrderReportGroupByProducts", query="SELECT OI.PRODUCT_ID AS \"productId\",OH.ORDER_DATE AS \"orderDate\",OH.STATUS_ID AS \"statusId\",OI.STATUS_ID AS \"statusId\",OH.ORDER_TYPE_ID AS \"orderTypeId\",OI.QUANTITY AS \"quantity\",OI.UNIT_PRICE AS \"unitPrice\" FROM ORDER_HEADER OH INNER JOIN ORDER_ITEM OI ON OH.ORDER_ID = OI.ORDER_ID", resultSetMapping="OrderReportGroupByProductMapping")
@SqlResultSetMapping(name="OrderReportGroupByProductMapping", entities={
@EntityResult(entityClass=OrderReportGroupByProduct.class, fields = {
@FieldResult(name="productId", column="productId")
,@FieldResult(name="orderDate", column="orderDate")
,@FieldResult(name="orderStatusId", column="orderStatusId")
,@FieldResult(name="orderItemStatusId", column="orderItemStatusId")
,@FieldResult(name="orderTypeId", column="orderTypeId")
,@FieldResult(name="quantity", column="quantity")
,@FieldResult(name="unitPrice", column="unitPrice")
})})
@org.hibernate.annotations.Entity(mutable = false)
@org.hibernate.annotations.AccessType("field")
public class OrderReportGroupByProduct extends Entity {
static {
java.util.Map<String, String> fields = new java.util.HashMap<String, String>();
        fields.put("productId", "OI.PRODUCT_ID");
        fields.put("orderDate", "OH.ORDER_DATE");
        fields.put("orderStatusId", "OH.STATUS_ID");
        fields.put("orderItemStatusId", "OI.STATUS_ID");
        fields.put("orderTypeId", "OH.ORDER_TYPE_ID");
        fields.put("quantity", "OI.QUANTITY");
        fields.put("unitPrice", "OI.UNIT_PRICE");
fieldMapColumns.put("OrderReportGroupByProduct", fields);
}
  public static enum Fields implements EntityFieldInterface<OrderReportGroupByProduct> {
    productId("productId"),
    orderDate("orderDate"),
    orderStatusId("orderStatusId"),
    orderItemStatusId("orderItemStatusId"),
    orderTypeId("orderTypeId"),
    quantity("quantity"),
    unitPrice("unitPrice");
    private final String fieldName;
    private Fields(String name) { fieldName = name; }
    /** {@inheritDoc} */
    public String getName() { return fieldName; }
    /** {@inheritDoc} */
    public String asc() { return fieldName + " ASC"; }
    /** {@inheritDoc} */
    public String desc() { return fieldName + " DESC"; }
  }

    @Id
   private String productId;
    
   private Timestamp orderDate;
    
   private String orderStatusId;
    
   private String orderItemStatusId;
    
   private String orderTypeId;
    
   private BigDecimal quantity;
    
   private BigDecimal unitPrice;

  /**
   * Default constructor.
   */
  public OrderReportGroupByProduct() {
      super();
      this.baseEntityName = "OrderReportGroupByProduct";
      this.isView = true;
      
      this.primaryKeyNames = new ArrayList<String>();
      
      this.allFieldsNames = new ArrayList<String>();
      this.allFieldsNames.add("productId");this.allFieldsNames.add("orderDate");this.allFieldsNames.add("orderStatusId");this.allFieldsNames.add("orderItemStatusId");this.allFieldsNames.add("orderTypeId");this.allFieldsNames.add("quantity");this.allFieldsNames.add("unitPrice");
      this.nonPrimaryKeyNames = new ArrayList<String>();
      this.nonPrimaryKeyNames.addAll(allFieldsNames);
      this.nonPrimaryKeyNames.removeAll(primaryKeyNames);
  }

  /**
   * Constructor with a repository.
   * @param repository a <code>RepositoryInterface</code> value
   */
  public OrderReportGroupByProduct(RepositoryInterface repository) {
      this();
      initRepository(repository);
  }

    /**
     * This is a view-entity, so the setter methods will be private to this class and for use in its fromMap constructor only
     */
    /**
     * Auto generated value setter.
     * @param productId the productId to set
     */
    public void setProductId(String productId) {
        this.productId = productId;
    }
    /**
     * Auto generated value setter.
     * @param orderDate the orderDate to set
     */
    public void setOrderDate(Timestamp orderDate) {
        this.orderDate = orderDate;
    }
    /**
     * Auto generated value setter.
     * @param orderStatusId the orderStatusId to set
     */
    public void setOrderStatusId(String orderStatusId) {
        this.orderStatusId = orderStatusId;
    }
    /**
     * Auto generated value setter.
     * @param orderItemStatusId the orderItemStatusId to set
     */
    public void setOrderItemStatusId(String orderItemStatusId) {
        this.orderItemStatusId = orderItemStatusId;
    }
    /**
     * Auto generated value setter.
     * @param orderTypeId the orderTypeId to set
     */
    public void setOrderTypeId(String orderTypeId) {
        this.orderTypeId = orderTypeId;
    }
    /**
     * Auto generated value setter.
     * @param quantity the quantity to set
     */
    public void setQuantity(BigDecimal quantity) {
        this.quantity = quantity;
    }
    /**
     * Auto generated value setter.
     * @param unitPrice the unitPrice to set
     */
    public void setUnitPrice(BigDecimal unitPrice) {
        this.unitPrice = unitPrice;
    }

    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getProductId() {
        return this.productId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getOrderDate() {
        return this.orderDate;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getOrderStatusId() {
        return this.orderStatusId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getOrderItemStatusId() {
        return this.orderItemStatusId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getOrderTypeId() {
        return this.orderTypeId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getQuantity() {
        return this.quantity;
    }
    /**
     * Auto generated value accessor.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getUnitPrice() {
        return this.unitPrice;
    }




    /** {@inheritDoc} */
    @Override
    public void fromMap(Map<String, Object> mapValue) {
        preInit();
        setProductId((String) mapValue.get("productId"));
        setOrderDate((Timestamp) mapValue.get("orderDate"));
        setOrderStatusId((String) mapValue.get("orderStatusId"));
        setOrderItemStatusId((String) mapValue.get("orderItemStatusId"));
        setOrderTypeId((String) mapValue.get("orderTypeId"));
        setQuantity(convertToBigDecimal(mapValue.get("quantity")));
        setUnitPrice(convertToBigDecimal(mapValue.get("unitPrice")));
        postInit();
    }

    /** {@inheritDoc} */
    @Override
    public Map<String, Object> toMap() {
        Map<String, Object> mapValue = new FastMap<String, Object>();
        mapValue.put("productId", getProductId());
        mapValue.put("orderDate", getOrderDate());
        mapValue.put("orderStatusId", getOrderStatusId());
        mapValue.put("orderItemStatusId", getOrderItemStatusId());
        mapValue.put("orderTypeId", getOrderTypeId());
        mapValue.put("quantity", getQuantity());
        mapValue.put("unitPrice", getUnitPrice());
        return mapValue;
    }


}
