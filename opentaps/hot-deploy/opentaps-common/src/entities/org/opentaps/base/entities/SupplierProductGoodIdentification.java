package org.opentaps.base.entities;

/*
 * Copyright (c) Open Source Strategies, Inc.
 *
 * Opentaps is free software: you can redistribute it and/or modify it
 * under the terms of the GNU Affero General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Opentaps is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with Opentaps.  If not, see <http://www.gnu.org/licenses/>.
 */

// DO NOT EDIT THIS FILE!  THIS IS AUTO GENERATED AND WILL GET WRITTEN OVER PERIODICALLY WHEN THE DATA MODEL CHANGES
// EXTEND THIS CLASS INSTEAD.

import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;

import javolution.util.FastMap;

import org.opentaps.foundation.entity.Entity;
import org.opentaps.foundation.entity.EntityFieldInterface;
import org.opentaps.foundation.repository.RepositoryException;
import org.opentaps.foundation.repository.RepositoryInterface;
import javax.persistence.*;
import org.hibernate.search.annotations.*;
import java.lang.String;
import java.math.BigDecimal;
import java.sql.Timestamp;

/**
 * Auto generated base entity SupplierProductGoodIdentification.
 */
@javax.persistence.Entity
@NamedNativeQuery(name="selectSupplierProductGoodIdentifications", query="SELECT SP.PRODUCT_ID AS \"productId\",SP.PARTY_ID AS \"partyId\",SP.AVAILABLE_FROM_DATE AS \"availableFromDate\",SP.AVAILABLE_THRU_DATE AS \"availableThruDate\",SP.SUPPLIER_PREF_ORDER_ID AS \"supplierPrefOrderId\",SP.SUPPLIER_RATING_TYPE_ID AS \"supplierRatingTypeId\",SP.STANDARD_LEAD_TIME_DAYS AS \"standardLeadTimeDays\",SP.MINIMUM_ORDER_QUANTITY AS \"minimumOrderQuantity\",SP.ORDER_QTY_INCREMENTS AS \"orderQtyIncrements\",SP.UNITS_INCLUDED AS \"unitsIncluded\",SP.QUANTITY_UOM_ID AS \"quantityUomId\",SP.AGREEMENT_ID AS \"agreementId\",SP.AGREEMENT_ITEM_SEQ_ID AS \"agreementItemSeqId\",SP.LAST_PRICE AS \"lastPrice\",SP.CURRENCY_UOM_ID AS \"currencyUomId\",SP.SUPPLIER_PRODUCT_NAME AS \"supplierProductName\",SP.SUPPLIER_PRODUCT_ID AS \"supplierProductId\",SP.CAN_DROP_SHIP AS \"canDropShip\",SP.SUPPLIER_COMMISSION_PERC AS \"supplierCommissionPerc\",SP.COMMENTS AS \"comments\",GI.GOOD_IDENTIFICATION_TYPE_ID AS \"goodIdentificationTypeId\",GI.ID_VALUE AS \"idValue\" FROM SUPPLIER_PRODUCT SP LEFT JOIN GOOD_IDENTIFICATION GI ON SP.PRODUCT_ID = GI.PRODUCT_ID", resultSetMapping="SupplierProductGoodIdentificationMapping")
@SqlResultSetMapping(name="SupplierProductGoodIdentificationMapping", entities={
@EntityResult(entityClass=SupplierProductGoodIdentification.class, fields = {
@FieldResult(name="productId", column="productId")
,@FieldResult(name="partyId", column="partyId")
,@FieldResult(name="availableFromDate", column="availableFromDate")
,@FieldResult(name="availableThruDate", column="availableThruDate")
,@FieldResult(name="supplierPrefOrderId", column="supplierPrefOrderId")
,@FieldResult(name="supplierRatingTypeId", column="supplierRatingTypeId")
,@FieldResult(name="standardLeadTimeDays", column="standardLeadTimeDays")
,@FieldResult(name="minimumOrderQuantity", column="minimumOrderQuantity")
,@FieldResult(name="orderQtyIncrements", column="orderQtyIncrements")
,@FieldResult(name="unitsIncluded", column="unitsIncluded")
,@FieldResult(name="quantityUomId", column="quantityUomId")
,@FieldResult(name="agreementId", column="agreementId")
,@FieldResult(name="agreementItemSeqId", column="agreementItemSeqId")
,@FieldResult(name="lastPrice", column="lastPrice")
,@FieldResult(name="currencyUomId", column="currencyUomId")
,@FieldResult(name="supplierProductName", column="supplierProductName")
,@FieldResult(name="supplierProductId", column="supplierProductId")
,@FieldResult(name="canDropShip", column="canDropShip")
,@FieldResult(name="supplierCommissionPerc", column="supplierCommissionPerc")
,@FieldResult(name="comments", column="comments")
,@FieldResult(name="goodIdentificationTypeId", column="goodIdentificationTypeId")
,@FieldResult(name="idValue", column="idValue")
})})
@org.hibernate.annotations.Entity(mutable = false)
@org.hibernate.annotations.AccessType("field")
public class SupplierProductGoodIdentification extends Entity {
static {
java.util.Map<String, String> fields = new java.util.HashMap<String, String>();
        fields.put("productId", "SP.PRODUCT_ID");
        fields.put("partyId", "SP.PARTY_ID");
        fields.put("availableFromDate", "SP.AVAILABLE_FROM_DATE");
        fields.put("availableThruDate", "SP.AVAILABLE_THRU_DATE");
        fields.put("supplierPrefOrderId", "SP.SUPPLIER_PREF_ORDER_ID");
        fields.put("supplierRatingTypeId", "SP.SUPPLIER_RATING_TYPE_ID");
        fields.put("standardLeadTimeDays", "SP.STANDARD_LEAD_TIME_DAYS");
        fields.put("minimumOrderQuantity", "SP.MINIMUM_ORDER_QUANTITY");
        fields.put("orderQtyIncrements", "SP.ORDER_QTY_INCREMENTS");
        fields.put("unitsIncluded", "SP.UNITS_INCLUDED");
        fields.put("quantityUomId", "SP.QUANTITY_UOM_ID");
        fields.put("agreementId", "SP.AGREEMENT_ID");
        fields.put("agreementItemSeqId", "SP.AGREEMENT_ITEM_SEQ_ID");
        fields.put("lastPrice", "SP.LAST_PRICE");
        fields.put("currencyUomId", "SP.CURRENCY_UOM_ID");
        fields.put("supplierProductName", "SP.SUPPLIER_PRODUCT_NAME");
        fields.put("supplierProductId", "SP.SUPPLIER_PRODUCT_ID");
        fields.put("canDropShip", "SP.CAN_DROP_SHIP");
        fields.put("supplierCommissionPerc", "SP.SUPPLIER_COMMISSION_PERC");
        fields.put("comments", "SP.COMMENTS");
        fields.put("goodIdentificationTypeId", "GI.GOOD_IDENTIFICATION_TYPE_ID");
        fields.put("idValue", "GI.ID_VALUE");
fieldMapColumns.put("SupplierProductGoodIdentification", fields);
}
  public static enum Fields implements EntityFieldInterface<SupplierProductGoodIdentification> {
    productId("productId"),
    partyId("partyId"),
    availableFromDate("availableFromDate"),
    availableThruDate("availableThruDate"),
    supplierPrefOrderId("supplierPrefOrderId"),
    supplierRatingTypeId("supplierRatingTypeId"),
    standardLeadTimeDays("standardLeadTimeDays"),
    minimumOrderQuantity("minimumOrderQuantity"),
    orderQtyIncrements("orderQtyIncrements"),
    unitsIncluded("unitsIncluded"),
    quantityUomId("quantityUomId"),
    agreementId("agreementId"),
    agreementItemSeqId("agreementItemSeqId"),
    lastPrice("lastPrice"),
    currencyUomId("currencyUomId"),
    supplierProductName("supplierProductName"),
    supplierProductId("supplierProductId"),
    canDropShip("canDropShip"),
    supplierCommissionPerc("supplierCommissionPerc"),
    comments("comments"),
    goodIdentificationTypeId("goodIdentificationTypeId"),
    idValue("idValue");
    private final String fieldName;
    private Fields(String name) { fieldName = name; }
    /** {@inheritDoc} */
    public String getName() { return fieldName; }
    /** {@inheritDoc} */
    public String asc() { return fieldName + " ASC"; }
    /** {@inheritDoc} */
    public String desc() { return fieldName + " DESC"; }
  }

    @Id
   private String productId;
    
   private String partyId;
    
   private Timestamp availableFromDate;
    
   private Timestamp availableThruDate;
    
   private String supplierPrefOrderId;
    
   private String supplierRatingTypeId;
    
   private BigDecimal standardLeadTimeDays;
    
   private BigDecimal minimumOrderQuantity;
    
   private BigDecimal orderQtyIncrements;
    
   private BigDecimal unitsIncluded;
    
   private String quantityUomId;
    
   private String agreementId;
    
   private String agreementItemSeqId;
    
   private BigDecimal lastPrice;
    
   private String currencyUomId;
    
   private String supplierProductName;
    
   private String supplierProductId;
    
   private String canDropShip;
    
   private BigDecimal supplierCommissionPerc;
    
   private String comments;
    
   private String goodIdentificationTypeId;
    
   private String idValue;
   @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="PRODUCT_ID", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private Product product = null;

  /**
   * Default constructor.
   */
  public SupplierProductGoodIdentification() {
      super();
      this.baseEntityName = "SupplierProductGoodIdentification";
      this.isView = true;
      
      this.primaryKeyNames = new ArrayList<String>();
      this.primaryKeyNames.add("productId");this.primaryKeyNames.add("partyId");this.primaryKeyNames.add("availableFromDate");this.primaryKeyNames.add("minimumOrderQuantity");this.primaryKeyNames.add("currencyUomId");this.primaryKeyNames.add("goodIdentificationTypeId");
      this.allFieldsNames = new ArrayList<String>();
      this.allFieldsNames.add("productId");this.allFieldsNames.add("partyId");this.allFieldsNames.add("availableFromDate");this.allFieldsNames.add("availableThruDate");this.allFieldsNames.add("supplierPrefOrderId");this.allFieldsNames.add("supplierRatingTypeId");this.allFieldsNames.add("standardLeadTimeDays");this.allFieldsNames.add("minimumOrderQuantity");this.allFieldsNames.add("orderQtyIncrements");this.allFieldsNames.add("unitsIncluded");this.allFieldsNames.add("quantityUomId");this.allFieldsNames.add("agreementId");this.allFieldsNames.add("agreementItemSeqId");this.allFieldsNames.add("lastPrice");this.allFieldsNames.add("currencyUomId");this.allFieldsNames.add("supplierProductName");this.allFieldsNames.add("supplierProductId");this.allFieldsNames.add("canDropShip");this.allFieldsNames.add("supplierCommissionPerc");this.allFieldsNames.add("comments");this.allFieldsNames.add("goodIdentificationTypeId");this.allFieldsNames.add("idValue");
      this.nonPrimaryKeyNames = new ArrayList<String>();
      this.nonPrimaryKeyNames.addAll(allFieldsNames);
      this.nonPrimaryKeyNames.removeAll(primaryKeyNames);
  }

  /**
   * Constructor with a repository.
   * @param repository a <code>RepositoryInterface</code> value
   */
  public SupplierProductGoodIdentification(RepositoryInterface repository) {
      this();
      initRepository(repository);
  }

    /**
     * This is a view-entity, so the setter methods will be private to this class and for use in its fromMap constructor only
     */
    /**
     * Auto generated value setter.
     * @param productId the productId to set
     */
    public void setProductId(String productId) {
        this.productId = productId;
    }
    /**
     * Auto generated value setter.
     * @param partyId the partyId to set
     */
    public void setPartyId(String partyId) {
        this.partyId = partyId;
    }
    /**
     * Auto generated value setter.
     * @param availableFromDate the availableFromDate to set
     */
    public void setAvailableFromDate(Timestamp availableFromDate) {
        this.availableFromDate = availableFromDate;
    }
    /**
     * Auto generated value setter.
     * @param availableThruDate the availableThruDate to set
     */
    public void setAvailableThruDate(Timestamp availableThruDate) {
        this.availableThruDate = availableThruDate;
    }
    /**
     * Auto generated value setter.
     * @param supplierPrefOrderId the supplierPrefOrderId to set
     */
    public void setSupplierPrefOrderId(String supplierPrefOrderId) {
        this.supplierPrefOrderId = supplierPrefOrderId;
    }
    /**
     * Auto generated value setter.
     * @param supplierRatingTypeId the supplierRatingTypeId to set
     */
    public void setSupplierRatingTypeId(String supplierRatingTypeId) {
        this.supplierRatingTypeId = supplierRatingTypeId;
    }
    /**
     * Auto generated value setter.
     * @param standardLeadTimeDays the standardLeadTimeDays to set
     */
    public void setStandardLeadTimeDays(BigDecimal standardLeadTimeDays) {
        this.standardLeadTimeDays = standardLeadTimeDays;
    }
    /**
     * Auto generated value setter.
     * @param minimumOrderQuantity the minimumOrderQuantity to set
     */
    public void setMinimumOrderQuantity(BigDecimal minimumOrderQuantity) {
        this.minimumOrderQuantity = minimumOrderQuantity;
    }
    /**
     * Auto generated value setter.
     * @param orderQtyIncrements the orderQtyIncrements to set
     */
    public void setOrderQtyIncrements(BigDecimal orderQtyIncrements) {
        this.orderQtyIncrements = orderQtyIncrements;
    }
    /**
     * Auto generated value setter.
     * @param unitsIncluded the unitsIncluded to set
     */
    public void setUnitsIncluded(BigDecimal unitsIncluded) {
        this.unitsIncluded = unitsIncluded;
    }
    /**
     * Auto generated value setter.
     * @param quantityUomId the quantityUomId to set
     */
    public void setQuantityUomId(String quantityUomId) {
        this.quantityUomId = quantityUomId;
    }
    /**
     * Auto generated value setter.
     * @param agreementId the agreementId to set
     */
    public void setAgreementId(String agreementId) {
        this.agreementId = agreementId;
    }
    /**
     * Auto generated value setter.
     * @param agreementItemSeqId the agreementItemSeqId to set
     */
    public void setAgreementItemSeqId(String agreementItemSeqId) {
        this.agreementItemSeqId = agreementItemSeqId;
    }
    /**
     * Auto generated value setter.
     * @param lastPrice the lastPrice to set
     */
    public void setLastPrice(BigDecimal lastPrice) {
        this.lastPrice = lastPrice;
    }
    /**
     * Auto generated value setter.
     * @param currencyUomId the currencyUomId to set
     */
    public void setCurrencyUomId(String currencyUomId) {
        this.currencyUomId = currencyUomId;
    }
    /**
     * Auto generated value setter.
     * @param supplierProductName the supplierProductName to set
     */
    public void setSupplierProductName(String supplierProductName) {
        this.supplierProductName = supplierProductName;
    }
    /**
     * Auto generated value setter.
     * @param supplierProductId the supplierProductId to set
     */
    public void setSupplierProductId(String supplierProductId) {
        this.supplierProductId = supplierProductId;
    }
    /**
     * Auto generated value setter.
     * @param canDropShip the canDropShip to set
     */
    public void setCanDropShip(String canDropShip) {
        this.canDropShip = canDropShip;
    }
    /**
     * Auto generated value setter.
     * @param supplierCommissionPerc the supplierCommissionPerc to set
     */
    public void setSupplierCommissionPerc(BigDecimal supplierCommissionPerc) {
        this.supplierCommissionPerc = supplierCommissionPerc;
    }
    /**
     * Auto generated value setter.
     * @param comments the comments to set
     */
    public void setComments(String comments) {
        this.comments = comments;
    }
    /**
     * Auto generated value setter.
     * @param goodIdentificationTypeId the goodIdentificationTypeId to set
     */
    public void setGoodIdentificationTypeId(String goodIdentificationTypeId) {
        this.goodIdentificationTypeId = goodIdentificationTypeId;
    }
    /**
     * Auto generated value setter.
     * @param idValue the idValue to set
     */
    public void setIdValue(String idValue) {
        this.idValue = idValue;
    }

    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getProductId() {
        return this.productId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPartyId() {
        return this.partyId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getAvailableFromDate() {
        return this.availableFromDate;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getAvailableThruDate() {
        return this.availableThruDate;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getSupplierPrefOrderId() {
        return this.supplierPrefOrderId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getSupplierRatingTypeId() {
        return this.supplierRatingTypeId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getStandardLeadTimeDays() {
        return this.standardLeadTimeDays;
    }
    /**
     * Auto generated value accessor.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getMinimumOrderQuantity() {
        return this.minimumOrderQuantity;
    }
    /**
     * Auto generated value accessor.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getOrderQtyIncrements() {
        return this.orderQtyIncrements;
    }
    /**
     * Auto generated value accessor.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getUnitsIncluded() {
        return this.unitsIncluded;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getQuantityUomId() {
        return this.quantityUomId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getAgreementId() {
        return this.agreementId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getAgreementItemSeqId() {
        return this.agreementItemSeqId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getLastPrice() {
        return this.lastPrice;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getCurrencyUomId() {
        return this.currencyUomId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getSupplierProductName() {
        return this.supplierProductName;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getSupplierProductId() {
        return this.supplierProductId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getCanDropShip() {
        return this.canDropShip;
    }
    /**
     * Auto generated value accessor.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getSupplierCommissionPerc() {
        return this.supplierCommissionPerc;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getComments() {
        return this.comments;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getGoodIdentificationTypeId() {
        return this.goodIdentificationTypeId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getIdValue() {
        return this.idValue;
    }

    /**
     * Auto generated method that gets the related <code>Product</code> by the relation named <code>Product</code>.
     * @return the <code>Product</code>
     * @throws RepositoryException if an error occurs
     */
    public Product getProduct() throws RepositoryException {
        if (this.product == null) {
            this.product = getRelatedOne(Product.class, "Product");
        }
        return this.product;
    }

    /**
     * Auto generated value setter.
     * @param product the product to set
    */
    public void setProduct(Product product) {
        this.product = product;
    }


    /** {@inheritDoc} */
    @Override
    public void fromMap(Map<String, Object> mapValue) {
        preInit();
        setProductId((String) mapValue.get("productId"));
        setPartyId((String) mapValue.get("partyId"));
        setAvailableFromDate((Timestamp) mapValue.get("availableFromDate"));
        setAvailableThruDate((Timestamp) mapValue.get("availableThruDate"));
        setSupplierPrefOrderId((String) mapValue.get("supplierPrefOrderId"));
        setSupplierRatingTypeId((String) mapValue.get("supplierRatingTypeId"));
        setStandardLeadTimeDays(convertToBigDecimal(mapValue.get("standardLeadTimeDays")));
        setMinimumOrderQuantity(convertToBigDecimal(mapValue.get("minimumOrderQuantity")));
        setOrderQtyIncrements(convertToBigDecimal(mapValue.get("orderQtyIncrements")));
        setUnitsIncluded(convertToBigDecimal(mapValue.get("unitsIncluded")));
        setQuantityUomId((String) mapValue.get("quantityUomId"));
        setAgreementId((String) mapValue.get("agreementId"));
        setAgreementItemSeqId((String) mapValue.get("agreementItemSeqId"));
        setLastPrice(convertToBigDecimal(mapValue.get("lastPrice")));
        setCurrencyUomId((String) mapValue.get("currencyUomId"));
        setSupplierProductName((String) mapValue.get("supplierProductName"));
        setSupplierProductId((String) mapValue.get("supplierProductId"));
        setCanDropShip((String) mapValue.get("canDropShip"));
        setSupplierCommissionPerc(convertToBigDecimal(mapValue.get("supplierCommissionPerc")));
        setComments((String) mapValue.get("comments"));
        setGoodIdentificationTypeId((String) mapValue.get("goodIdentificationTypeId"));
        setIdValue((String) mapValue.get("idValue"));
        postInit();
    }

    /** {@inheritDoc} */
    @Override
    public Map<String, Object> toMap() {
        Map<String, Object> mapValue = new FastMap<String, Object>();
        mapValue.put("productId", getProductId());
        mapValue.put("partyId", getPartyId());
        mapValue.put("availableFromDate", getAvailableFromDate());
        mapValue.put("availableThruDate", getAvailableThruDate());
        mapValue.put("supplierPrefOrderId", getSupplierPrefOrderId());
        mapValue.put("supplierRatingTypeId", getSupplierRatingTypeId());
        mapValue.put("standardLeadTimeDays", getStandardLeadTimeDays());
        mapValue.put("minimumOrderQuantity", getMinimumOrderQuantity());
        mapValue.put("orderQtyIncrements", getOrderQtyIncrements());
        mapValue.put("unitsIncluded", getUnitsIncluded());
        mapValue.put("quantityUomId", getQuantityUomId());
        mapValue.put("agreementId", getAgreementId());
        mapValue.put("agreementItemSeqId", getAgreementItemSeqId());
        mapValue.put("lastPrice", getLastPrice());
        mapValue.put("currencyUomId", getCurrencyUomId());
        mapValue.put("supplierProductName", getSupplierProductName());
        mapValue.put("supplierProductId", getSupplierProductId());
        mapValue.put("canDropShip", getCanDropShip());
        mapValue.put("supplierCommissionPerc", getSupplierCommissionPerc());
        mapValue.put("comments", getComments());
        mapValue.put("goodIdentificationTypeId", getGoodIdentificationTypeId());
        mapValue.put("idValue", getIdValue());
        return mapValue;
    }


}
