package org.opentaps.base.entities;

/*
 * Copyright (c) Open Source Strategies, Inc.
 *
 * Opentaps is free software: you can redistribute it and/or modify it
 * under the terms of the GNU Affero General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Opentaps is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with Opentaps.  If not, see <http://www.gnu.org/licenses/>.
 */

// DO NOT EDIT THIS FILE!  THIS IS AUTO GENERATED AND WILL GET WRITTEN OVER PERIODICALLY WHEN THE DATA MODEL CHANGES
// EXTEND THIS CLASS INSTEAD.

import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;

import javolution.util.FastMap;

import org.opentaps.foundation.entity.Entity;
import org.opentaps.foundation.entity.EntityFieldInterface;
import org.opentaps.foundation.repository.RepositoryException;
import org.opentaps.foundation.repository.RepositoryInterface;
import javax.persistence.*;
import org.hibernate.search.annotations.*;
import java.lang.String;
import java.sql.Timestamp;

/**
 * Auto generated base entity Uom.
 */
@javax.persistence.Entity
@Table(name="UOM")
public class Uom extends Entity {
static {
java.util.Map<String, String> fields = new java.util.HashMap<String, String>();
        fields.put("uomId", "UOM_ID");
        fields.put("uomTypeId", "UOM_TYPE_ID");
        fields.put("abbreviation", "ABBREVIATION");
        fields.put("description", "DESCRIPTION");
        fields.put("lastUpdatedStamp", "LAST_UPDATED_STAMP");
        fields.put("lastUpdatedTxStamp", "LAST_UPDATED_TX_STAMP");
        fields.put("createdStamp", "CREATED_STAMP");
        fields.put("createdTxStamp", "CREATED_TX_STAMP");
fieldMapColumns.put("Uom", fields);
}
  public static enum Fields implements EntityFieldInterface<Uom> {
    uomId("uomId"),
    uomTypeId("uomTypeId"),
    abbreviation("abbreviation"),
    description("description"),
    lastUpdatedStamp("lastUpdatedStamp"),
    lastUpdatedTxStamp("lastUpdatedTxStamp"),
    createdStamp("createdStamp"),
    createdTxStamp("createdTxStamp");
    private final String fieldName;
    private Fields(String name) { fieldName = name; }
    /** {@inheritDoc} */
    public String getName() { return fieldName; }
    /** {@inheritDoc} */
    public String asc() { return fieldName + " ASC"; }
    /** {@inheritDoc} */
    public String desc() { return fieldName + " DESC"; }
  }

   @org.hibernate.annotations.GenericGenerator(name="Uom_GEN",  strategy="org.opentaps.foundation.entity.hibernate.OpentapsIdentifierGenerator")
   @GeneratedValue(generator="Uom_GEN")
   @Id
   @Column(name="UOM_ID")
   private String uomId;
   @Column(name="UOM_TYPE_ID")
   private String uomTypeId;
   @Column(name="ABBREVIATION")
   private String abbreviation;
   @Column(name="DESCRIPTION")
   private String description;
   @Column(name="LAST_UPDATED_STAMP")
   private Timestamp lastUpdatedStamp;
   @Column(name="LAST_UPDATED_TX_STAMP")
   private Timestamp lastUpdatedTxStamp;
   @Column(name="CREATED_STAMP")
   private Timestamp createdStamp;
   @Column(name="CREATED_TX_STAMP")
   private Timestamp createdTxStamp;
   @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="UOM_TYPE_ID", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private UomType uomType = null;
   private transient List<AcctgTransEntry> currencyAcctgTransEntrys = null;
   private transient List<AcctgTransEntry> origCurrencyAcctgTransEntrys = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="currencyUom", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="CURRENCY_UOM_ID")
   
   private List<AgreementTerm> currencyAgreementTerms = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="uom", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="UOM_ID")
   
   private List<AgreementTerm> agreementTerms = null;
   private transient List<BillingAccount> billingAccounts = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="uom", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="UOM_ID")
   
   private List<BillingAccountTerm> billingAccountTerms = null;
   private transient List<CashDrawer> cashDrawers = null;
   private transient List<CostComponent> currencyCostComponents = null;
   private transient List<CostComponentCalc> costComponentCalcs = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="maximumAmountUom", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="MAXIMUM_AMOUNT_UOM_ID")
   
   private List<CustRequest> maximumAmountCustRequests = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="currencyUom", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="CURRENCY_UOM_ID")
   
   private List<CustRequest> currencyCustRequests = null;
   private transient List<DataImportOrderHeader> dataImportOrderHeaders = null;
   private transient List<ExampleItem> amountExampleItems = null;
   private transient List<Facility> facilitys = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="currencyUom", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="CURRENCY_UOM_ID")
   
   private List<FinAccount> currencyFinAccounts = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="uom", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="UOM_ID")
   
   private List<FixedAsset> fixedAssets = null;
   private transient List<FixedAssetMaint> intervalFixedAssetMaints = null;
   private transient List<FixedAssetProduct> fixedAssetProducts = null;
   private transient List<FixedAssetStdCost> fixedAssetStdCosts = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="elevationUom", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="ELEVATION_UOM_ID")
   
   private List<GeoPoint> elevationGeoPoints = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="uom", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="UOM_ID")
   
   private List<InventoryItem> inventoryItems = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="currencyUom", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="CURRENCY_UOM_ID")
   
   private List<InventoryItem> currencyInventoryItems = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="currencyUom", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="CURRENCY_UOM_ID")
   
   private List<Invoice> currencyInvoices = null;
   private transient List<InvoiceItem> invoiceItems = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="uom", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="UOM_ID")
   
   private List<Lot> lots = null;
   private transient List<MarketingCampaign> marketingCampaigns = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="currencyUom", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="CURRENCY_UOM_ID")
   
   private List<OldPartyRate> currencyOldPartyRates = null;
   private transient List<OrderDeliverySchedule> totalCubicOrderDeliverySchedules = null;
   private transient List<OrderDeliverySchedule> totalWeightOrderDeliverySchedules = null;
   private transient List<OrderHeader> orderHeaders = null;
   private transient List<OrderItem> recurringFreqOrderItems = null;
   private transient List<OrderTerm> orderTerms = null;
   private transient List<Party> partys = null;
   private transient List<PartyAcctgPreference> partyAcctgPreferences = null;
   private transient List<PartySupplementalData> partySupplementalDatas = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="currencyUom", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="CURRENCY_UOM_ID")
   
   private List<Payment> currencyPayments = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="actualCurrencyUom", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="ACTUAL_CURRENCY_UOM_ID")
   
   private List<Payment> actualCurrencyPayments = null;
   private transient List<PaymentGatewayResponse> paymentGatewayResponses = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="uom", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="UOM_ID")
   
   private List<PeriodType> periodTypes = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="quantityUom", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="QUANTITY_UOM_ID")
   
   private List<Product> quantityProducts = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="weightUom", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="WEIGHT_UOM_ID")
   
   private List<Product> weightProducts = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="heightUom", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="HEIGHT_UOM_ID")
   
   private List<Product> heightProducts = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="widthUom", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="WIDTH_UOM_ID")
   
   private List<Product> widthProducts = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="depthUom", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="DEPTH_UOM_ID")
   
   private List<Product> depthProducts = null;
   private transient List<ProductContent> useTimeProductContents = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="currencyUom", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="CURRENCY_UOM_ID")
   
   private List<ProductFeaturePrice> currencyProductFeaturePrices = null;
   private transient List<ProductMaint> intervalProductMaints = null;
   private transient List<ProductMeter> meterProductMeters = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="defaultUom", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="DEFAULT_UOM_ID")
   
   private List<ProductMeterType> defaultProductMeterTypes = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="currencyUom", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="CURRENCY_UOM_ID")
   
   private List<ProductPrice> currencyProductPrices = null;
   private transient List<ProductPrice> termProductPrices = null;
   private transient List<ProductStore> productStores = null;
   private transient List<ProductSubscriptionResource> useTimeProductSubscriptionResources = null;
   private transient List<ProductSubscriptionResource> cancelTimeProductSubscriptionResources = null;
   private transient List<ProductSubscriptionResource> availableTimeProductSubscriptionResources = null;
   private transient List<ProductSubscriptionResource> maxLifeTimeProductSubscriptionResources = null;
   private transient List<Quote> quotes = null;
   private transient List<QuoteItem> quoteItems = null;
   private transient List<RateAmount> rateAmounts = null;
   private transient List<ReturnHeader> returnHeaders = null;
   private transient List<SalesForecast> salesForecasts = null;
   private transient List<SalesForecastDetail> quantitySalesForecastDetails = null;
   private transient List<SalesForecastHistory> salesForecastHistorys = null;
   private transient List<SalesOpportunity> salesOpportunitys = null;
   private transient List<SalesOpportunityHistory> salesOpportunityHistorys = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="currencyUom", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="CURRENCY_UOM_ID")
   
   private List<Shipment> currencyShipments = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="dimensionUom", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="DIMENSION_UOM_ID")
   
   private List<ShipmentBoxType> dimensionShipmentBoxTypes = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="weightUom", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="WEIGHT_UOM_ID")
   
   private List<ShipmentBoxType> weightShipmentBoxTypes = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="weightUom", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="WEIGHT_UOM_ID")
   
   private List<ShipmentCostEstimate> weightShipmentCostEstimates = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="quantityUom", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="QUANTITY_UOM_ID")
   
   private List<ShipmentCostEstimate> quantityShipmentCostEstimates = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="priceUom", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="PRICE_UOM_ID")
   
   private List<ShipmentCostEstimate> priceShipmentCostEstimates = null;
   private transient List<ShipmentPackage> weightShipmentPackages = null;
   private transient List<ShipmentPackageRouteSeg> currencyShipmentPackageRouteSegs = null;
   private transient List<ShipmentRouteSegment> currencyShipmentRouteSegments = null;
   private transient List<ShipmentRouteSegment> billingWeightShipmentRouteSegments = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="useTimeUom", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="USE_TIME_UOM_ID")
   
   private List<Subscription> useTimeSubscriptions = null;
   private transient List<Subscription> cancelTimeSubscriptions = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="availableTimeUom", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="AVAILABLE_TIME_UOM_ID")
   
   private List<Subscription> availableTimeSubscriptions = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="maxLifeTimeUom", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="MAX_LIFE_TIME_UOM_ID")
   
   private List<Subscription> maxLifeTimeSubscriptions = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="currencyUom", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="CURRENCY_UOM_ID")
   
   private List<SupplierProduct> currencySupplierProducts = null;
   private transient List<SupplierProduct> quantitySupplierProducts = null;
   private transient List<SupplierProductFeature> supplierProductFeatures = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="mainUom", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="UOM_ID")
   
   private List<UomConversion> mainUomConversions = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="convToUom", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="UOM_ID_TO")
   
   private List<UomConversion> convToUomConversions = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="datedMainUom", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="UOM_ID")
   
   private List<UomConversionDated> datedMainUomConversionDateds = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="datedConvToUom", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="UOM_ID_TO")
   
   private List<UomConversionDated> datedConvToUomConversionDateds = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="moneyUom", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="MONEY_UOM_ID")
   
   private List<WorkEffort> moneyWorkEfforts = null;

  /**
   * Default constructor.
   */
  public Uom() {
      super();
      this.baseEntityName = "Uom";
      this.isView = false;
      this.resourceName = "CommonEntityLabels";
      this.primaryKeyNames = new ArrayList<String>();
      this.primaryKeyNames.add("uomId");
      this.allFieldsNames = new ArrayList<String>();
      this.allFieldsNames.add("uomId");this.allFieldsNames.add("uomTypeId");this.allFieldsNames.add("abbreviation");this.allFieldsNames.add("description");this.allFieldsNames.add("lastUpdatedStamp");this.allFieldsNames.add("lastUpdatedTxStamp");this.allFieldsNames.add("createdStamp");this.allFieldsNames.add("createdTxStamp");
      this.nonPrimaryKeyNames = new ArrayList<String>();
      this.nonPrimaryKeyNames.addAll(allFieldsNames);
      this.nonPrimaryKeyNames.removeAll(primaryKeyNames);
  }

  /**
   * Constructor with a repository.
   * @param repository a <code>RepositoryInterface</code> value
   */
  public Uom(RepositoryInterface repository) {
      this();
      initRepository(repository);
  }

    /**
     * Auto generated value setter.
     * @param uomId the uomId to set
     */
    public void setUomId(String uomId) {
        this.uomId = uomId;
    }
    /**
     * Auto generated value setter.
     * @param uomTypeId the uomTypeId to set
     */
    public void setUomTypeId(String uomTypeId) {
        this.uomTypeId = uomTypeId;
    }
    /**
     * Auto generated value setter.
     * @param abbreviation the abbreviation to set
     */
    public void setAbbreviation(String abbreviation) {
        this.abbreviation = abbreviation;
    }
    /**
     * Auto generated value setter.
     * @param description the description to set
     */
    public void setDescription(String description) {
        this.description = description;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedStamp the lastUpdatedStamp to set
     */
    public void setLastUpdatedStamp(Timestamp lastUpdatedStamp) {
        this.lastUpdatedStamp = lastUpdatedStamp;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedTxStamp the lastUpdatedTxStamp to set
     */
    public void setLastUpdatedTxStamp(Timestamp lastUpdatedTxStamp) {
        this.lastUpdatedTxStamp = lastUpdatedTxStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdStamp the createdStamp to set
     */
    public void setCreatedStamp(Timestamp createdStamp) {
        this.createdStamp = createdStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdTxStamp the createdTxStamp to set
     */
    public void setCreatedTxStamp(Timestamp createdTxStamp) {
        this.createdTxStamp = createdTxStamp;
    }

    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getUomId() {
        return this.uomId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getUomTypeId() {
        return this.uomTypeId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getAbbreviation() {
        return this.abbreviation;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getDescription() {
        return this.description;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedStamp() {
        return this.lastUpdatedStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedTxStamp() {
        return this.lastUpdatedTxStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedStamp() {
        return this.createdStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedTxStamp() {
        return this.createdTxStamp;
    }

    /**
     * Auto generated method that gets the related <code>UomType</code> by the relation named <code>UomType</code>.
     * @return the <code>UomType</code>
     * @throws RepositoryException if an error occurs
     */
    public UomType getUomType() throws RepositoryException {
        if (this.uomType == null) {
            this.uomType = getRelatedOne(UomType.class, "UomType");
        }
        return this.uomType;
    }
    /**
     * Auto generated method that gets the related <code>AcctgTransEntry</code> by the relation named <code>CurrencyAcctgTransEntry</code>.
     * @return the list of <code>AcctgTransEntry</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends AcctgTransEntry> getCurrencyAcctgTransEntrys() throws RepositoryException {
        if (this.currencyAcctgTransEntrys == null) {
            this.currencyAcctgTransEntrys = getRelated(AcctgTransEntry.class, "CurrencyAcctgTransEntry");
        }
        return this.currencyAcctgTransEntrys;
    }
    /**
     * Auto generated method that gets the related <code>AcctgTransEntry</code> by the relation named <code>OrigCurrencyAcctgTransEntry</code>.
     * @return the list of <code>AcctgTransEntry</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends AcctgTransEntry> getOrigCurrencyAcctgTransEntrys() throws RepositoryException {
        if (this.origCurrencyAcctgTransEntrys == null) {
            this.origCurrencyAcctgTransEntrys = getRelated(AcctgTransEntry.class, "OrigCurrencyAcctgTransEntry");
        }
        return this.origCurrencyAcctgTransEntrys;
    }
    /**
     * Auto generated method that gets the related <code>AgreementTerm</code> by the relation named <code>CurrencyAgreementTerm</code>.
     * @return the list of <code>AgreementTerm</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends AgreementTerm> getCurrencyAgreementTerms() throws RepositoryException {
        if (this.currencyAgreementTerms == null) {
            this.currencyAgreementTerms = getRelated(AgreementTerm.class, "CurrencyAgreementTerm");
        }
        return this.currencyAgreementTerms;
    }
    /**
     * Auto generated method that gets the related <code>AgreementTerm</code> by the relation named <code>AgreementTerm</code>.
     * @return the list of <code>AgreementTerm</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends AgreementTerm> getAgreementTerms() throws RepositoryException {
        if (this.agreementTerms == null) {
            this.agreementTerms = getRelated(AgreementTerm.class, "AgreementTerm");
        }
        return this.agreementTerms;
    }
    /**
     * Auto generated method that gets the related <code>BillingAccount</code> by the relation named <code>BillingAccount</code>.
     * @return the list of <code>BillingAccount</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends BillingAccount> getBillingAccounts() throws RepositoryException {
        if (this.billingAccounts == null) {
            this.billingAccounts = getRelated(BillingAccount.class, "BillingAccount");
        }
        return this.billingAccounts;
    }
    /**
     * Auto generated method that gets the related <code>BillingAccountTerm</code> by the relation named <code>BillingAccountTerm</code>.
     * @return the list of <code>BillingAccountTerm</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends BillingAccountTerm> getBillingAccountTerms() throws RepositoryException {
        if (this.billingAccountTerms == null) {
            this.billingAccountTerms = getRelated(BillingAccountTerm.class, "BillingAccountTerm");
        }
        return this.billingAccountTerms;
    }
    /**
     * Auto generated method that gets the related <code>CashDrawer</code> by the relation named <code>CashDrawer</code>.
     * @return the list of <code>CashDrawer</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends CashDrawer> getCashDrawers() throws RepositoryException {
        if (this.cashDrawers == null) {
            this.cashDrawers = getRelated(CashDrawer.class, "CashDrawer");
        }
        return this.cashDrawers;
    }
    /**
     * Auto generated method that gets the related <code>CostComponent</code> by the relation named <code>CurrencyCostComponent</code>.
     * @return the list of <code>CostComponent</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends CostComponent> getCurrencyCostComponents() throws RepositoryException {
        if (this.currencyCostComponents == null) {
            this.currencyCostComponents = getRelated(CostComponent.class, "CurrencyCostComponent");
        }
        return this.currencyCostComponents;
    }
    /**
     * Auto generated method that gets the related <code>CostComponentCalc</code> by the relation named <code>CostComponentCalc</code>.
     * @return the list of <code>CostComponentCalc</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends CostComponentCalc> getCostComponentCalcs() throws RepositoryException {
        if (this.costComponentCalcs == null) {
            this.costComponentCalcs = getRelated(CostComponentCalc.class, "CostComponentCalc");
        }
        return this.costComponentCalcs;
    }
    /**
     * Auto generated method that gets the related <code>CustRequest</code> by the relation named <code>MaximumAmountCustRequest</code>.
     * @return the list of <code>CustRequest</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends CustRequest> getMaximumAmountCustRequests() throws RepositoryException {
        if (this.maximumAmountCustRequests == null) {
            this.maximumAmountCustRequests = getRelated(CustRequest.class, "MaximumAmountCustRequest");
        }
        return this.maximumAmountCustRequests;
    }
    /**
     * Auto generated method that gets the related <code>CustRequest</code> by the relation named <code>CurrencyCustRequest</code>.
     * @return the list of <code>CustRequest</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends CustRequest> getCurrencyCustRequests() throws RepositoryException {
        if (this.currencyCustRequests == null) {
            this.currencyCustRequests = getRelated(CustRequest.class, "CurrencyCustRequest");
        }
        return this.currencyCustRequests;
    }
    /**
     * Auto generated method that gets the related <code>DataImportOrderHeader</code> by the relation named <code>DataImportOrderHeader</code>.
     * @return the list of <code>DataImportOrderHeader</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends DataImportOrderHeader> getDataImportOrderHeaders() throws RepositoryException {
        if (this.dataImportOrderHeaders == null) {
            this.dataImportOrderHeaders = getRelated(DataImportOrderHeader.class, "DataImportOrderHeader");
        }
        return this.dataImportOrderHeaders;
    }
    /**
     * Auto generated method that gets the related <code>ExampleItem</code> by the relation named <code>AmountExampleItem</code>.
     * @return the list of <code>ExampleItem</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ExampleItem> getAmountExampleItems() throws RepositoryException {
        if (this.amountExampleItems == null) {
            this.amountExampleItems = getRelated(ExampleItem.class, "AmountExampleItem");
        }
        return this.amountExampleItems;
    }
    /**
     * Auto generated method that gets the related <code>Facility</code> by the relation named <code>Facility</code>.
     * @return the list of <code>Facility</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends Facility> getFacilitys() throws RepositoryException {
        if (this.facilitys == null) {
            this.facilitys = getRelated(Facility.class, "Facility");
        }
        return this.facilitys;
    }
    /**
     * Auto generated method that gets the related <code>FinAccount</code> by the relation named <code>CurrencyFinAccount</code>.
     * @return the list of <code>FinAccount</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends FinAccount> getCurrencyFinAccounts() throws RepositoryException {
        if (this.currencyFinAccounts == null) {
            this.currencyFinAccounts = getRelated(FinAccount.class, "CurrencyFinAccount");
        }
        return this.currencyFinAccounts;
    }
    /**
     * Auto generated method that gets the related <code>FixedAsset</code> by the relation named <code>FixedAsset</code>.
     * @return the list of <code>FixedAsset</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends FixedAsset> getFixedAssets() throws RepositoryException {
        if (this.fixedAssets == null) {
            this.fixedAssets = getRelated(FixedAsset.class, "FixedAsset");
        }
        return this.fixedAssets;
    }
    /**
     * Auto generated method that gets the related <code>FixedAssetMaint</code> by the relation named <code>IntervalFixedAssetMaint</code>.
     * @return the list of <code>FixedAssetMaint</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends FixedAssetMaint> getIntervalFixedAssetMaints() throws RepositoryException {
        if (this.intervalFixedAssetMaints == null) {
            this.intervalFixedAssetMaints = getRelated(FixedAssetMaint.class, "IntervalFixedAssetMaint");
        }
        return this.intervalFixedAssetMaints;
    }
    /**
     * Auto generated method that gets the related <code>FixedAssetProduct</code> by the relation named <code>FixedAssetProduct</code>.
     * @return the list of <code>FixedAssetProduct</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends FixedAssetProduct> getFixedAssetProducts() throws RepositoryException {
        if (this.fixedAssetProducts == null) {
            this.fixedAssetProducts = getRelated(FixedAssetProduct.class, "FixedAssetProduct");
        }
        return this.fixedAssetProducts;
    }
    /**
     * Auto generated method that gets the related <code>FixedAssetStdCost</code> by the relation named <code>FixedAssetStdCost</code>.
     * @return the list of <code>FixedAssetStdCost</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends FixedAssetStdCost> getFixedAssetStdCosts() throws RepositoryException {
        if (this.fixedAssetStdCosts == null) {
            this.fixedAssetStdCosts = getRelated(FixedAssetStdCost.class, "FixedAssetStdCost");
        }
        return this.fixedAssetStdCosts;
    }
    /**
     * Auto generated method that gets the related <code>GeoPoint</code> by the relation named <code>ElevationGeoPoint</code>.
     * @return the list of <code>GeoPoint</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends GeoPoint> getElevationGeoPoints() throws RepositoryException {
        if (this.elevationGeoPoints == null) {
            this.elevationGeoPoints = getRelated(GeoPoint.class, "ElevationGeoPoint");
        }
        return this.elevationGeoPoints;
    }
    /**
     * Auto generated method that gets the related <code>InventoryItem</code> by the relation named <code>InventoryItem</code>.
     * @return the list of <code>InventoryItem</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends InventoryItem> getInventoryItems() throws RepositoryException {
        if (this.inventoryItems == null) {
            this.inventoryItems = getRelated(InventoryItem.class, "InventoryItem");
        }
        return this.inventoryItems;
    }
    /**
     * Auto generated method that gets the related <code>InventoryItem</code> by the relation named <code>CurrencyInventoryItem</code>.
     * @return the list of <code>InventoryItem</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends InventoryItem> getCurrencyInventoryItems() throws RepositoryException {
        if (this.currencyInventoryItems == null) {
            this.currencyInventoryItems = getRelated(InventoryItem.class, "CurrencyInventoryItem");
        }
        return this.currencyInventoryItems;
    }
    /**
     * Auto generated method that gets the related <code>Invoice</code> by the relation named <code>CurrencyInvoice</code>.
     * @return the list of <code>Invoice</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends Invoice> getCurrencyInvoices() throws RepositoryException {
        if (this.currencyInvoices == null) {
            this.currencyInvoices = getRelated(Invoice.class, "CurrencyInvoice");
        }
        return this.currencyInvoices;
    }
    /**
     * Auto generated method that gets the related <code>InvoiceItem</code> by the relation named <code>InvoiceItem</code>.
     * @return the list of <code>InvoiceItem</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends InvoiceItem> getInvoiceItems() throws RepositoryException {
        if (this.invoiceItems == null) {
            this.invoiceItems = getRelated(InvoiceItem.class, "InvoiceItem");
        }
        return this.invoiceItems;
    }
    /**
     * Auto generated method that gets the related <code>Lot</code> by the relation named <code>Lot</code>.
     * @return the list of <code>Lot</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends Lot> getLots() throws RepositoryException {
        if (this.lots == null) {
            this.lots = getRelated(Lot.class, "Lot");
        }
        return this.lots;
    }
    /**
     * Auto generated method that gets the related <code>MarketingCampaign</code> by the relation named <code>MarketingCampaign</code>.
     * @return the list of <code>MarketingCampaign</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends MarketingCampaign> getMarketingCampaigns() throws RepositoryException {
        if (this.marketingCampaigns == null) {
            this.marketingCampaigns = getRelated(MarketingCampaign.class, "MarketingCampaign");
        }
        return this.marketingCampaigns;
    }
    /**
     * Auto generated method that gets the related <code>OldPartyRate</code> by the relation named <code>CurrencyOldPartyRate</code>.
     * @return the list of <code>OldPartyRate</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends OldPartyRate> getCurrencyOldPartyRates() throws RepositoryException {
        if (this.currencyOldPartyRates == null) {
            this.currencyOldPartyRates = getRelated(OldPartyRate.class, "CurrencyOldPartyRate");
        }
        return this.currencyOldPartyRates;
    }
    /**
     * Auto generated method that gets the related <code>OrderDeliverySchedule</code> by the relation named <code>TotalCubicOrderDeliverySchedule</code>.
     * @return the list of <code>OrderDeliverySchedule</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends OrderDeliverySchedule> getTotalCubicOrderDeliverySchedules() throws RepositoryException {
        if (this.totalCubicOrderDeliverySchedules == null) {
            this.totalCubicOrderDeliverySchedules = getRelated(OrderDeliverySchedule.class, "TotalCubicOrderDeliverySchedule");
        }
        return this.totalCubicOrderDeliverySchedules;
    }
    /**
     * Auto generated method that gets the related <code>OrderDeliverySchedule</code> by the relation named <code>TotalWeightOrderDeliverySchedule</code>.
     * @return the list of <code>OrderDeliverySchedule</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends OrderDeliverySchedule> getTotalWeightOrderDeliverySchedules() throws RepositoryException {
        if (this.totalWeightOrderDeliverySchedules == null) {
            this.totalWeightOrderDeliverySchedules = getRelated(OrderDeliverySchedule.class, "TotalWeightOrderDeliverySchedule");
        }
        return this.totalWeightOrderDeliverySchedules;
    }
    /**
     * Auto generated method that gets the related <code>OrderHeader</code> by the relation named <code>OrderHeader</code>.
     * @return the list of <code>OrderHeader</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends OrderHeader> getOrderHeaders() throws RepositoryException {
        if (this.orderHeaders == null) {
            this.orderHeaders = getRelated(OrderHeader.class, "OrderHeader");
        }
        return this.orderHeaders;
    }
    /**
     * Auto generated method that gets the related <code>OrderItem</code> by the relation named <code>RecurringFreqOrderItem</code>.
     * @return the list of <code>OrderItem</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends OrderItem> getRecurringFreqOrderItems() throws RepositoryException {
        if (this.recurringFreqOrderItems == null) {
            this.recurringFreqOrderItems = getRelated(OrderItem.class, "RecurringFreqOrderItem");
        }
        return this.recurringFreqOrderItems;
    }
    /**
     * Auto generated method that gets the related <code>OrderTerm</code> by the relation named <code>OrderTerm</code>.
     * @return the list of <code>OrderTerm</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends OrderTerm> getOrderTerms() throws RepositoryException {
        if (this.orderTerms == null) {
            this.orderTerms = getRelated(OrderTerm.class, "OrderTerm");
        }
        return this.orderTerms;
    }
    /**
     * Auto generated method that gets the related <code>Party</code> by the relation named <code>Party</code>.
     * @return the list of <code>Party</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends Party> getPartys() throws RepositoryException {
        if (this.partys == null) {
            this.partys = getRelated(Party.class, "Party");
        }
        return this.partys;
    }
    /**
     * Auto generated method that gets the related <code>PartyAcctgPreference</code> by the relation named <code>PartyAcctgPreference</code>.
     * @return the list of <code>PartyAcctgPreference</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends PartyAcctgPreference> getPartyAcctgPreferences() throws RepositoryException {
        if (this.partyAcctgPreferences == null) {
            this.partyAcctgPreferences = getRelated(PartyAcctgPreference.class, "PartyAcctgPreference");
        }
        return this.partyAcctgPreferences;
    }
    /**
     * Auto generated method that gets the related <code>PartySupplementalData</code> by the relation named <code>PartySupplementalData</code>.
     * @return the list of <code>PartySupplementalData</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends PartySupplementalData> getPartySupplementalDatas() throws RepositoryException {
        if (this.partySupplementalDatas == null) {
            this.partySupplementalDatas = getRelated(PartySupplementalData.class, "PartySupplementalData");
        }
        return this.partySupplementalDatas;
    }
    /**
     * Auto generated method that gets the related <code>Payment</code> by the relation named <code>CurrencyPayment</code>.
     * @return the list of <code>Payment</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends Payment> getCurrencyPayments() throws RepositoryException {
        if (this.currencyPayments == null) {
            this.currencyPayments = getRelated(Payment.class, "CurrencyPayment");
        }
        return this.currencyPayments;
    }
    /**
     * Auto generated method that gets the related <code>Payment</code> by the relation named <code>ActualCurrencyPayment</code>.
     * @return the list of <code>Payment</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends Payment> getActualCurrencyPayments() throws RepositoryException {
        if (this.actualCurrencyPayments == null) {
            this.actualCurrencyPayments = getRelated(Payment.class, "ActualCurrencyPayment");
        }
        return this.actualCurrencyPayments;
    }
    /**
     * Auto generated method that gets the related <code>PaymentGatewayResponse</code> by the relation named <code>PaymentGatewayResponse</code>.
     * @return the list of <code>PaymentGatewayResponse</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends PaymentGatewayResponse> getPaymentGatewayResponses() throws RepositoryException {
        if (this.paymentGatewayResponses == null) {
            this.paymentGatewayResponses = getRelated(PaymentGatewayResponse.class, "PaymentGatewayResponse");
        }
        return this.paymentGatewayResponses;
    }
    /**
     * Auto generated method that gets the related <code>PeriodType</code> by the relation named <code>PeriodType</code>.
     * @return the list of <code>PeriodType</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends PeriodType> getPeriodTypes() throws RepositoryException {
        if (this.periodTypes == null) {
            this.periodTypes = getRelated(PeriodType.class, "PeriodType");
        }
        return this.periodTypes;
    }
    /**
     * Auto generated method that gets the related <code>Product</code> by the relation named <code>QuantityProduct</code>.
     * @return the list of <code>Product</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends Product> getQuantityProducts() throws RepositoryException {
        if (this.quantityProducts == null) {
            this.quantityProducts = getRelated(Product.class, "QuantityProduct");
        }
        return this.quantityProducts;
    }
    /**
     * Auto generated method that gets the related <code>Product</code> by the relation named <code>WeightProduct</code>.
     * @return the list of <code>Product</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends Product> getWeightProducts() throws RepositoryException {
        if (this.weightProducts == null) {
            this.weightProducts = getRelated(Product.class, "WeightProduct");
        }
        return this.weightProducts;
    }
    /**
     * Auto generated method that gets the related <code>Product</code> by the relation named <code>HeightProduct</code>.
     * @return the list of <code>Product</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends Product> getHeightProducts() throws RepositoryException {
        if (this.heightProducts == null) {
            this.heightProducts = getRelated(Product.class, "HeightProduct");
        }
        return this.heightProducts;
    }
    /**
     * Auto generated method that gets the related <code>Product</code> by the relation named <code>WidthProduct</code>.
     * @return the list of <code>Product</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends Product> getWidthProducts() throws RepositoryException {
        if (this.widthProducts == null) {
            this.widthProducts = getRelated(Product.class, "WidthProduct");
        }
        return this.widthProducts;
    }
    /**
     * Auto generated method that gets the related <code>Product</code> by the relation named <code>DepthProduct</code>.
     * @return the list of <code>Product</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends Product> getDepthProducts() throws RepositoryException {
        if (this.depthProducts == null) {
            this.depthProducts = getRelated(Product.class, "DepthProduct");
        }
        return this.depthProducts;
    }
    /**
     * Auto generated method that gets the related <code>ProductContent</code> by the relation named <code>UseTimeProductContent</code>.
     * @return the list of <code>ProductContent</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ProductContent> getUseTimeProductContents() throws RepositoryException {
        if (this.useTimeProductContents == null) {
            this.useTimeProductContents = getRelated(ProductContent.class, "UseTimeProductContent");
        }
        return this.useTimeProductContents;
    }
    /**
     * Auto generated method that gets the related <code>ProductFeaturePrice</code> by the relation named <code>CurrencyProductFeaturePrice</code>.
     * @return the list of <code>ProductFeaturePrice</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ProductFeaturePrice> getCurrencyProductFeaturePrices() throws RepositoryException {
        if (this.currencyProductFeaturePrices == null) {
            this.currencyProductFeaturePrices = getRelated(ProductFeaturePrice.class, "CurrencyProductFeaturePrice");
        }
        return this.currencyProductFeaturePrices;
    }
    /**
     * Auto generated method that gets the related <code>ProductMaint</code> by the relation named <code>IntervalProductMaint</code>.
     * @return the list of <code>ProductMaint</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ProductMaint> getIntervalProductMaints() throws RepositoryException {
        if (this.intervalProductMaints == null) {
            this.intervalProductMaints = getRelated(ProductMaint.class, "IntervalProductMaint");
        }
        return this.intervalProductMaints;
    }
    /**
     * Auto generated method that gets the related <code>ProductMeter</code> by the relation named <code>MeterProductMeter</code>.
     * @return the list of <code>ProductMeter</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ProductMeter> getMeterProductMeters() throws RepositoryException {
        if (this.meterProductMeters == null) {
            this.meterProductMeters = getRelated(ProductMeter.class, "MeterProductMeter");
        }
        return this.meterProductMeters;
    }
    /**
     * Auto generated method that gets the related <code>ProductMeterType</code> by the relation named <code>DefaultProductMeterType</code>.
     * @return the list of <code>ProductMeterType</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ProductMeterType> getDefaultProductMeterTypes() throws RepositoryException {
        if (this.defaultProductMeterTypes == null) {
            this.defaultProductMeterTypes = getRelated(ProductMeterType.class, "DefaultProductMeterType");
        }
        return this.defaultProductMeterTypes;
    }
    /**
     * Auto generated method that gets the related <code>ProductPrice</code> by the relation named <code>CurrencyProductPrice</code>.
     * @return the list of <code>ProductPrice</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ProductPrice> getCurrencyProductPrices() throws RepositoryException {
        if (this.currencyProductPrices == null) {
            this.currencyProductPrices = getRelated(ProductPrice.class, "CurrencyProductPrice");
        }
        return this.currencyProductPrices;
    }
    /**
     * Auto generated method that gets the related <code>ProductPrice</code> by the relation named <code>TermProductPrice</code>.
     * @return the list of <code>ProductPrice</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ProductPrice> getTermProductPrices() throws RepositoryException {
        if (this.termProductPrices == null) {
            this.termProductPrices = getRelated(ProductPrice.class, "TermProductPrice");
        }
        return this.termProductPrices;
    }
    /**
     * Auto generated method that gets the related <code>ProductStore</code> by the relation named <code>ProductStore</code>.
     * @return the list of <code>ProductStore</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ProductStore> getProductStores() throws RepositoryException {
        if (this.productStores == null) {
            this.productStores = getRelated(ProductStore.class, "ProductStore");
        }
        return this.productStores;
    }
    /**
     * Auto generated method that gets the related <code>ProductSubscriptionResource</code> by the relation named <code>UseTimeProductSubscriptionResource</code>.
     * @return the list of <code>ProductSubscriptionResource</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ProductSubscriptionResource> getUseTimeProductSubscriptionResources() throws RepositoryException {
        if (this.useTimeProductSubscriptionResources == null) {
            this.useTimeProductSubscriptionResources = getRelated(ProductSubscriptionResource.class, "UseTimeProductSubscriptionResource");
        }
        return this.useTimeProductSubscriptionResources;
    }
    /**
     * Auto generated method that gets the related <code>ProductSubscriptionResource</code> by the relation named <code>CancelTimeProductSubscriptionResource</code>.
     * @return the list of <code>ProductSubscriptionResource</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ProductSubscriptionResource> getCancelTimeProductSubscriptionResources() throws RepositoryException {
        if (this.cancelTimeProductSubscriptionResources == null) {
            this.cancelTimeProductSubscriptionResources = getRelated(ProductSubscriptionResource.class, "CancelTimeProductSubscriptionResource");
        }
        return this.cancelTimeProductSubscriptionResources;
    }
    /**
     * Auto generated method that gets the related <code>ProductSubscriptionResource</code> by the relation named <code>AvailableTimeProductSubscriptionResource</code>.
     * @return the list of <code>ProductSubscriptionResource</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ProductSubscriptionResource> getAvailableTimeProductSubscriptionResources() throws RepositoryException {
        if (this.availableTimeProductSubscriptionResources == null) {
            this.availableTimeProductSubscriptionResources = getRelated(ProductSubscriptionResource.class, "AvailableTimeProductSubscriptionResource");
        }
        return this.availableTimeProductSubscriptionResources;
    }
    /**
     * Auto generated method that gets the related <code>ProductSubscriptionResource</code> by the relation named <code>MaxLifeTimeProductSubscriptionResource</code>.
     * @return the list of <code>ProductSubscriptionResource</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ProductSubscriptionResource> getMaxLifeTimeProductSubscriptionResources() throws RepositoryException {
        if (this.maxLifeTimeProductSubscriptionResources == null) {
            this.maxLifeTimeProductSubscriptionResources = getRelated(ProductSubscriptionResource.class, "MaxLifeTimeProductSubscriptionResource");
        }
        return this.maxLifeTimeProductSubscriptionResources;
    }
    /**
     * Auto generated method that gets the related <code>Quote</code> by the relation named <code>Quote</code>.
     * @return the list of <code>Quote</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends Quote> getQuotes() throws RepositoryException {
        if (this.quotes == null) {
            this.quotes = getRelated(Quote.class, "Quote");
        }
        return this.quotes;
    }
    /**
     * Auto generated method that gets the related <code>QuoteItem</code> by the relation named <code>QuoteItem</code>.
     * @return the list of <code>QuoteItem</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends QuoteItem> getQuoteItems() throws RepositoryException {
        if (this.quoteItems == null) {
            this.quoteItems = getRelated(QuoteItem.class, "QuoteItem");
        }
        return this.quoteItems;
    }
    /**
     * Auto generated method that gets the related <code>RateAmount</code> by the relation named <code>RateAmount</code>.
     * @return the list of <code>RateAmount</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends RateAmount> getRateAmounts() throws RepositoryException {
        if (this.rateAmounts == null) {
            this.rateAmounts = getRelated(RateAmount.class, "RateAmount");
        }
        return this.rateAmounts;
    }
    /**
     * Auto generated method that gets the related <code>ReturnHeader</code> by the relation named <code>ReturnHeader</code>.
     * @return the list of <code>ReturnHeader</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ReturnHeader> getReturnHeaders() throws RepositoryException {
        if (this.returnHeaders == null) {
            this.returnHeaders = getRelated(ReturnHeader.class, "ReturnHeader");
        }
        return this.returnHeaders;
    }
    /**
     * Auto generated method that gets the related <code>SalesForecast</code> by the relation named <code>SalesForecast</code>.
     * @return the list of <code>SalesForecast</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends SalesForecast> getSalesForecasts() throws RepositoryException {
        if (this.salesForecasts == null) {
            this.salesForecasts = getRelated(SalesForecast.class, "SalesForecast");
        }
        return this.salesForecasts;
    }
    /**
     * Auto generated method that gets the related <code>SalesForecastDetail</code> by the relation named <code>QuantitySalesForecastDetail</code>.
     * @return the list of <code>SalesForecastDetail</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends SalesForecastDetail> getQuantitySalesForecastDetails() throws RepositoryException {
        if (this.quantitySalesForecastDetails == null) {
            this.quantitySalesForecastDetails = getRelated(SalesForecastDetail.class, "QuantitySalesForecastDetail");
        }
        return this.quantitySalesForecastDetails;
    }
    /**
     * Auto generated method that gets the related <code>SalesForecastHistory</code> by the relation named <code>SalesForecastHistory</code>.
     * @return the list of <code>SalesForecastHistory</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends SalesForecastHistory> getSalesForecastHistorys() throws RepositoryException {
        if (this.salesForecastHistorys == null) {
            this.salesForecastHistorys = getRelated(SalesForecastHistory.class, "SalesForecastHistory");
        }
        return this.salesForecastHistorys;
    }
    /**
     * Auto generated method that gets the related <code>SalesOpportunity</code> by the relation named <code>SalesOpportunity</code>.
     * @return the list of <code>SalesOpportunity</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends SalesOpportunity> getSalesOpportunitys() throws RepositoryException {
        if (this.salesOpportunitys == null) {
            this.salesOpportunitys = getRelated(SalesOpportunity.class, "SalesOpportunity");
        }
        return this.salesOpportunitys;
    }
    /**
     * Auto generated method that gets the related <code>SalesOpportunityHistory</code> by the relation named <code>SalesOpportunityHistory</code>.
     * @return the list of <code>SalesOpportunityHistory</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends SalesOpportunityHistory> getSalesOpportunityHistorys() throws RepositoryException {
        if (this.salesOpportunityHistorys == null) {
            this.salesOpportunityHistorys = getRelated(SalesOpportunityHistory.class, "SalesOpportunityHistory");
        }
        return this.salesOpportunityHistorys;
    }
    /**
     * Auto generated method that gets the related <code>Shipment</code> by the relation named <code>CurrencyShipment</code>.
     * @return the list of <code>Shipment</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends Shipment> getCurrencyShipments() throws RepositoryException {
        if (this.currencyShipments == null) {
            this.currencyShipments = getRelated(Shipment.class, "CurrencyShipment");
        }
        return this.currencyShipments;
    }
    /**
     * Auto generated method that gets the related <code>ShipmentBoxType</code> by the relation named <code>DimensionShipmentBoxType</code>.
     * @return the list of <code>ShipmentBoxType</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ShipmentBoxType> getDimensionShipmentBoxTypes() throws RepositoryException {
        if (this.dimensionShipmentBoxTypes == null) {
            this.dimensionShipmentBoxTypes = getRelated(ShipmentBoxType.class, "DimensionShipmentBoxType");
        }
        return this.dimensionShipmentBoxTypes;
    }
    /**
     * Auto generated method that gets the related <code>ShipmentBoxType</code> by the relation named <code>WeightShipmentBoxType</code>.
     * @return the list of <code>ShipmentBoxType</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ShipmentBoxType> getWeightShipmentBoxTypes() throws RepositoryException {
        if (this.weightShipmentBoxTypes == null) {
            this.weightShipmentBoxTypes = getRelated(ShipmentBoxType.class, "WeightShipmentBoxType");
        }
        return this.weightShipmentBoxTypes;
    }
    /**
     * Auto generated method that gets the related <code>ShipmentCostEstimate</code> by the relation named <code>WeightShipmentCostEstimate</code>.
     * @return the list of <code>ShipmentCostEstimate</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ShipmentCostEstimate> getWeightShipmentCostEstimates() throws RepositoryException {
        if (this.weightShipmentCostEstimates == null) {
            this.weightShipmentCostEstimates = getRelated(ShipmentCostEstimate.class, "WeightShipmentCostEstimate");
        }
        return this.weightShipmentCostEstimates;
    }
    /**
     * Auto generated method that gets the related <code>ShipmentCostEstimate</code> by the relation named <code>QuantityShipmentCostEstimate</code>.
     * @return the list of <code>ShipmentCostEstimate</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ShipmentCostEstimate> getQuantityShipmentCostEstimates() throws RepositoryException {
        if (this.quantityShipmentCostEstimates == null) {
            this.quantityShipmentCostEstimates = getRelated(ShipmentCostEstimate.class, "QuantityShipmentCostEstimate");
        }
        return this.quantityShipmentCostEstimates;
    }
    /**
     * Auto generated method that gets the related <code>ShipmentCostEstimate</code> by the relation named <code>PriceShipmentCostEstimate</code>.
     * @return the list of <code>ShipmentCostEstimate</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ShipmentCostEstimate> getPriceShipmentCostEstimates() throws RepositoryException {
        if (this.priceShipmentCostEstimates == null) {
            this.priceShipmentCostEstimates = getRelated(ShipmentCostEstimate.class, "PriceShipmentCostEstimate");
        }
        return this.priceShipmentCostEstimates;
    }
    /**
     * Auto generated method that gets the related <code>ShipmentPackage</code> by the relation named <code>WeightShipmentPackage</code>.
     * @return the list of <code>ShipmentPackage</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ShipmentPackage> getWeightShipmentPackages() throws RepositoryException {
        if (this.weightShipmentPackages == null) {
            this.weightShipmentPackages = getRelated(ShipmentPackage.class, "WeightShipmentPackage");
        }
        return this.weightShipmentPackages;
    }
    /**
     * Auto generated method that gets the related <code>ShipmentPackageRouteSeg</code> by the relation named <code>CurrencyShipmentPackageRouteSeg</code>.
     * @return the list of <code>ShipmentPackageRouteSeg</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ShipmentPackageRouteSeg> getCurrencyShipmentPackageRouteSegs() throws RepositoryException {
        if (this.currencyShipmentPackageRouteSegs == null) {
            this.currencyShipmentPackageRouteSegs = getRelated(ShipmentPackageRouteSeg.class, "CurrencyShipmentPackageRouteSeg");
        }
        return this.currencyShipmentPackageRouteSegs;
    }
    /**
     * Auto generated method that gets the related <code>ShipmentRouteSegment</code> by the relation named <code>CurrencyShipmentRouteSegment</code>.
     * @return the list of <code>ShipmentRouteSegment</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ShipmentRouteSegment> getCurrencyShipmentRouteSegments() throws RepositoryException {
        if (this.currencyShipmentRouteSegments == null) {
            this.currencyShipmentRouteSegments = getRelated(ShipmentRouteSegment.class, "CurrencyShipmentRouteSegment");
        }
        return this.currencyShipmentRouteSegments;
    }
    /**
     * Auto generated method that gets the related <code>ShipmentRouteSegment</code> by the relation named <code>BillingWeightShipmentRouteSegment</code>.
     * @return the list of <code>ShipmentRouteSegment</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ShipmentRouteSegment> getBillingWeightShipmentRouteSegments() throws RepositoryException {
        if (this.billingWeightShipmentRouteSegments == null) {
            this.billingWeightShipmentRouteSegments = getRelated(ShipmentRouteSegment.class, "BillingWeightShipmentRouteSegment");
        }
        return this.billingWeightShipmentRouteSegments;
    }
    /**
     * Auto generated method that gets the related <code>Subscription</code> by the relation named <code>UseTimeSubscription</code>.
     * @return the list of <code>Subscription</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends Subscription> getUseTimeSubscriptions() throws RepositoryException {
        if (this.useTimeSubscriptions == null) {
            this.useTimeSubscriptions = getRelated(Subscription.class, "UseTimeSubscription");
        }
        return this.useTimeSubscriptions;
    }
    /**
     * Auto generated method that gets the related <code>Subscription</code> by the relation named <code>CancelTimeSubscription</code>.
     * @return the list of <code>Subscription</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends Subscription> getCancelTimeSubscriptions() throws RepositoryException {
        if (this.cancelTimeSubscriptions == null) {
            this.cancelTimeSubscriptions = getRelated(Subscription.class, "CancelTimeSubscription");
        }
        return this.cancelTimeSubscriptions;
    }
    /**
     * Auto generated method that gets the related <code>Subscription</code> by the relation named <code>AvailableTimeSubscription</code>.
     * @return the list of <code>Subscription</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends Subscription> getAvailableTimeSubscriptions() throws RepositoryException {
        if (this.availableTimeSubscriptions == null) {
            this.availableTimeSubscriptions = getRelated(Subscription.class, "AvailableTimeSubscription");
        }
        return this.availableTimeSubscriptions;
    }
    /**
     * Auto generated method that gets the related <code>Subscription</code> by the relation named <code>MaxLifeTimeSubscription</code>.
     * @return the list of <code>Subscription</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends Subscription> getMaxLifeTimeSubscriptions() throws RepositoryException {
        if (this.maxLifeTimeSubscriptions == null) {
            this.maxLifeTimeSubscriptions = getRelated(Subscription.class, "MaxLifeTimeSubscription");
        }
        return this.maxLifeTimeSubscriptions;
    }
    /**
     * Auto generated method that gets the related <code>SupplierProduct</code> by the relation named <code>CurrencySupplierProduct</code>.
     * @return the list of <code>SupplierProduct</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends SupplierProduct> getCurrencySupplierProducts() throws RepositoryException {
        if (this.currencySupplierProducts == null) {
            this.currencySupplierProducts = getRelated(SupplierProduct.class, "CurrencySupplierProduct");
        }
        return this.currencySupplierProducts;
    }
    /**
     * Auto generated method that gets the related <code>SupplierProduct</code> by the relation named <code>QuantitySupplierProduct</code>.
     * @return the list of <code>SupplierProduct</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends SupplierProduct> getQuantitySupplierProducts() throws RepositoryException {
        if (this.quantitySupplierProducts == null) {
            this.quantitySupplierProducts = getRelated(SupplierProduct.class, "QuantitySupplierProduct");
        }
        return this.quantitySupplierProducts;
    }
    /**
     * Auto generated method that gets the related <code>SupplierProductFeature</code> by the relation named <code>SupplierProductFeature</code>.
     * @return the list of <code>SupplierProductFeature</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends SupplierProductFeature> getSupplierProductFeatures() throws RepositoryException {
        if (this.supplierProductFeatures == null) {
            this.supplierProductFeatures = getRelated(SupplierProductFeature.class, "SupplierProductFeature");
        }
        return this.supplierProductFeatures;
    }
    /**
     * Auto generated method that gets the related <code>UomConversion</code> by the relation named <code>MainUomConversion</code>.
     * @return the list of <code>UomConversion</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends UomConversion> getMainUomConversions() throws RepositoryException {
        if (this.mainUomConversions == null) {
            this.mainUomConversions = getRelated(UomConversion.class, "MainUomConversion");
        }
        return this.mainUomConversions;
    }
    /**
     * Auto generated method that gets the related <code>UomConversion</code> by the relation named <code>ConvToUomConversion</code>.
     * @return the list of <code>UomConversion</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends UomConversion> getConvToUomConversions() throws RepositoryException {
        if (this.convToUomConversions == null) {
            this.convToUomConversions = getRelated(UomConversion.class, "ConvToUomConversion");
        }
        return this.convToUomConversions;
    }
    /**
     * Auto generated method that gets the related <code>UomConversionDated</code> by the relation named <code>DatedMainUomConversionDated</code>.
     * @return the list of <code>UomConversionDated</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends UomConversionDated> getDatedMainUomConversionDateds() throws RepositoryException {
        if (this.datedMainUomConversionDateds == null) {
            this.datedMainUomConversionDateds = getRelated(UomConversionDated.class, "DatedMainUomConversionDated");
        }
        return this.datedMainUomConversionDateds;
    }
    /**
     * Auto generated method that gets the related <code>UomConversionDated</code> by the relation named <code>DatedConvToUomConversionDated</code>.
     * @return the list of <code>UomConversionDated</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends UomConversionDated> getDatedConvToUomConversionDateds() throws RepositoryException {
        if (this.datedConvToUomConversionDateds == null) {
            this.datedConvToUomConversionDateds = getRelated(UomConversionDated.class, "DatedConvToUomConversionDated");
        }
        return this.datedConvToUomConversionDateds;
    }
    /**
     * Auto generated method that gets the related <code>WorkEffort</code> by the relation named <code>MoneyWorkEffort</code>.
     * @return the list of <code>WorkEffort</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends WorkEffort> getMoneyWorkEfforts() throws RepositoryException {
        if (this.moneyWorkEfforts == null) {
            this.moneyWorkEfforts = getRelated(WorkEffort.class, "MoneyWorkEffort");
        }
        return this.moneyWorkEfforts;
    }

    /**
     * Auto generated value setter.
     * @param uomType the uomType to set
    */
    public void setUomType(UomType uomType) {
        this.uomType = uomType;
    }
    /**
     * Auto generated value setter.
     * @param currencyAcctgTransEntrys the currencyAcctgTransEntrys to set
    */
    public void setCurrencyAcctgTransEntrys(List<AcctgTransEntry> currencyAcctgTransEntrys) {
        this.currencyAcctgTransEntrys = currencyAcctgTransEntrys;
    }
    /**
     * Auto generated value setter.
     * @param origCurrencyAcctgTransEntrys the origCurrencyAcctgTransEntrys to set
    */
    public void setOrigCurrencyAcctgTransEntrys(List<AcctgTransEntry> origCurrencyAcctgTransEntrys) {
        this.origCurrencyAcctgTransEntrys = origCurrencyAcctgTransEntrys;
    }
    /**
     * Auto generated value setter.
     * @param currencyAgreementTerms the currencyAgreementTerms to set
    */
    public void setCurrencyAgreementTerms(List<AgreementTerm> currencyAgreementTerms) {
        this.currencyAgreementTerms = currencyAgreementTerms;
    }
    /**
     * Auto generated value setter.
     * @param agreementTerms the agreementTerms to set
    */
    public void setAgreementTerms(List<AgreementTerm> agreementTerms) {
        this.agreementTerms = agreementTerms;
    }
    /**
     * Auto generated value setter.
     * @param billingAccounts the billingAccounts to set
    */
    public void setBillingAccounts(List<BillingAccount> billingAccounts) {
        this.billingAccounts = billingAccounts;
    }
    /**
     * Auto generated value setter.
     * @param billingAccountTerms the billingAccountTerms to set
    */
    public void setBillingAccountTerms(List<BillingAccountTerm> billingAccountTerms) {
        this.billingAccountTerms = billingAccountTerms;
    }
    /**
     * Auto generated value setter.
     * @param cashDrawers the cashDrawers to set
    */
    public void setCashDrawers(List<CashDrawer> cashDrawers) {
        this.cashDrawers = cashDrawers;
    }
    /**
     * Auto generated value setter.
     * @param currencyCostComponents the currencyCostComponents to set
    */
    public void setCurrencyCostComponents(List<CostComponent> currencyCostComponents) {
        this.currencyCostComponents = currencyCostComponents;
    }
    /**
     * Auto generated value setter.
     * @param costComponentCalcs the costComponentCalcs to set
    */
    public void setCostComponentCalcs(List<CostComponentCalc> costComponentCalcs) {
        this.costComponentCalcs = costComponentCalcs;
    }
    /**
     * Auto generated value setter.
     * @param maximumAmountCustRequests the maximumAmountCustRequests to set
    */
    public void setMaximumAmountCustRequests(List<CustRequest> maximumAmountCustRequests) {
        this.maximumAmountCustRequests = maximumAmountCustRequests;
    }
    /**
     * Auto generated value setter.
     * @param currencyCustRequests the currencyCustRequests to set
    */
    public void setCurrencyCustRequests(List<CustRequest> currencyCustRequests) {
        this.currencyCustRequests = currencyCustRequests;
    }
    /**
     * Auto generated value setter.
     * @param dataImportOrderHeaders the dataImportOrderHeaders to set
    */
    public void setDataImportOrderHeaders(List<DataImportOrderHeader> dataImportOrderHeaders) {
        this.dataImportOrderHeaders = dataImportOrderHeaders;
    }
    /**
     * Auto generated value setter.
     * @param amountExampleItems the amountExampleItems to set
    */
    public void setAmountExampleItems(List<ExampleItem> amountExampleItems) {
        this.amountExampleItems = amountExampleItems;
    }
    /**
     * Auto generated value setter.
     * @param facilitys the facilitys to set
    */
    public void setFacilitys(List<Facility> facilitys) {
        this.facilitys = facilitys;
    }
    /**
     * Auto generated value setter.
     * @param currencyFinAccounts the currencyFinAccounts to set
    */
    public void setCurrencyFinAccounts(List<FinAccount> currencyFinAccounts) {
        this.currencyFinAccounts = currencyFinAccounts;
    }
    /**
     * Auto generated value setter.
     * @param fixedAssets the fixedAssets to set
    */
    public void setFixedAssets(List<FixedAsset> fixedAssets) {
        this.fixedAssets = fixedAssets;
    }
    /**
     * Auto generated value setter.
     * @param intervalFixedAssetMaints the intervalFixedAssetMaints to set
    */
    public void setIntervalFixedAssetMaints(List<FixedAssetMaint> intervalFixedAssetMaints) {
        this.intervalFixedAssetMaints = intervalFixedAssetMaints;
    }
    /**
     * Auto generated value setter.
     * @param fixedAssetProducts the fixedAssetProducts to set
    */
    public void setFixedAssetProducts(List<FixedAssetProduct> fixedAssetProducts) {
        this.fixedAssetProducts = fixedAssetProducts;
    }
    /**
     * Auto generated value setter.
     * @param fixedAssetStdCosts the fixedAssetStdCosts to set
    */
    public void setFixedAssetStdCosts(List<FixedAssetStdCost> fixedAssetStdCosts) {
        this.fixedAssetStdCosts = fixedAssetStdCosts;
    }
    /**
     * Auto generated value setter.
     * @param elevationGeoPoints the elevationGeoPoints to set
    */
    public void setElevationGeoPoints(List<GeoPoint> elevationGeoPoints) {
        this.elevationGeoPoints = elevationGeoPoints;
    }
    /**
     * Auto generated value setter.
     * @param inventoryItems the inventoryItems to set
    */
    public void setInventoryItems(List<InventoryItem> inventoryItems) {
        this.inventoryItems = inventoryItems;
    }
    /**
     * Auto generated value setter.
     * @param currencyInventoryItems the currencyInventoryItems to set
    */
    public void setCurrencyInventoryItems(List<InventoryItem> currencyInventoryItems) {
        this.currencyInventoryItems = currencyInventoryItems;
    }
    /**
     * Auto generated value setter.
     * @param currencyInvoices the currencyInvoices to set
    */
    public void setCurrencyInvoices(List<Invoice> currencyInvoices) {
        this.currencyInvoices = currencyInvoices;
    }
    /**
     * Auto generated value setter.
     * @param invoiceItems the invoiceItems to set
    */
    public void setInvoiceItems(List<InvoiceItem> invoiceItems) {
        this.invoiceItems = invoiceItems;
    }
    /**
     * Auto generated value setter.
     * @param lots the lots to set
    */
    public void setLots(List<Lot> lots) {
        this.lots = lots;
    }
    /**
     * Auto generated value setter.
     * @param marketingCampaigns the marketingCampaigns to set
    */
    public void setMarketingCampaigns(List<MarketingCampaign> marketingCampaigns) {
        this.marketingCampaigns = marketingCampaigns;
    }
    /**
     * Auto generated value setter.
     * @param currencyOldPartyRates the currencyOldPartyRates to set
    */
    public void setCurrencyOldPartyRates(List<OldPartyRate> currencyOldPartyRates) {
        this.currencyOldPartyRates = currencyOldPartyRates;
    }
    /**
     * Auto generated value setter.
     * @param totalCubicOrderDeliverySchedules the totalCubicOrderDeliverySchedules to set
    */
    public void setTotalCubicOrderDeliverySchedules(List<OrderDeliverySchedule> totalCubicOrderDeliverySchedules) {
        this.totalCubicOrderDeliverySchedules = totalCubicOrderDeliverySchedules;
    }
    /**
     * Auto generated value setter.
     * @param totalWeightOrderDeliverySchedules the totalWeightOrderDeliverySchedules to set
    */
    public void setTotalWeightOrderDeliverySchedules(List<OrderDeliverySchedule> totalWeightOrderDeliverySchedules) {
        this.totalWeightOrderDeliverySchedules = totalWeightOrderDeliverySchedules;
    }
    /**
     * Auto generated value setter.
     * @param orderHeaders the orderHeaders to set
    */
    public void setOrderHeaders(List<OrderHeader> orderHeaders) {
        this.orderHeaders = orderHeaders;
    }
    /**
     * Auto generated value setter.
     * @param recurringFreqOrderItems the recurringFreqOrderItems to set
    */
    public void setRecurringFreqOrderItems(List<OrderItem> recurringFreqOrderItems) {
        this.recurringFreqOrderItems = recurringFreqOrderItems;
    }
    /**
     * Auto generated value setter.
     * @param orderTerms the orderTerms to set
    */
    public void setOrderTerms(List<OrderTerm> orderTerms) {
        this.orderTerms = orderTerms;
    }
    /**
     * Auto generated value setter.
     * @param partys the partys to set
    */
    public void setPartys(List<Party> partys) {
        this.partys = partys;
    }
    /**
     * Auto generated value setter.
     * @param partyAcctgPreferences the partyAcctgPreferences to set
    */
    public void setPartyAcctgPreferences(List<PartyAcctgPreference> partyAcctgPreferences) {
        this.partyAcctgPreferences = partyAcctgPreferences;
    }
    /**
     * Auto generated value setter.
     * @param partySupplementalDatas the partySupplementalDatas to set
    */
    public void setPartySupplementalDatas(List<PartySupplementalData> partySupplementalDatas) {
        this.partySupplementalDatas = partySupplementalDatas;
    }
    /**
     * Auto generated value setter.
     * @param currencyPayments the currencyPayments to set
    */
    public void setCurrencyPayments(List<Payment> currencyPayments) {
        this.currencyPayments = currencyPayments;
    }
    /**
     * Auto generated value setter.
     * @param actualCurrencyPayments the actualCurrencyPayments to set
    */
    public void setActualCurrencyPayments(List<Payment> actualCurrencyPayments) {
        this.actualCurrencyPayments = actualCurrencyPayments;
    }
    /**
     * Auto generated value setter.
     * @param paymentGatewayResponses the paymentGatewayResponses to set
    */
    public void setPaymentGatewayResponses(List<PaymentGatewayResponse> paymentGatewayResponses) {
        this.paymentGatewayResponses = paymentGatewayResponses;
    }
    /**
     * Auto generated value setter.
     * @param periodTypes the periodTypes to set
    */
    public void setPeriodTypes(List<PeriodType> periodTypes) {
        this.periodTypes = periodTypes;
    }
    /**
     * Auto generated value setter.
     * @param quantityProducts the quantityProducts to set
    */
    public void setQuantityProducts(List<Product> quantityProducts) {
        this.quantityProducts = quantityProducts;
    }
    /**
     * Auto generated value setter.
     * @param weightProducts the weightProducts to set
    */
    public void setWeightProducts(List<Product> weightProducts) {
        this.weightProducts = weightProducts;
    }
    /**
     * Auto generated value setter.
     * @param heightProducts the heightProducts to set
    */
    public void setHeightProducts(List<Product> heightProducts) {
        this.heightProducts = heightProducts;
    }
    /**
     * Auto generated value setter.
     * @param widthProducts the widthProducts to set
    */
    public void setWidthProducts(List<Product> widthProducts) {
        this.widthProducts = widthProducts;
    }
    /**
     * Auto generated value setter.
     * @param depthProducts the depthProducts to set
    */
    public void setDepthProducts(List<Product> depthProducts) {
        this.depthProducts = depthProducts;
    }
    /**
     * Auto generated value setter.
     * @param useTimeProductContents the useTimeProductContents to set
    */
    public void setUseTimeProductContents(List<ProductContent> useTimeProductContents) {
        this.useTimeProductContents = useTimeProductContents;
    }
    /**
     * Auto generated value setter.
     * @param currencyProductFeaturePrices the currencyProductFeaturePrices to set
    */
    public void setCurrencyProductFeaturePrices(List<ProductFeaturePrice> currencyProductFeaturePrices) {
        this.currencyProductFeaturePrices = currencyProductFeaturePrices;
    }
    /**
     * Auto generated value setter.
     * @param intervalProductMaints the intervalProductMaints to set
    */
    public void setIntervalProductMaints(List<ProductMaint> intervalProductMaints) {
        this.intervalProductMaints = intervalProductMaints;
    }
    /**
     * Auto generated value setter.
     * @param meterProductMeters the meterProductMeters to set
    */
    public void setMeterProductMeters(List<ProductMeter> meterProductMeters) {
        this.meterProductMeters = meterProductMeters;
    }
    /**
     * Auto generated value setter.
     * @param defaultProductMeterTypes the defaultProductMeterTypes to set
    */
    public void setDefaultProductMeterTypes(List<ProductMeterType> defaultProductMeterTypes) {
        this.defaultProductMeterTypes = defaultProductMeterTypes;
    }
    /**
     * Auto generated value setter.
     * @param currencyProductPrices the currencyProductPrices to set
    */
    public void setCurrencyProductPrices(List<ProductPrice> currencyProductPrices) {
        this.currencyProductPrices = currencyProductPrices;
    }
    /**
     * Auto generated value setter.
     * @param termProductPrices the termProductPrices to set
    */
    public void setTermProductPrices(List<ProductPrice> termProductPrices) {
        this.termProductPrices = termProductPrices;
    }
    /**
     * Auto generated value setter.
     * @param productStores the productStores to set
    */
    public void setProductStores(List<ProductStore> productStores) {
        this.productStores = productStores;
    }
    /**
     * Auto generated value setter.
     * @param useTimeProductSubscriptionResources the useTimeProductSubscriptionResources to set
    */
    public void setUseTimeProductSubscriptionResources(List<ProductSubscriptionResource> useTimeProductSubscriptionResources) {
        this.useTimeProductSubscriptionResources = useTimeProductSubscriptionResources;
    }
    /**
     * Auto generated value setter.
     * @param cancelTimeProductSubscriptionResources the cancelTimeProductSubscriptionResources to set
    */
    public void setCancelTimeProductSubscriptionResources(List<ProductSubscriptionResource> cancelTimeProductSubscriptionResources) {
        this.cancelTimeProductSubscriptionResources = cancelTimeProductSubscriptionResources;
    }
    /**
     * Auto generated value setter.
     * @param availableTimeProductSubscriptionResources the availableTimeProductSubscriptionResources to set
    */
    public void setAvailableTimeProductSubscriptionResources(List<ProductSubscriptionResource> availableTimeProductSubscriptionResources) {
        this.availableTimeProductSubscriptionResources = availableTimeProductSubscriptionResources;
    }
    /**
     * Auto generated value setter.
     * @param maxLifeTimeProductSubscriptionResources the maxLifeTimeProductSubscriptionResources to set
    */
    public void setMaxLifeTimeProductSubscriptionResources(List<ProductSubscriptionResource> maxLifeTimeProductSubscriptionResources) {
        this.maxLifeTimeProductSubscriptionResources = maxLifeTimeProductSubscriptionResources;
    }
    /**
     * Auto generated value setter.
     * @param quotes the quotes to set
    */
    public void setQuotes(List<Quote> quotes) {
        this.quotes = quotes;
    }
    /**
     * Auto generated value setter.
     * @param quoteItems the quoteItems to set
    */
    public void setQuoteItems(List<QuoteItem> quoteItems) {
        this.quoteItems = quoteItems;
    }
    /**
     * Auto generated value setter.
     * @param rateAmounts the rateAmounts to set
    */
    public void setRateAmounts(List<RateAmount> rateAmounts) {
        this.rateAmounts = rateAmounts;
    }
    /**
     * Auto generated value setter.
     * @param returnHeaders the returnHeaders to set
    */
    public void setReturnHeaders(List<ReturnHeader> returnHeaders) {
        this.returnHeaders = returnHeaders;
    }
    /**
     * Auto generated value setter.
     * @param salesForecasts the salesForecasts to set
    */
    public void setSalesForecasts(List<SalesForecast> salesForecasts) {
        this.salesForecasts = salesForecasts;
    }
    /**
     * Auto generated value setter.
     * @param quantitySalesForecastDetails the quantitySalesForecastDetails to set
    */
    public void setQuantitySalesForecastDetails(List<SalesForecastDetail> quantitySalesForecastDetails) {
        this.quantitySalesForecastDetails = quantitySalesForecastDetails;
    }
    /**
     * Auto generated value setter.
     * @param salesForecastHistorys the salesForecastHistorys to set
    */
    public void setSalesForecastHistorys(List<SalesForecastHistory> salesForecastHistorys) {
        this.salesForecastHistorys = salesForecastHistorys;
    }
    /**
     * Auto generated value setter.
     * @param salesOpportunitys the salesOpportunitys to set
    */
    public void setSalesOpportunitys(List<SalesOpportunity> salesOpportunitys) {
        this.salesOpportunitys = salesOpportunitys;
    }
    /**
     * Auto generated value setter.
     * @param salesOpportunityHistorys the salesOpportunityHistorys to set
    */
    public void setSalesOpportunityHistorys(List<SalesOpportunityHistory> salesOpportunityHistorys) {
        this.salesOpportunityHistorys = salesOpportunityHistorys;
    }
    /**
     * Auto generated value setter.
     * @param currencyShipments the currencyShipments to set
    */
    public void setCurrencyShipments(List<Shipment> currencyShipments) {
        this.currencyShipments = currencyShipments;
    }
    /**
     * Auto generated value setter.
     * @param dimensionShipmentBoxTypes the dimensionShipmentBoxTypes to set
    */
    public void setDimensionShipmentBoxTypes(List<ShipmentBoxType> dimensionShipmentBoxTypes) {
        this.dimensionShipmentBoxTypes = dimensionShipmentBoxTypes;
    }
    /**
     * Auto generated value setter.
     * @param weightShipmentBoxTypes the weightShipmentBoxTypes to set
    */
    public void setWeightShipmentBoxTypes(List<ShipmentBoxType> weightShipmentBoxTypes) {
        this.weightShipmentBoxTypes = weightShipmentBoxTypes;
    }
    /**
     * Auto generated value setter.
     * @param weightShipmentCostEstimates the weightShipmentCostEstimates to set
    */
    public void setWeightShipmentCostEstimates(List<ShipmentCostEstimate> weightShipmentCostEstimates) {
        this.weightShipmentCostEstimates = weightShipmentCostEstimates;
    }
    /**
     * Auto generated value setter.
     * @param quantityShipmentCostEstimates the quantityShipmentCostEstimates to set
    */
    public void setQuantityShipmentCostEstimates(List<ShipmentCostEstimate> quantityShipmentCostEstimates) {
        this.quantityShipmentCostEstimates = quantityShipmentCostEstimates;
    }
    /**
     * Auto generated value setter.
     * @param priceShipmentCostEstimates the priceShipmentCostEstimates to set
    */
    public void setPriceShipmentCostEstimates(List<ShipmentCostEstimate> priceShipmentCostEstimates) {
        this.priceShipmentCostEstimates = priceShipmentCostEstimates;
    }
    /**
     * Auto generated value setter.
     * @param weightShipmentPackages the weightShipmentPackages to set
    */
    public void setWeightShipmentPackages(List<ShipmentPackage> weightShipmentPackages) {
        this.weightShipmentPackages = weightShipmentPackages;
    }
    /**
     * Auto generated value setter.
     * @param currencyShipmentPackageRouteSegs the currencyShipmentPackageRouteSegs to set
    */
    public void setCurrencyShipmentPackageRouteSegs(List<ShipmentPackageRouteSeg> currencyShipmentPackageRouteSegs) {
        this.currencyShipmentPackageRouteSegs = currencyShipmentPackageRouteSegs;
    }
    /**
     * Auto generated value setter.
     * @param currencyShipmentRouteSegments the currencyShipmentRouteSegments to set
    */
    public void setCurrencyShipmentRouteSegments(List<ShipmentRouteSegment> currencyShipmentRouteSegments) {
        this.currencyShipmentRouteSegments = currencyShipmentRouteSegments;
    }
    /**
     * Auto generated value setter.
     * @param billingWeightShipmentRouteSegments the billingWeightShipmentRouteSegments to set
    */
    public void setBillingWeightShipmentRouteSegments(List<ShipmentRouteSegment> billingWeightShipmentRouteSegments) {
        this.billingWeightShipmentRouteSegments = billingWeightShipmentRouteSegments;
    }
    /**
     * Auto generated value setter.
     * @param useTimeSubscriptions the useTimeSubscriptions to set
    */
    public void setUseTimeSubscriptions(List<Subscription> useTimeSubscriptions) {
        this.useTimeSubscriptions = useTimeSubscriptions;
    }
    /**
     * Auto generated value setter.
     * @param cancelTimeSubscriptions the cancelTimeSubscriptions to set
    */
    public void setCancelTimeSubscriptions(List<Subscription> cancelTimeSubscriptions) {
        this.cancelTimeSubscriptions = cancelTimeSubscriptions;
    }
    /**
     * Auto generated value setter.
     * @param availableTimeSubscriptions the availableTimeSubscriptions to set
    */
    public void setAvailableTimeSubscriptions(List<Subscription> availableTimeSubscriptions) {
        this.availableTimeSubscriptions = availableTimeSubscriptions;
    }
    /**
     * Auto generated value setter.
     * @param maxLifeTimeSubscriptions the maxLifeTimeSubscriptions to set
    */
    public void setMaxLifeTimeSubscriptions(List<Subscription> maxLifeTimeSubscriptions) {
        this.maxLifeTimeSubscriptions = maxLifeTimeSubscriptions;
    }
    /**
     * Auto generated value setter.
     * @param currencySupplierProducts the currencySupplierProducts to set
    */
    public void setCurrencySupplierProducts(List<SupplierProduct> currencySupplierProducts) {
        this.currencySupplierProducts = currencySupplierProducts;
    }
    /**
     * Auto generated value setter.
     * @param quantitySupplierProducts the quantitySupplierProducts to set
    */
    public void setQuantitySupplierProducts(List<SupplierProduct> quantitySupplierProducts) {
        this.quantitySupplierProducts = quantitySupplierProducts;
    }
    /**
     * Auto generated value setter.
     * @param supplierProductFeatures the supplierProductFeatures to set
    */
    public void setSupplierProductFeatures(List<SupplierProductFeature> supplierProductFeatures) {
        this.supplierProductFeatures = supplierProductFeatures;
    }
    /**
     * Auto generated value setter.
     * @param mainUomConversions the mainUomConversions to set
    */
    public void setMainUomConversions(List<UomConversion> mainUomConversions) {
        this.mainUomConversions = mainUomConversions;
    }
    /**
     * Auto generated value setter.
     * @param convToUomConversions the convToUomConversions to set
    */
    public void setConvToUomConversions(List<UomConversion> convToUomConversions) {
        this.convToUomConversions = convToUomConversions;
    }
    /**
     * Auto generated value setter.
     * @param datedMainUomConversionDateds the datedMainUomConversionDateds to set
    */
    public void setDatedMainUomConversionDateds(List<UomConversionDated> datedMainUomConversionDateds) {
        this.datedMainUomConversionDateds = datedMainUomConversionDateds;
    }
    /**
     * Auto generated value setter.
     * @param datedConvToUomConversionDateds the datedConvToUomConversionDateds to set
    */
    public void setDatedConvToUomConversionDateds(List<UomConversionDated> datedConvToUomConversionDateds) {
        this.datedConvToUomConversionDateds = datedConvToUomConversionDateds;
    }
    /**
     * Auto generated value setter.
     * @param moneyWorkEfforts the moneyWorkEfforts to set
    */
    public void setMoneyWorkEfforts(List<WorkEffort> moneyWorkEfforts) {
        this.moneyWorkEfforts = moneyWorkEfforts;
    }

    /**
     * Auto generated method that add item to collection.
     */
    public void addCurrencyOldPartyRate(OldPartyRate currencyOldPartyRate) {
        if (this.currencyOldPartyRates == null) {
            this.currencyOldPartyRates = new ArrayList<OldPartyRate>();
        }
        this.currencyOldPartyRates.add(currencyOldPartyRate);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeCurrencyOldPartyRate(OldPartyRate currencyOldPartyRate) {
        if (this.currencyOldPartyRates == null) {
            return;
        }
        this.currencyOldPartyRates.remove(currencyOldPartyRate);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearCurrencyOldPartyRate() {
        if (this.currencyOldPartyRates == null) {
            return;
        }
        this.currencyOldPartyRates.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addCurrencyProductFeaturePrice(ProductFeaturePrice currencyProductFeaturePrice) {
        if (this.currencyProductFeaturePrices == null) {
            this.currencyProductFeaturePrices = new ArrayList<ProductFeaturePrice>();
        }
        this.currencyProductFeaturePrices.add(currencyProductFeaturePrice);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeCurrencyProductFeaturePrice(ProductFeaturePrice currencyProductFeaturePrice) {
        if (this.currencyProductFeaturePrices == null) {
            return;
        }
        this.currencyProductFeaturePrices.remove(currencyProductFeaturePrice);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearCurrencyProductFeaturePrice() {
        if (this.currencyProductFeaturePrices == null) {
            return;
        }
        this.currencyProductFeaturePrices.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addCurrencyProductPrice(ProductPrice currencyProductPrice) {
        if (this.currencyProductPrices == null) {
            this.currencyProductPrices = new ArrayList<ProductPrice>();
        }
        this.currencyProductPrices.add(currencyProductPrice);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeCurrencyProductPrice(ProductPrice currencyProductPrice) {
        if (this.currencyProductPrices == null) {
            return;
        }
        this.currencyProductPrices.remove(currencyProductPrice);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearCurrencyProductPrice() {
        if (this.currencyProductPrices == null) {
            return;
        }
        this.currencyProductPrices.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addCurrencySupplierProduct(SupplierProduct currencySupplierProduct) {
        if (this.currencySupplierProducts == null) {
            this.currencySupplierProducts = new ArrayList<SupplierProduct>();
        }
        this.currencySupplierProducts.add(currencySupplierProduct);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeCurrencySupplierProduct(SupplierProduct currencySupplierProduct) {
        if (this.currencySupplierProducts == null) {
            return;
        }
        this.currencySupplierProducts.remove(currencySupplierProduct);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearCurrencySupplierProduct() {
        if (this.currencySupplierProducts == null) {
            return;
        }
        this.currencySupplierProducts.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addMainUomConversion(UomConversion mainUomConversion) {
        if (this.mainUomConversions == null) {
            this.mainUomConversions = new ArrayList<UomConversion>();
        }
        this.mainUomConversions.add(mainUomConversion);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeMainUomConversion(UomConversion mainUomConversion) {
        if (this.mainUomConversions == null) {
            return;
        }
        this.mainUomConversions.remove(mainUomConversion);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearMainUomConversion() {
        if (this.mainUomConversions == null) {
            return;
        }
        this.mainUomConversions.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addConvToUomConversion(UomConversion convToUomConversion) {
        if (this.convToUomConversions == null) {
            this.convToUomConversions = new ArrayList<UomConversion>();
        }
        this.convToUomConversions.add(convToUomConversion);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeConvToUomConversion(UomConversion convToUomConversion) {
        if (this.convToUomConversions == null) {
            return;
        }
        this.convToUomConversions.remove(convToUomConversion);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearConvToUomConversion() {
        if (this.convToUomConversions == null) {
            return;
        }
        this.convToUomConversions.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addDatedMainUomConversionDated(UomConversionDated datedMainUomConversionDated) {
        if (this.datedMainUomConversionDateds == null) {
            this.datedMainUomConversionDateds = new ArrayList<UomConversionDated>();
        }
        this.datedMainUomConversionDateds.add(datedMainUomConversionDated);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeDatedMainUomConversionDated(UomConversionDated datedMainUomConversionDated) {
        if (this.datedMainUomConversionDateds == null) {
            return;
        }
        this.datedMainUomConversionDateds.remove(datedMainUomConversionDated);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearDatedMainUomConversionDated() {
        if (this.datedMainUomConversionDateds == null) {
            return;
        }
        this.datedMainUomConversionDateds.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addDatedConvToUomConversionDated(UomConversionDated datedConvToUomConversionDated) {
        if (this.datedConvToUomConversionDateds == null) {
            this.datedConvToUomConversionDateds = new ArrayList<UomConversionDated>();
        }
        this.datedConvToUomConversionDateds.add(datedConvToUomConversionDated);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeDatedConvToUomConversionDated(UomConversionDated datedConvToUomConversionDated) {
        if (this.datedConvToUomConversionDateds == null) {
            return;
        }
        this.datedConvToUomConversionDateds.remove(datedConvToUomConversionDated);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearDatedConvToUomConversionDated() {
        if (this.datedConvToUomConversionDateds == null) {
            return;
        }
        this.datedConvToUomConversionDateds.clear();
    }

    /** {@inheritDoc} */
    @Override
    public void fromMap(Map<String, Object> mapValue) {
        preInit();
        setUomId((String) mapValue.get("uomId"));
        setUomTypeId((String) mapValue.get("uomTypeId"));
        setAbbreviation((String) mapValue.get("abbreviation"));
        setDescription((String) mapValue.get("description"));
        setLastUpdatedStamp((Timestamp) mapValue.get("lastUpdatedStamp"));
        setLastUpdatedTxStamp((Timestamp) mapValue.get("lastUpdatedTxStamp"));
        setCreatedStamp((Timestamp) mapValue.get("createdStamp"));
        setCreatedTxStamp((Timestamp) mapValue.get("createdTxStamp"));
        postInit();
    }

    /** {@inheritDoc} */
    @Override
    public Map<String, Object> toMap() {
        Map<String, Object> mapValue = new FastMap<String, Object>();
        mapValue.put("uomId", getUomId());
        mapValue.put("uomTypeId", getUomTypeId());
        mapValue.put("abbreviation", getAbbreviation());
        mapValue.put("description", getDescription());
        mapValue.put("lastUpdatedStamp", getLastUpdatedStamp());
        mapValue.put("lastUpdatedTxStamp", getLastUpdatedTxStamp());
        mapValue.put("createdStamp", getCreatedStamp());
        mapValue.put("createdTxStamp", getCreatedTxStamp());
        return mapValue;
    }


}
