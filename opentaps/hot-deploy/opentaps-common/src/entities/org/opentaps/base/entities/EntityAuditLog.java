package org.opentaps.base.entities;

/*
 * Copyright (c) Open Source Strategies, Inc.
 *
 * Opentaps is free software: you can redistribute it and/or modify it
 * under the terms of the GNU Affero General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Opentaps is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with Opentaps.  If not, see <http://www.gnu.org/licenses/>.
 */

// DO NOT EDIT THIS FILE!  THIS IS AUTO GENERATED AND WILL GET WRITTEN OVER PERIODICALLY WHEN THE DATA MODEL CHANGES
// EXTEND THIS CLASS INSTEAD.

import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;

import javolution.util.FastMap;

import org.opentaps.foundation.entity.Entity;
import org.opentaps.foundation.entity.EntityFieldInterface;
import org.opentaps.foundation.repository.RepositoryException;
import org.opentaps.foundation.repository.RepositoryInterface;
import javax.persistence.*;
import org.hibernate.search.annotations.*;
import java.lang.String;
import java.sql.Timestamp;

/**
 * Auto generated base entity EntityAuditLog.
 */
@javax.persistence.Entity
@Table(name="ENTITY_AUDIT_LOG")
public class EntityAuditLog extends Entity {
static {
java.util.Map<String, String> fields = new java.util.HashMap<String, String>();
        fields.put("auditHistorySeqId", "AUDIT_HISTORY_SEQ_ID");
        fields.put("changedEntityName", "CHANGED_ENTITY_NAME");
        fields.put("changedFieldName", "CHANGED_FIELD_NAME");
        fields.put("pkCombinedValueText", "PK_COMBINED_VALUE_TEXT");
        fields.put("oldValueText", "OLD_VALUE_TEXT");
        fields.put("newValueText", "NEW_VALUE_TEXT");
        fields.put("changedDate", "CHANGED_DATE");
        fields.put("changedByInfo", "CHANGED_BY_INFO");
        fields.put("changedSessionInfo", "CHANGED_SESSION_INFO");
        fields.put("lastUpdatedStamp", "LAST_UPDATED_STAMP");
        fields.put("lastUpdatedTxStamp", "LAST_UPDATED_TX_STAMP");
        fields.put("createdStamp", "CREATED_STAMP");
        fields.put("createdTxStamp", "CREATED_TX_STAMP");
fieldMapColumns.put("EntityAuditLog", fields);
}
  public static enum Fields implements EntityFieldInterface<EntityAuditLog> {
    auditHistorySeqId("auditHistorySeqId"),
    changedEntityName("changedEntityName"),
    changedFieldName("changedFieldName"),
    pkCombinedValueText("pkCombinedValueText"),
    oldValueText("oldValueText"),
    newValueText("newValueText"),
    changedDate("changedDate"),
    changedByInfo("changedByInfo"),
    changedSessionInfo("changedSessionInfo"),
    lastUpdatedStamp("lastUpdatedStamp"),
    lastUpdatedTxStamp("lastUpdatedTxStamp"),
    createdStamp("createdStamp"),
    createdTxStamp("createdTxStamp");
    private final String fieldName;
    private Fields(String name) { fieldName = name; }
    /** {@inheritDoc} */
    public String getName() { return fieldName; }
    /** {@inheritDoc} */
    public String asc() { return fieldName + " ASC"; }
    /** {@inheritDoc} */
    public String desc() { return fieldName + " DESC"; }
  }

   @org.hibernate.annotations.GenericGenerator(name="EntityAuditLog_GEN",  strategy="org.opentaps.foundation.entity.hibernate.OpentapsIdentifierGenerator")
   @GeneratedValue(generator="EntityAuditLog_GEN")
   @Id
   @Column(name="AUDIT_HISTORY_SEQ_ID")
   private String auditHistorySeqId;
   @Column(name="CHANGED_ENTITY_NAME")
   private String changedEntityName;
   @Column(name="CHANGED_FIELD_NAME")
   private String changedFieldName;
   @Column(name="PK_COMBINED_VALUE_TEXT")
   private String pkCombinedValueText;
   @Column(name="OLD_VALUE_TEXT")
   private String oldValueText;
   @Column(name="NEW_VALUE_TEXT")
   private String newValueText;
   @Column(name="CHANGED_DATE")
   private Timestamp changedDate;
   @Column(name="CHANGED_BY_INFO")
   private String changedByInfo;
   @Column(name="CHANGED_SESSION_INFO")
   private String changedSessionInfo;
   @Column(name="LAST_UPDATED_STAMP")
   private Timestamp lastUpdatedStamp;
   @Column(name="LAST_UPDATED_TX_STAMP")
   private Timestamp lastUpdatedTxStamp;
   @Column(name="CREATED_STAMP")
   private Timestamp createdStamp;
   @Column(name="CREATED_TX_STAMP")
   private Timestamp createdTxStamp;

  /**
   * Default constructor.
   */
  public EntityAuditLog() {
      super();
      this.baseEntityName = "EntityAuditLog";
      this.isView = false;
      
      this.primaryKeyNames = new ArrayList<String>();
      this.primaryKeyNames.add("auditHistorySeqId");
      this.allFieldsNames = new ArrayList<String>();
      this.allFieldsNames.add("auditHistorySeqId");this.allFieldsNames.add("changedEntityName");this.allFieldsNames.add("changedFieldName");this.allFieldsNames.add("pkCombinedValueText");this.allFieldsNames.add("oldValueText");this.allFieldsNames.add("newValueText");this.allFieldsNames.add("changedDate");this.allFieldsNames.add("changedByInfo");this.allFieldsNames.add("changedSessionInfo");this.allFieldsNames.add("lastUpdatedStamp");this.allFieldsNames.add("lastUpdatedTxStamp");this.allFieldsNames.add("createdStamp");this.allFieldsNames.add("createdTxStamp");
      this.nonPrimaryKeyNames = new ArrayList<String>();
      this.nonPrimaryKeyNames.addAll(allFieldsNames);
      this.nonPrimaryKeyNames.removeAll(primaryKeyNames);
  }

  /**
   * Constructor with a repository.
   * @param repository a <code>RepositoryInterface</code> value
   */
  public EntityAuditLog(RepositoryInterface repository) {
      this();
      initRepository(repository);
  }

    /**
     * Auto generated value setter.
     * @param auditHistorySeqId the auditHistorySeqId to set
     */
    public void setAuditHistorySeqId(String auditHistorySeqId) {
        this.auditHistorySeqId = auditHistorySeqId;
    }
    /**
     * Auto generated value setter.
     * @param changedEntityName the changedEntityName to set
     */
    public void setChangedEntityName(String changedEntityName) {
        this.changedEntityName = changedEntityName;
    }
    /**
     * Auto generated value setter.
     * @param changedFieldName the changedFieldName to set
     */
    public void setChangedFieldName(String changedFieldName) {
        this.changedFieldName = changedFieldName;
    }
    /**
     * Auto generated value setter.
     * @param pkCombinedValueText the pkCombinedValueText to set
     */
    public void setPkCombinedValueText(String pkCombinedValueText) {
        this.pkCombinedValueText = pkCombinedValueText;
    }
    /**
     * Auto generated value setter.
     * @param oldValueText the oldValueText to set
     */
    public void setOldValueText(String oldValueText) {
        this.oldValueText = oldValueText;
    }
    /**
     * Auto generated value setter.
     * @param newValueText the newValueText to set
     */
    public void setNewValueText(String newValueText) {
        this.newValueText = newValueText;
    }
    /**
     * Auto generated value setter.
     * @param changedDate the changedDate to set
     */
    public void setChangedDate(Timestamp changedDate) {
        this.changedDate = changedDate;
    }
    /**
     * Auto generated value setter.
     * @param changedByInfo the changedByInfo to set
     */
    public void setChangedByInfo(String changedByInfo) {
        this.changedByInfo = changedByInfo;
    }
    /**
     * Auto generated value setter.
     * @param changedSessionInfo the changedSessionInfo to set
     */
    public void setChangedSessionInfo(String changedSessionInfo) {
        this.changedSessionInfo = changedSessionInfo;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedStamp the lastUpdatedStamp to set
     */
    public void setLastUpdatedStamp(Timestamp lastUpdatedStamp) {
        this.lastUpdatedStamp = lastUpdatedStamp;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedTxStamp the lastUpdatedTxStamp to set
     */
    public void setLastUpdatedTxStamp(Timestamp lastUpdatedTxStamp) {
        this.lastUpdatedTxStamp = lastUpdatedTxStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdStamp the createdStamp to set
     */
    public void setCreatedStamp(Timestamp createdStamp) {
        this.createdStamp = createdStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdTxStamp the createdTxStamp to set
     */
    public void setCreatedTxStamp(Timestamp createdTxStamp) {
        this.createdTxStamp = createdTxStamp;
    }

    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getAuditHistorySeqId() {
        return this.auditHistorySeqId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getChangedEntityName() {
        return this.changedEntityName;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getChangedFieldName() {
        return this.changedFieldName;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPkCombinedValueText() {
        return this.pkCombinedValueText;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getOldValueText() {
        return this.oldValueText;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getNewValueText() {
        return this.newValueText;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getChangedDate() {
        return this.changedDate;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getChangedByInfo() {
        return this.changedByInfo;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getChangedSessionInfo() {
        return this.changedSessionInfo;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedStamp() {
        return this.lastUpdatedStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedTxStamp() {
        return this.lastUpdatedTxStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedStamp() {
        return this.createdStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedTxStamp() {
        return this.createdTxStamp;
    }




    /** {@inheritDoc} */
    @Override
    public void fromMap(Map<String, Object> mapValue) {
        preInit();
        setAuditHistorySeqId((String) mapValue.get("auditHistorySeqId"));
        setChangedEntityName((String) mapValue.get("changedEntityName"));
        setChangedFieldName((String) mapValue.get("changedFieldName"));
        setPkCombinedValueText((String) mapValue.get("pkCombinedValueText"));
        setOldValueText((String) mapValue.get("oldValueText"));
        setNewValueText((String) mapValue.get("newValueText"));
        setChangedDate((Timestamp) mapValue.get("changedDate"));
        setChangedByInfo((String) mapValue.get("changedByInfo"));
        setChangedSessionInfo((String) mapValue.get("changedSessionInfo"));
        setLastUpdatedStamp((Timestamp) mapValue.get("lastUpdatedStamp"));
        setLastUpdatedTxStamp((Timestamp) mapValue.get("lastUpdatedTxStamp"));
        setCreatedStamp((Timestamp) mapValue.get("createdStamp"));
        setCreatedTxStamp((Timestamp) mapValue.get("createdTxStamp"));
        postInit();
    }

    /** {@inheritDoc} */
    @Override
    public Map<String, Object> toMap() {
        Map<String, Object> mapValue = new FastMap<String, Object>();
        mapValue.put("auditHistorySeqId", getAuditHistorySeqId());
        mapValue.put("changedEntityName", getChangedEntityName());
        mapValue.put("changedFieldName", getChangedFieldName());
        mapValue.put("pkCombinedValueText", getPkCombinedValueText());
        mapValue.put("oldValueText", getOldValueText());
        mapValue.put("newValueText", getNewValueText());
        mapValue.put("changedDate", getChangedDate());
        mapValue.put("changedByInfo", getChangedByInfo());
        mapValue.put("changedSessionInfo", getChangedSessionInfo());
        mapValue.put("lastUpdatedStamp", getLastUpdatedStamp());
        mapValue.put("lastUpdatedTxStamp", getLastUpdatedTxStamp());
        mapValue.put("createdStamp", getCreatedStamp());
        mapValue.put("createdTxStamp", getCreatedTxStamp());
        return mapValue;
    }


}
