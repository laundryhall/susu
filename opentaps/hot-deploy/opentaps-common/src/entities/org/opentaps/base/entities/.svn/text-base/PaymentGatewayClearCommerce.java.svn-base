package org.opentaps.base.entities;

/*
 * Copyright (c) Open Source Strategies, Inc.
 *
 * Opentaps is free software: you can redistribute it and/or modify it
 * under the terms of the GNU Affero General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Opentaps is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with Opentaps.  If not, see <http://www.gnu.org/licenses/>.
 */

// DO NOT EDIT THIS FILE!  THIS IS AUTO GENERATED AND WILL GET WRITTEN OVER PERIODICALLY WHEN THE DATA MODEL CHANGES
// EXTEND THIS CLASS INSTEAD.

import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;

import javolution.util.FastMap;

import org.opentaps.foundation.entity.Entity;
import org.opentaps.foundation.entity.EntityFieldInterface;
import org.opentaps.foundation.repository.RepositoryException;
import org.opentaps.foundation.repository.RepositoryInterface;
import javax.persistence.*;
import org.hibernate.search.annotations.*;
import java.lang.String;
import java.sql.Timestamp;

/**
 * Auto generated base entity PaymentGatewayClearCommerce.
 */
@javax.persistence.Entity
@Table(name="PAYMENT_GATEWAY_CLEAR_COMMERCE")
public class PaymentGatewayClearCommerce extends Entity {
static {
java.util.Map<String, String> fields = new java.util.HashMap<String, String>();
        fields.put("paymentGatewayConfigId", "PAYMENT_GATEWAY_CONFIG_ID");
        fields.put("sourceId", "SOURCE_ID");
        fields.put("groupId", "GROUP_ID");
        fields.put("clientId", "CLIENT_ID");
        fields.put("username", "USERNAME");
        fields.put("pwd", "PWD");
        fields.put("userAlias", "USER_ALIAS");
        fields.put("effectiveAlias", "EFFECTIVE_ALIAS");
        fields.put("processMode", "PROCESS_MODE");
        fields.put("serverURL", "SERVER_U_R_L");
        fields.put("enableCVM", "ENABLE_C_V_M");
        fields.put("lastUpdatedStamp", "LAST_UPDATED_STAMP");
        fields.put("lastUpdatedTxStamp", "LAST_UPDATED_TX_STAMP");
        fields.put("createdStamp", "CREATED_STAMP");
        fields.put("createdTxStamp", "CREATED_TX_STAMP");
fieldMapColumns.put("PaymentGatewayClearCommerce", fields);
}
  public static enum Fields implements EntityFieldInterface<PaymentGatewayClearCommerce> {
    paymentGatewayConfigId("paymentGatewayConfigId"),
    sourceId("sourceId"),
    groupId("groupId"),
    clientId("clientId"),
    username("username"),
    pwd("pwd"),
    userAlias("userAlias"),
    effectiveAlias("effectiveAlias"),
    processMode("processMode"),
    serverURL("serverURL"),
    enableCVM("enableCVM"),
    lastUpdatedStamp("lastUpdatedStamp"),
    lastUpdatedTxStamp("lastUpdatedTxStamp"),
    createdStamp("createdStamp"),
    createdTxStamp("createdTxStamp");
    private final String fieldName;
    private Fields(String name) { fieldName = name; }
    /** {@inheritDoc} */
    public String getName() { return fieldName; }
    /** {@inheritDoc} */
    public String asc() { return fieldName + " ASC"; }
    /** {@inheritDoc} */
    public String desc() { return fieldName + " DESC"; }
  }

   @org.hibernate.annotations.GenericGenerator(name="PaymentGatewayClearCommerce_GEN",  strategy="org.opentaps.foundation.entity.hibernate.OpentapsIdentifierGenerator")
   @GeneratedValue(generator="PaymentGatewayClearCommerce_GEN")
   @Id
   @Column(name="PAYMENT_GATEWAY_CONFIG_ID")
   private String paymentGatewayConfigId;
   @Column(name="SOURCE_ID")
   private String sourceId;
   @Column(name="GROUP_ID")
   private String groupId;
   @Column(name="CLIENT_ID")
   private String clientId;
   @Column(name="USERNAME")
   private String username;
   @Column(name="PWD")
   private String pwd;
   @Column(name="USER_ALIAS")
   private String userAlias;
   @Column(name="EFFECTIVE_ALIAS")
   private String effectiveAlias;
   @Column(name="PROCESS_MODE")
   private String processMode;
   @Column(name="SERVER_U_R_L")
   private String serverURL;
   @Column(name="ENABLE_C_V_M")
   private String enableCVM;
   @Column(name="LAST_UPDATED_STAMP")
   private Timestamp lastUpdatedStamp;
   @Column(name="LAST_UPDATED_TX_STAMP")
   private Timestamp lastUpdatedTxStamp;
   @Column(name="CREATED_STAMP")
   private Timestamp createdStamp;
   @Column(name="CREATED_TX_STAMP")
   private Timestamp createdTxStamp;
   @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="PAYMENT_GATEWAY_CONFIG_ID", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private PaymentGatewayConfig paymentGatewayConfig = null;

  /**
   * Default constructor.
   */
  public PaymentGatewayClearCommerce() {
      super();
      this.baseEntityName = "PaymentGatewayClearCommerce";
      this.isView = false;
      
      this.primaryKeyNames = new ArrayList<String>();
      this.primaryKeyNames.add("paymentGatewayConfigId");
      this.allFieldsNames = new ArrayList<String>();
      this.allFieldsNames.add("paymentGatewayConfigId");this.allFieldsNames.add("sourceId");this.allFieldsNames.add("groupId");this.allFieldsNames.add("clientId");this.allFieldsNames.add("username");this.allFieldsNames.add("pwd");this.allFieldsNames.add("userAlias");this.allFieldsNames.add("effectiveAlias");this.allFieldsNames.add("processMode");this.allFieldsNames.add("serverURL");this.allFieldsNames.add("enableCVM");this.allFieldsNames.add("lastUpdatedStamp");this.allFieldsNames.add("lastUpdatedTxStamp");this.allFieldsNames.add("createdStamp");this.allFieldsNames.add("createdTxStamp");
      this.nonPrimaryKeyNames = new ArrayList<String>();
      this.nonPrimaryKeyNames.addAll(allFieldsNames);
      this.nonPrimaryKeyNames.removeAll(primaryKeyNames);
  }

  /**
   * Constructor with a repository.
   * @param repository a <code>RepositoryInterface</code> value
   */
  public PaymentGatewayClearCommerce(RepositoryInterface repository) {
      this();
      initRepository(repository);
  }

    /**
     * Auto generated value setter.
     * @param paymentGatewayConfigId the paymentGatewayConfigId to set
     */
    public void setPaymentGatewayConfigId(String paymentGatewayConfigId) {
        this.paymentGatewayConfigId = paymentGatewayConfigId;
    }
    /**
     * Auto generated value setter.
     * @param sourceId the sourceId to set
     */
    public void setSourceId(String sourceId) {
        this.sourceId = sourceId;
    }
    /**
     * Auto generated value setter.
     * @param groupId the groupId to set
     */
    public void setGroupId(String groupId) {
        this.groupId = groupId;
    }
    /**
     * Auto generated value setter.
     * @param clientId the clientId to set
     */
    public void setClientId(String clientId) {
        this.clientId = clientId;
    }
    /**
     * Auto generated value setter.
     * @param username the username to set
     */
    public void setUsername(String username) {
        this.username = username;
    }
    /**
     * Auto generated value setter.
     * @param pwd the pwd to set
     */
    public void setPwd(String pwd) {
        this.pwd = pwd;
    }
    /**
     * Auto generated value setter.
     * @param userAlias the userAlias to set
     */
    public void setUserAlias(String userAlias) {
        this.userAlias = userAlias;
    }
    /**
     * Auto generated value setter.
     * @param effectiveAlias the effectiveAlias to set
     */
    public void setEffectiveAlias(String effectiveAlias) {
        this.effectiveAlias = effectiveAlias;
    }
    /**
     * Auto generated value setter.
     * @param processMode the processMode to set
     */
    public void setProcessMode(String processMode) {
        this.processMode = processMode;
    }
    /**
     * Auto generated value setter.
     * @param serverURL the serverURL to set
     */
    public void setServerURL(String serverURL) {
        this.serverURL = serverURL;
    }
    /**
     * Auto generated value setter.
     * @param enableCVM the enableCVM to set
     */
    public void setEnableCVM(String enableCVM) {
        this.enableCVM = enableCVM;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedStamp the lastUpdatedStamp to set
     */
    public void setLastUpdatedStamp(Timestamp lastUpdatedStamp) {
        this.lastUpdatedStamp = lastUpdatedStamp;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedTxStamp the lastUpdatedTxStamp to set
     */
    public void setLastUpdatedTxStamp(Timestamp lastUpdatedTxStamp) {
        this.lastUpdatedTxStamp = lastUpdatedTxStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdStamp the createdStamp to set
     */
    public void setCreatedStamp(Timestamp createdStamp) {
        this.createdStamp = createdStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdTxStamp the createdTxStamp to set
     */
    public void setCreatedTxStamp(Timestamp createdTxStamp) {
        this.createdTxStamp = createdTxStamp;
    }

    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPaymentGatewayConfigId() {
        return this.paymentGatewayConfigId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getSourceId() {
        return this.sourceId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getGroupId() {
        return this.groupId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getClientId() {
        return this.clientId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getUsername() {
        return this.username;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPwd() {
        return this.pwd;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getUserAlias() {
        return this.userAlias;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getEffectiveAlias() {
        return this.effectiveAlias;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getProcessMode() {
        return this.processMode;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getServerURL() {
        return this.serverURL;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getEnableCVM() {
        return this.enableCVM;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedStamp() {
        return this.lastUpdatedStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedTxStamp() {
        return this.lastUpdatedTxStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedStamp() {
        return this.createdStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedTxStamp() {
        return this.createdTxStamp;
    }

    /**
     * Auto generated method that gets the related <code>PaymentGatewayConfig</code> by the relation named <code>PaymentGatewayConfig</code>.
     * @return the <code>PaymentGatewayConfig</code>
     * @throws RepositoryException if an error occurs
     */
    public PaymentGatewayConfig getPaymentGatewayConfig() throws RepositoryException {
        if (this.paymentGatewayConfig == null) {
            this.paymentGatewayConfig = getRelatedOne(PaymentGatewayConfig.class, "PaymentGatewayConfig");
        }
        return this.paymentGatewayConfig;
    }

    /**
     * Auto generated value setter.
     * @param paymentGatewayConfig the paymentGatewayConfig to set
    */
    public void setPaymentGatewayConfig(PaymentGatewayConfig paymentGatewayConfig) {
        this.paymentGatewayConfig = paymentGatewayConfig;
    }


    /** {@inheritDoc} */
    @Override
    public void fromMap(Map<String, Object> mapValue) {
        preInit();
        setPaymentGatewayConfigId((String) mapValue.get("paymentGatewayConfigId"));
        setSourceId((String) mapValue.get("sourceId"));
        setGroupId((String) mapValue.get("groupId"));
        setClientId((String) mapValue.get("clientId"));
        setUsername((String) mapValue.get("username"));
        setPwd((String) mapValue.get("pwd"));
        setUserAlias((String) mapValue.get("userAlias"));
        setEffectiveAlias((String) mapValue.get("effectiveAlias"));
        setProcessMode((String) mapValue.get("processMode"));
        setServerURL((String) mapValue.get("serverURL"));
        setEnableCVM((String) mapValue.get("enableCVM"));
        setLastUpdatedStamp((Timestamp) mapValue.get("lastUpdatedStamp"));
        setLastUpdatedTxStamp((Timestamp) mapValue.get("lastUpdatedTxStamp"));
        setCreatedStamp((Timestamp) mapValue.get("createdStamp"));
        setCreatedTxStamp((Timestamp) mapValue.get("createdTxStamp"));
        postInit();
    }

    /** {@inheritDoc} */
    @Override
    public Map<String, Object> toMap() {
        Map<String, Object> mapValue = new FastMap<String, Object>();
        mapValue.put("paymentGatewayConfigId", getPaymentGatewayConfigId());
        mapValue.put("sourceId", getSourceId());
        mapValue.put("groupId", getGroupId());
        mapValue.put("clientId", getClientId());
        mapValue.put("username", getUsername());
        mapValue.put("pwd", getPwd());
        mapValue.put("userAlias", getUserAlias());
        mapValue.put("effectiveAlias", getEffectiveAlias());
        mapValue.put("processMode", getProcessMode());
        mapValue.put("serverURL", getServerURL());
        mapValue.put("enableCVM", getEnableCVM());
        mapValue.put("lastUpdatedStamp", getLastUpdatedStamp());
        mapValue.put("lastUpdatedTxStamp", getLastUpdatedTxStamp());
        mapValue.put("createdStamp", getCreatedStamp());
        mapValue.put("createdTxStamp", getCreatedTxStamp());
        return mapValue;
    }


}
