package org.opentaps.base.entities;

/*
 * Copyright (c) Open Source Strategies, Inc.
 *
 * Opentaps is free software: you can redistribute it and/or modify it
 * under the terms of the GNU Affero General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Opentaps is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with Opentaps.  If not, see <http://www.gnu.org/licenses/>.
 */

// DO NOT EDIT THIS FILE!  THIS IS AUTO GENERATED AND WILL GET WRITTEN OVER PERIODICALLY WHEN THE DATA MODEL CHANGES
// EXTEND THIS CLASS INSTEAD.

import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;

import javolution.util.FastMap;

import org.opentaps.foundation.entity.Entity;
import org.opentaps.foundation.entity.EntityFieldInterface;
import org.opentaps.foundation.repository.RepositoryException;
import org.opentaps.foundation.repository.RepositoryInterface;
import javax.persistence.*;
import org.hibernate.search.annotations.*;
import java.lang.String;
import java.math.BigDecimal;

/**
 * Auto generated base entity WorkOrderAndOrderItem.
 */
@javax.persistence.Entity
@NamedNativeQuery(name="selectWorkOrderAndOrderItems", query="SELECT OH.ORDER_TYPE_ID AS \"orderTypeId\",OH.STATUS_ID AS \"statusId\",OI.STATUS_ID AS \"statusId\",OI.ORDER_ITEM_TYPE_ID AS \"orderItemTypeId\",OI.QUANTITY AS \"quantity\",OI.UNIT_PRICE AS \"unitPrice\",WOIF.WORK_EFFORT_ID AS \"workEffortId\",WOIF.ORDER_ID AS \"orderId\",WOIF.ORDER_ITEM_SEQ_ID AS \"orderItemSeqId\",WOIF.QUANTITY_FULFILLED AS \"quantityFulfilled\" FROM WORK_ORDER_ITEM_FULFILLMENT WOIF INNER JOIN ORDER_HEADER OH ON WOIF.ORDER_ID = OH.ORDER_ID INNER JOIN ORDER_ITEM OI ON WOIF.ORDER_ID = OI.ORDER_ID AND WOIF.ORDER_ITEM_SEQ_ID = OI.ORDER_ITEM_SEQ_ID", resultSetMapping="WorkOrderAndOrderItemMapping")
@SqlResultSetMapping(name="WorkOrderAndOrderItemMapping", entities={
@EntityResult(entityClass=WorkOrderAndOrderItem.class, fields = {
@FieldResult(name="orderTypeId", column="orderTypeId")
,@FieldResult(name="orderStatusId", column="orderStatusId")
,@FieldResult(name="itemStatusId", column="itemStatusId")
,@FieldResult(name="orderItemTypeId", column="orderItemTypeId")
,@FieldResult(name="quantity", column="quantity")
,@FieldResult(name="unitPrice", column="unitPrice")
,@FieldResult(name="workEffortId", column="workEffortId")
,@FieldResult(name="orderId", column="orderId")
,@FieldResult(name="orderItemSeqId", column="orderItemSeqId")
,@FieldResult(name="quantityFulfilled", column="quantityFulfilled")
})})
@org.hibernate.annotations.Entity(mutable = false)
@org.hibernate.annotations.AccessType("field")
public class WorkOrderAndOrderItem extends Entity {
static {
java.util.Map<String, String> fields = new java.util.HashMap<String, String>();
        fields.put("orderTypeId", "OH.ORDER_TYPE_ID");
        fields.put("orderStatusId", "OH.STATUS_ID");
        fields.put("itemStatusId", "OI.STATUS_ID");
        fields.put("orderItemTypeId", "OI.ORDER_ITEM_TYPE_ID");
        fields.put("quantity", "OI.QUANTITY");
        fields.put("unitPrice", "OI.UNIT_PRICE");
        fields.put("workEffortId", "WOIF.WORK_EFFORT_ID");
        fields.put("orderId", "WOIF.ORDER_ID");
        fields.put("orderItemSeqId", "WOIF.ORDER_ITEM_SEQ_ID");
        fields.put("quantityFulfilled", "WOIF.QUANTITY_FULFILLED");
fieldMapColumns.put("WorkOrderAndOrderItem", fields);
}
  public static enum Fields implements EntityFieldInterface<WorkOrderAndOrderItem> {
    orderTypeId("orderTypeId"),
    orderStatusId("orderStatusId"),
    itemStatusId("itemStatusId"),
    orderItemTypeId("orderItemTypeId"),
    quantity("quantity"),
    unitPrice("unitPrice"),
    workEffortId("workEffortId"),
    orderId("orderId"),
    orderItemSeqId("orderItemSeqId"),
    quantityFulfilled("quantityFulfilled");
    private final String fieldName;
    private Fields(String name) { fieldName = name; }
    /** {@inheritDoc} */
    public String getName() { return fieldName; }
    /** {@inheritDoc} */
    public String asc() { return fieldName + " ASC"; }
    /** {@inheritDoc} */
    public String desc() { return fieldName + " DESC"; }
  }

    
   private String orderTypeId;
    
   private String orderStatusId;
    
   private String itemStatusId;
    
   private String orderItemTypeId;
    
   private BigDecimal quantity;
    
   private BigDecimal unitPrice;
    @Id
   private String workEffortId;
    
   private String orderId;
    
   private String orderItemSeqId;
    
   private BigDecimal quantityFulfilled;
   private transient OrderItem orderItem = null;
   @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="ORDER_ID", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private OrderHeader orderHeader = null;
   @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="WORK_EFFORT_ID", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private WorkEffort workEffort = null;

  /**
   * Default constructor.
   */
  public WorkOrderAndOrderItem() {
      super();
      this.baseEntityName = "WorkOrderAndOrderItem";
      this.isView = true;
      
      this.primaryKeyNames = new ArrayList<String>();
      this.primaryKeyNames.add("workEffortId");this.primaryKeyNames.add("orderId");this.primaryKeyNames.add("orderItemSeqId");
      this.allFieldsNames = new ArrayList<String>();
      this.allFieldsNames.add("orderTypeId");this.allFieldsNames.add("orderStatusId");this.allFieldsNames.add("itemStatusId");this.allFieldsNames.add("orderItemTypeId");this.allFieldsNames.add("quantity");this.allFieldsNames.add("unitPrice");this.allFieldsNames.add("workEffortId");this.allFieldsNames.add("orderId");this.allFieldsNames.add("orderItemSeqId");this.allFieldsNames.add("quantityFulfilled");
      this.nonPrimaryKeyNames = new ArrayList<String>();
      this.nonPrimaryKeyNames.addAll(allFieldsNames);
      this.nonPrimaryKeyNames.removeAll(primaryKeyNames);
  }

  /**
   * Constructor with a repository.
   * @param repository a <code>RepositoryInterface</code> value
   */
  public WorkOrderAndOrderItem(RepositoryInterface repository) {
      this();
      initRepository(repository);
  }

    /**
     * This is a view-entity, so the setter methods will be private to this class and for use in its fromMap constructor only
     */
    /**
     * Auto generated value setter.
     * @param orderTypeId the orderTypeId to set
     */
    public void setOrderTypeId(String orderTypeId) {
        this.orderTypeId = orderTypeId;
    }
    /**
     * Auto generated value setter.
     * @param orderStatusId the orderStatusId to set
     */
    public void setOrderStatusId(String orderStatusId) {
        this.orderStatusId = orderStatusId;
    }
    /**
     * Auto generated value setter.
     * @param itemStatusId the itemStatusId to set
     */
    public void setItemStatusId(String itemStatusId) {
        this.itemStatusId = itemStatusId;
    }
    /**
     * Auto generated value setter.
     * @param orderItemTypeId the orderItemTypeId to set
     */
    public void setOrderItemTypeId(String orderItemTypeId) {
        this.orderItemTypeId = orderItemTypeId;
    }
    /**
     * Auto generated value setter.
     * @param quantity the quantity to set
     */
    public void setQuantity(BigDecimal quantity) {
        this.quantity = quantity;
    }
    /**
     * Auto generated value setter.
     * @param unitPrice the unitPrice to set
     */
    public void setUnitPrice(BigDecimal unitPrice) {
        this.unitPrice = unitPrice;
    }
    /**
     * Auto generated value setter.
     * @param workEffortId the workEffortId to set
     */
    public void setWorkEffortId(String workEffortId) {
        this.workEffortId = workEffortId;
    }
    /**
     * Auto generated value setter.
     * @param orderId the orderId to set
     */
    public void setOrderId(String orderId) {
        this.orderId = orderId;
    }
    /**
     * Auto generated value setter.
     * @param orderItemSeqId the orderItemSeqId to set
     */
    public void setOrderItemSeqId(String orderItemSeqId) {
        this.orderItemSeqId = orderItemSeqId;
    }
    /**
     * Auto generated value setter.
     * @param quantityFulfilled the quantityFulfilled to set
     */
    public void setQuantityFulfilled(BigDecimal quantityFulfilled) {
        this.quantityFulfilled = quantityFulfilled;
    }

    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getOrderTypeId() {
        return this.orderTypeId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getOrderStatusId() {
        return this.orderStatusId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getItemStatusId() {
        return this.itemStatusId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getOrderItemTypeId() {
        return this.orderItemTypeId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getQuantity() {
        return this.quantity;
    }
    /**
     * Auto generated value accessor.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getUnitPrice() {
        return this.unitPrice;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getWorkEffortId() {
        return this.workEffortId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getOrderId() {
        return this.orderId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getOrderItemSeqId() {
        return this.orderItemSeqId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getQuantityFulfilled() {
        return this.quantityFulfilled;
    }

    /**
     * Auto generated method that gets the related <code>OrderItem</code> by the relation named <code>OrderItem</code>.
     * @return the <code>OrderItem</code>
     * @throws RepositoryException if an error occurs
     */
    public OrderItem getOrderItem() throws RepositoryException {
        if (this.orderItem == null) {
            this.orderItem = getRelatedOne(OrderItem.class, "OrderItem");
        }
        return this.orderItem;
    }
    /**
     * Auto generated method that gets the related <code>OrderHeader</code> by the relation named <code>OrderHeader</code>.
     * @return the <code>OrderHeader</code>
     * @throws RepositoryException if an error occurs
     */
    public OrderHeader getOrderHeader() throws RepositoryException {
        if (this.orderHeader == null) {
            this.orderHeader = getRelatedOne(OrderHeader.class, "OrderHeader");
        }
        return this.orderHeader;
    }
    /**
     * Auto generated method that gets the related <code>WorkEffort</code> by the relation named <code>WorkEffort</code>.
     * @return the <code>WorkEffort</code>
     * @throws RepositoryException if an error occurs
     */
    public WorkEffort getWorkEffort() throws RepositoryException {
        if (this.workEffort == null) {
            this.workEffort = getRelatedOne(WorkEffort.class, "WorkEffort");
        }
        return this.workEffort;
    }

    /**
     * Auto generated value setter.
     * @param orderItem the orderItem to set
    */
    public void setOrderItem(OrderItem orderItem) {
        this.orderItem = orderItem;
    }
    /**
     * Auto generated value setter.
     * @param orderHeader the orderHeader to set
    */
    public void setOrderHeader(OrderHeader orderHeader) {
        this.orderHeader = orderHeader;
    }
    /**
     * Auto generated value setter.
     * @param workEffort the workEffort to set
    */
    public void setWorkEffort(WorkEffort workEffort) {
        this.workEffort = workEffort;
    }


    /** {@inheritDoc} */
    @Override
    public void fromMap(Map<String, Object> mapValue) {
        preInit();
        setOrderTypeId((String) mapValue.get("orderTypeId"));
        setOrderStatusId((String) mapValue.get("orderStatusId"));
        setItemStatusId((String) mapValue.get("itemStatusId"));
        setOrderItemTypeId((String) mapValue.get("orderItemTypeId"));
        setQuantity(convertToBigDecimal(mapValue.get("quantity")));
        setUnitPrice(convertToBigDecimal(mapValue.get("unitPrice")));
        setWorkEffortId((String) mapValue.get("workEffortId"));
        setOrderId((String) mapValue.get("orderId"));
        setOrderItemSeqId((String) mapValue.get("orderItemSeqId"));
        setQuantityFulfilled(convertToBigDecimal(mapValue.get("quantityFulfilled")));
        postInit();
    }

    /** {@inheritDoc} */
    @Override
    public Map<String, Object> toMap() {
        Map<String, Object> mapValue = new FastMap<String, Object>();
        mapValue.put("orderTypeId", getOrderTypeId());
        mapValue.put("orderStatusId", getOrderStatusId());
        mapValue.put("itemStatusId", getItemStatusId());
        mapValue.put("orderItemTypeId", getOrderItemTypeId());
        mapValue.put("quantity", getQuantity());
        mapValue.put("unitPrice", getUnitPrice());
        mapValue.put("workEffortId", getWorkEffortId());
        mapValue.put("orderId", getOrderId());
        mapValue.put("orderItemSeqId", getOrderItemSeqId());
        mapValue.put("quantityFulfilled", getQuantityFulfilled());
        return mapValue;
    }


}
