package org.opentaps.base.entities;

/*
 * Copyright (c) Open Source Strategies, Inc.
 *
 * Opentaps is free software: you can redistribute it and/or modify it
 * under the terms of the GNU Affero General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Opentaps is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with Opentaps.  If not, see <http://www.gnu.org/licenses/>.
 */

// DO NOT EDIT THIS FILE!  THIS IS AUTO GENERATED AND WILL GET WRITTEN OVER PERIODICALLY WHEN THE DATA MODEL CHANGES
// EXTEND THIS CLASS INSTEAD.

import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;

import javolution.util.FastMap;

import org.opentaps.foundation.entity.Entity;
import org.opentaps.foundation.entity.EntityFieldInterface;
import org.opentaps.foundation.repository.RepositoryException;
import org.opentaps.foundation.repository.RepositoryInterface;
import javax.persistence.*;
import org.hibernate.search.annotations.*;
import java.lang.String;
import java.sql.Timestamp;

/**
 * Auto generated base entity ShoppingList.
 */
@javax.persistence.Entity
@Table(name="SHOPPING_LIST")
public class ShoppingList extends Entity {
static {
java.util.Map<String, String> fields = new java.util.HashMap<String, String>();
        fields.put("shoppingListId", "SHOPPING_LIST_ID");
        fields.put("shoppingListTypeId", "SHOPPING_LIST_TYPE_ID");
        fields.put("parentShoppingListId", "PARENT_SHOPPING_LIST_ID");
        fields.put("productStoreId", "PRODUCT_STORE_ID");
        fields.put("visitorId", "VISITOR_ID");
        fields.put("partyId", "PARTY_ID");
        fields.put("listName", "LIST_NAME");
        fields.put("description", "DESCRIPTION");
        fields.put("isPublic", "IS_PUBLIC");
        fields.put("isActive", "IS_ACTIVE");
        fields.put("currencyUom", "CURRENCY_UOM");
        fields.put("shipmentMethodTypeId", "SHIPMENT_METHOD_TYPE_ID");
        fields.put("carrierPartyId", "CARRIER_PARTY_ID");
        fields.put("carrierRoleTypeId", "CARRIER_ROLE_TYPE_ID");
        fields.put("contactMechId", "CONTACT_MECH_ID");
        fields.put("paymentMethodId", "PAYMENT_METHOD_ID");
        fields.put("recurrenceInfoId", "RECURRENCE_INFO_ID");
        fields.put("lastOrderedDate", "LAST_ORDERED_DATE");
        fields.put("lastAdminModified", "LAST_ADMIN_MODIFIED");
        fields.put("productPromoCodeId", "PRODUCT_PROMO_CODE_ID");
        fields.put("lastUpdatedStamp", "LAST_UPDATED_STAMP");
        fields.put("lastUpdatedTxStamp", "LAST_UPDATED_TX_STAMP");
        fields.put("createdStamp", "CREATED_STAMP");
        fields.put("createdTxStamp", "CREATED_TX_STAMP");
fieldMapColumns.put("ShoppingList", fields);
}
  public static enum Fields implements EntityFieldInterface<ShoppingList> {
    shoppingListId("shoppingListId"),
    shoppingListTypeId("shoppingListTypeId"),
    parentShoppingListId("parentShoppingListId"),
    productStoreId("productStoreId"),
    visitorId("visitorId"),
    partyId("partyId"),
    listName("listName"),
    description("description"),
    isPublic("isPublic"),
    isActive("isActive"),
    currencyUom("currencyUom"),
    shipmentMethodTypeId("shipmentMethodTypeId"),
    carrierPartyId("carrierPartyId"),
    carrierRoleTypeId("carrierRoleTypeId"),
    contactMechId("contactMechId"),
    paymentMethodId("paymentMethodId"),
    recurrenceInfoId("recurrenceInfoId"),
    lastOrderedDate("lastOrderedDate"),
    lastAdminModified("lastAdminModified"),
    productPromoCodeId("productPromoCodeId"),
    lastUpdatedStamp("lastUpdatedStamp"),
    lastUpdatedTxStamp("lastUpdatedTxStamp"),
    createdStamp("createdStamp"),
    createdTxStamp("createdTxStamp");
    private final String fieldName;
    private Fields(String name) { fieldName = name; }
    /** {@inheritDoc} */
    public String getName() { return fieldName; }
    /** {@inheritDoc} */
    public String asc() { return fieldName + " ASC"; }
    /** {@inheritDoc} */
    public String desc() { return fieldName + " DESC"; }
  }

   @org.hibernate.annotations.GenericGenerator(name="ShoppingList_GEN",  strategy="org.opentaps.foundation.entity.hibernate.OpentapsIdentifierGenerator")
   @GeneratedValue(generator="ShoppingList_GEN")
   @Id
   @Column(name="SHOPPING_LIST_ID")
   private String shoppingListId;
   @Column(name="SHOPPING_LIST_TYPE_ID")
   private String shoppingListTypeId;
   @Column(name="PARENT_SHOPPING_LIST_ID")
   private String parentShoppingListId;
   @Column(name="PRODUCT_STORE_ID")
   private String productStoreId;
   @Column(name="VISITOR_ID")
   private String visitorId;
   @Column(name="PARTY_ID")
   private String partyId;
   @Column(name="LIST_NAME")
   private String listName;
   @Column(name="DESCRIPTION")
   private String description;
   @Column(name="IS_PUBLIC")
   private String isPublic;
   @Column(name="IS_ACTIVE")
   private String isActive;
   @Column(name="CURRENCY_UOM")
   private String currencyUom;
   @Column(name="SHIPMENT_METHOD_TYPE_ID")
   private String shipmentMethodTypeId;
   @Column(name="CARRIER_PARTY_ID")
   private String carrierPartyId;
   @Column(name="CARRIER_ROLE_TYPE_ID")
   private String carrierRoleTypeId;
   @Column(name="CONTACT_MECH_ID")
   private String contactMechId;
   @Column(name="PAYMENT_METHOD_ID")
   private String paymentMethodId;
   @Column(name="RECURRENCE_INFO_ID")
   private String recurrenceInfoId;
   @Column(name="LAST_ORDERED_DATE")
   private Timestamp lastOrderedDate;
   @Column(name="LAST_ADMIN_MODIFIED")
   private Timestamp lastAdminModified;
   @Column(name="PRODUCT_PROMO_CODE_ID")
   private String productPromoCodeId;
   @Column(name="LAST_UPDATED_STAMP")
   private Timestamp lastUpdatedStamp;
   @Column(name="LAST_UPDATED_TX_STAMP")
   private Timestamp lastUpdatedTxStamp;
   @Column(name="CREATED_STAMP")
   private Timestamp createdStamp;
   @Column(name="CREATED_TX_STAMP")
   private Timestamp createdTxStamp;
   @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="PARENT_SHOPPING_LIST_ID", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private ShoppingList parentShoppingList = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="parentShoppingList", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="PARENT_SHOPPING_LIST_ID")
   
   private List<ShoppingList> siblingShoppingLists = null;
   @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="SHOPPING_LIST_TYPE_ID", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private ShoppingListType shoppingListType = null;
   @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="PRODUCT_STORE_ID", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private ProductStore productStore = null;
   @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="PARTY_ID", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private Party party = null;
   @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="VISITOR_ID", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private Visitor visitor = null;
   private transient List<ProductStoreShipmentMeth> productStoreShipmentMeths = null;
   private transient CarrierShipmentMethod carrierShipmentMethod = null;
   @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="CONTACT_MECH_ID", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private ContactMech contactMech = null;
   @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="CONTACT_MECH_ID", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private PostalAddress postalAddress = null;
   @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="PAYMENT_METHOD_ID", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private PaymentMethod paymentMethod = null;
   @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="RECURRENCE_INFO_ID", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private RecurrenceInfo recurrenceInfo = null;
   @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="PRODUCT_PROMO_CODE_ID", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private ProductPromoCode productPromoCode = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="autoOrderShoppingList", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="AUTO_ORDER_SHOPPING_LIST_ID")
   
   private List<OrderHeader> autoOrderOrderHeaders = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="parentShoppingList", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="PARENT_SHOPPING_LIST_ID")
   
   private List<ShoppingList> childShoppingLists = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="shoppingList", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="SHOPPING_LIST_ID")
   
   private List<ShoppingListItem> shoppingListItems = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="shoppingList", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="SHOPPING_LIST_ID")
   
   private List<ShoppingListItemSurvey> shoppingListItemSurveys = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="shoppingList", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="SHOPPING_LIST_ID")
   
   private List<ShoppingListWorkEffort> shoppingListWorkEfforts = null;

  /**
   * Default constructor.
   */
  public ShoppingList() {
      super();
      this.baseEntityName = "ShoppingList";
      this.isView = false;
      
      this.primaryKeyNames = new ArrayList<String>();
      this.primaryKeyNames.add("shoppingListId");
      this.allFieldsNames = new ArrayList<String>();
      this.allFieldsNames.add("shoppingListId");this.allFieldsNames.add("shoppingListTypeId");this.allFieldsNames.add("parentShoppingListId");this.allFieldsNames.add("productStoreId");this.allFieldsNames.add("visitorId");this.allFieldsNames.add("partyId");this.allFieldsNames.add("listName");this.allFieldsNames.add("description");this.allFieldsNames.add("isPublic");this.allFieldsNames.add("isActive");this.allFieldsNames.add("currencyUom");this.allFieldsNames.add("shipmentMethodTypeId");this.allFieldsNames.add("carrierPartyId");this.allFieldsNames.add("carrierRoleTypeId");this.allFieldsNames.add("contactMechId");this.allFieldsNames.add("paymentMethodId");this.allFieldsNames.add("recurrenceInfoId");this.allFieldsNames.add("lastOrderedDate");this.allFieldsNames.add("lastAdminModified");this.allFieldsNames.add("productPromoCodeId");this.allFieldsNames.add("lastUpdatedStamp");this.allFieldsNames.add("lastUpdatedTxStamp");this.allFieldsNames.add("createdStamp");this.allFieldsNames.add("createdTxStamp");
      this.nonPrimaryKeyNames = new ArrayList<String>();
      this.nonPrimaryKeyNames.addAll(allFieldsNames);
      this.nonPrimaryKeyNames.removeAll(primaryKeyNames);
  }

  /**
   * Constructor with a repository.
   * @param repository a <code>RepositoryInterface</code> value
   */
  public ShoppingList(RepositoryInterface repository) {
      this();
      initRepository(repository);
  }

    /**
     * Auto generated value setter.
     * @param shoppingListId the shoppingListId to set
     */
    public void setShoppingListId(String shoppingListId) {
        this.shoppingListId = shoppingListId;
    }
    /**
     * Auto generated value setter.
     * @param shoppingListTypeId the shoppingListTypeId to set
     */
    public void setShoppingListTypeId(String shoppingListTypeId) {
        this.shoppingListTypeId = shoppingListTypeId;
    }
    /**
     * Auto generated value setter.
     * @param parentShoppingListId the parentShoppingListId to set
     */
    public void setParentShoppingListId(String parentShoppingListId) {
        this.parentShoppingListId = parentShoppingListId;
    }
    /**
     * Auto generated value setter.
     * @param productStoreId the productStoreId to set
     */
    public void setProductStoreId(String productStoreId) {
        this.productStoreId = productStoreId;
    }
    /**
     * Auto generated value setter.
     * @param visitorId the visitorId to set
     */
    public void setVisitorId(String visitorId) {
        this.visitorId = visitorId;
    }
    /**
     * Auto generated value setter.
     * @param partyId the partyId to set
     */
    public void setPartyId(String partyId) {
        this.partyId = partyId;
    }
    /**
     * Auto generated value setter.
     * @param listName the listName to set
     */
    public void setListName(String listName) {
        this.listName = listName;
    }
    /**
     * Auto generated value setter.
     * @param description the description to set
     */
    public void setDescription(String description) {
        this.description = description;
    }
    /**
     * Auto generated value setter.
     * @param isPublic the isPublic to set
     */
    public void setIsPublic(String isPublic) {
        this.isPublic = isPublic;
    }
    /**
     * Auto generated value setter.
     * @param isActive the isActive to set
     */
    public void setIsActive(String isActive) {
        this.isActive = isActive;
    }
    /**
     * Auto generated value setter.
     * @param currencyUom the currencyUom to set
     */
    public void setCurrencyUom(String currencyUom) {
        this.currencyUom = currencyUom;
    }
    /**
     * Auto generated value setter.
     * @param shipmentMethodTypeId the shipmentMethodTypeId to set
     */
    public void setShipmentMethodTypeId(String shipmentMethodTypeId) {
        this.shipmentMethodTypeId = shipmentMethodTypeId;
    }
    /**
     * Auto generated value setter.
     * @param carrierPartyId the carrierPartyId to set
     */
    public void setCarrierPartyId(String carrierPartyId) {
        this.carrierPartyId = carrierPartyId;
    }
    /**
     * Auto generated value setter.
     * @param carrierRoleTypeId the carrierRoleTypeId to set
     */
    public void setCarrierRoleTypeId(String carrierRoleTypeId) {
        this.carrierRoleTypeId = carrierRoleTypeId;
    }
    /**
     * Auto generated value setter.
     * @param contactMechId the contactMechId to set
     */
    public void setContactMechId(String contactMechId) {
        this.contactMechId = contactMechId;
    }
    /**
     * Auto generated value setter.
     * @param paymentMethodId the paymentMethodId to set
     */
    public void setPaymentMethodId(String paymentMethodId) {
        this.paymentMethodId = paymentMethodId;
    }
    /**
     * Auto generated value setter.
     * @param recurrenceInfoId the recurrenceInfoId to set
     */
    public void setRecurrenceInfoId(String recurrenceInfoId) {
        this.recurrenceInfoId = recurrenceInfoId;
    }
    /**
     * Auto generated value setter.
     * @param lastOrderedDate the lastOrderedDate to set
     */
    public void setLastOrderedDate(Timestamp lastOrderedDate) {
        this.lastOrderedDate = lastOrderedDate;
    }
    /**
     * Auto generated value setter.
     * @param lastAdminModified the lastAdminModified to set
     */
    public void setLastAdminModified(Timestamp lastAdminModified) {
        this.lastAdminModified = lastAdminModified;
    }
    /**
     * Auto generated value setter.
     * @param productPromoCodeId the productPromoCodeId to set
     */
    public void setProductPromoCodeId(String productPromoCodeId) {
        this.productPromoCodeId = productPromoCodeId;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedStamp the lastUpdatedStamp to set
     */
    public void setLastUpdatedStamp(Timestamp lastUpdatedStamp) {
        this.lastUpdatedStamp = lastUpdatedStamp;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedTxStamp the lastUpdatedTxStamp to set
     */
    public void setLastUpdatedTxStamp(Timestamp lastUpdatedTxStamp) {
        this.lastUpdatedTxStamp = lastUpdatedTxStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdStamp the createdStamp to set
     */
    public void setCreatedStamp(Timestamp createdStamp) {
        this.createdStamp = createdStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdTxStamp the createdTxStamp to set
     */
    public void setCreatedTxStamp(Timestamp createdTxStamp) {
        this.createdTxStamp = createdTxStamp;
    }

    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getShoppingListId() {
        return this.shoppingListId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getShoppingListTypeId() {
        return this.shoppingListTypeId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getParentShoppingListId() {
        return this.parentShoppingListId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getProductStoreId() {
        return this.productStoreId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getVisitorId() {
        return this.visitorId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPartyId() {
        return this.partyId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getListName() {
        return this.listName;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getDescription() {
        return this.description;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getIsPublic() {
        return this.isPublic;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getIsActive() {
        return this.isActive;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getCurrencyUom() {
        return this.currencyUom;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getShipmentMethodTypeId() {
        return this.shipmentMethodTypeId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getCarrierPartyId() {
        return this.carrierPartyId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getCarrierRoleTypeId() {
        return this.carrierRoleTypeId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getContactMechId() {
        return this.contactMechId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPaymentMethodId() {
        return this.paymentMethodId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getRecurrenceInfoId() {
        return this.recurrenceInfoId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastOrderedDate() {
        return this.lastOrderedDate;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastAdminModified() {
        return this.lastAdminModified;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getProductPromoCodeId() {
        return this.productPromoCodeId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedStamp() {
        return this.lastUpdatedStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedTxStamp() {
        return this.lastUpdatedTxStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedStamp() {
        return this.createdStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedTxStamp() {
        return this.createdTxStamp;
    }

    /**
     * Auto generated method that gets the related <code>ShoppingList</code> by the relation named <code>ParentShoppingList</code>.
     * @return the <code>ShoppingList</code>
     * @throws RepositoryException if an error occurs
     */
    public ShoppingList getParentShoppingList() throws RepositoryException {
        if (this.parentShoppingList == null) {
            this.parentShoppingList = getRelatedOne(ShoppingList.class, "ParentShoppingList");
        }
        return this.parentShoppingList;
    }
    /**
     * Auto generated method that gets the related <code>ShoppingList</code> by the relation named <code>SiblingShoppingList</code>.
     * @return the list of <code>ShoppingList</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ShoppingList> getSiblingShoppingLists() throws RepositoryException {
        if (this.siblingShoppingLists == null) {
            this.siblingShoppingLists = getRelated(ShoppingList.class, "SiblingShoppingList");
        }
        return this.siblingShoppingLists;
    }
    /**
     * Auto generated method that gets the related <code>ShoppingListType</code> by the relation named <code>ShoppingListType</code>.
     * @return the <code>ShoppingListType</code>
     * @throws RepositoryException if an error occurs
     */
    public ShoppingListType getShoppingListType() throws RepositoryException {
        if (this.shoppingListType == null) {
            this.shoppingListType = getRelatedOne(ShoppingListType.class, "ShoppingListType");
        }
        return this.shoppingListType;
    }
    /**
     * Auto generated method that gets the related <code>ProductStore</code> by the relation named <code>ProductStore</code>.
     * @return the <code>ProductStore</code>
     * @throws RepositoryException if an error occurs
     */
    public ProductStore getProductStore() throws RepositoryException {
        if (this.productStore == null) {
            this.productStore = getRelatedOne(ProductStore.class, "ProductStore");
        }
        return this.productStore;
    }
    /**
     * Auto generated method that gets the related <code>Party</code> by the relation named <code>Party</code>.
     * @return the <code>Party</code>
     * @throws RepositoryException if an error occurs
     */
    public Party getParty() throws RepositoryException {
        if (this.party == null) {
            this.party = getRelatedOne(Party.class, "Party");
        }
        return this.party;
    }
    /**
     * Auto generated method that gets the related <code>Visitor</code> by the relation named <code>Visitor</code>.
     * @return the <code>Visitor</code>
     * @throws RepositoryException if an error occurs
     */
    public Visitor getVisitor() throws RepositoryException {
        if (this.visitor == null) {
            this.visitor = getRelatedOne(Visitor.class, "Visitor");
        }
        return this.visitor;
    }
    /**
     * Auto generated method that gets the related <code>ProductStoreShipmentMeth</code> by the relation named <code>ProductStoreShipmentMeth</code>.
     * @return the list of <code>ProductStoreShipmentMeth</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ProductStoreShipmentMeth> getProductStoreShipmentMeths() throws RepositoryException {
        if (this.productStoreShipmentMeths == null) {
            this.productStoreShipmentMeths = getRelated(ProductStoreShipmentMeth.class, "ProductStoreShipmentMeth");
        }
        return this.productStoreShipmentMeths;
    }
    /**
     * Auto generated method that gets the related <code>CarrierShipmentMethod</code> by the relation named <code>CarrierShipmentMethod</code>.
     * @return the <code>CarrierShipmentMethod</code>
     * @throws RepositoryException if an error occurs
     */
    public CarrierShipmentMethod getCarrierShipmentMethod() throws RepositoryException {
        if (this.carrierShipmentMethod == null) {
            this.carrierShipmentMethod = getRelatedOne(CarrierShipmentMethod.class, "CarrierShipmentMethod");
        }
        return this.carrierShipmentMethod;
    }
    /**
     * Auto generated method that gets the related <code>ContactMech</code> by the relation named <code>ContactMech</code>.
     * @return the <code>ContactMech</code>
     * @throws RepositoryException if an error occurs
     */
    public ContactMech getContactMech() throws RepositoryException {
        if (this.contactMech == null) {
            this.contactMech = getRelatedOne(ContactMech.class, "ContactMech");
        }
        return this.contactMech;
    }
    /**
     * Auto generated method that gets the related <code>PostalAddress</code> by the relation named <code>PostalAddress</code>.
     * @return the <code>PostalAddress</code>
     * @throws RepositoryException if an error occurs
     */
    public PostalAddress getPostalAddress() throws RepositoryException {
        if (this.postalAddress == null) {
            this.postalAddress = getRelatedOne(PostalAddress.class, "PostalAddress");
        }
        return this.postalAddress;
    }
    /**
     * Auto generated method that gets the related <code>PaymentMethod</code> by the relation named <code>PaymentMethod</code>.
     * @return the <code>PaymentMethod</code>
     * @throws RepositoryException if an error occurs
     */
    public PaymentMethod getPaymentMethod() throws RepositoryException {
        if (this.paymentMethod == null) {
            this.paymentMethod = getRelatedOne(PaymentMethod.class, "PaymentMethod");
        }
        return this.paymentMethod;
    }
    /**
     * Auto generated method that gets the related <code>RecurrenceInfo</code> by the relation named <code>RecurrenceInfo</code>.
     * @return the <code>RecurrenceInfo</code>
     * @throws RepositoryException if an error occurs
     */
    public RecurrenceInfo getRecurrenceInfo() throws RepositoryException {
        if (this.recurrenceInfo == null) {
            this.recurrenceInfo = getRelatedOne(RecurrenceInfo.class, "RecurrenceInfo");
        }
        return this.recurrenceInfo;
    }
    /**
     * Auto generated method that gets the related <code>ProductPromoCode</code> by the relation named <code>ProductPromoCode</code>.
     * @return the <code>ProductPromoCode</code>
     * @throws RepositoryException if an error occurs
     */
    public ProductPromoCode getProductPromoCode() throws RepositoryException {
        if (this.productPromoCode == null) {
            this.productPromoCode = getRelatedOne(ProductPromoCode.class, "ProductPromoCode");
        }
        return this.productPromoCode;
    }
    /**
     * Auto generated method that gets the related <code>OrderHeader</code> by the relation named <code>AutoOrderOrderHeader</code>.
     * @return the list of <code>OrderHeader</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends OrderHeader> getAutoOrderOrderHeaders() throws RepositoryException {
        if (this.autoOrderOrderHeaders == null) {
            this.autoOrderOrderHeaders = getRelated(OrderHeader.class, "AutoOrderOrderHeader");
        }
        return this.autoOrderOrderHeaders;
    }
    /**
     * Auto generated method that gets the related <code>ShoppingList</code> by the relation named <code>ChildShoppingList</code>.
     * @return the list of <code>ShoppingList</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ShoppingList> getChildShoppingLists() throws RepositoryException {
        if (this.childShoppingLists == null) {
            this.childShoppingLists = getRelated(ShoppingList.class, "ChildShoppingList");
        }
        return this.childShoppingLists;
    }
    /**
     * Auto generated method that gets the related <code>ShoppingListItem</code> by the relation named <code>ShoppingListItem</code>.
     * @return the list of <code>ShoppingListItem</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ShoppingListItem> getShoppingListItems() throws RepositoryException {
        if (this.shoppingListItems == null) {
            this.shoppingListItems = getRelated(ShoppingListItem.class, "ShoppingListItem");
        }
        return this.shoppingListItems;
    }
    /**
     * Auto generated method that gets the related <code>ShoppingListItemSurvey</code> by the relation named <code>ShoppingListItemSurvey</code>.
     * @return the list of <code>ShoppingListItemSurvey</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ShoppingListItemSurvey> getShoppingListItemSurveys() throws RepositoryException {
        if (this.shoppingListItemSurveys == null) {
            this.shoppingListItemSurveys = getRelated(ShoppingListItemSurvey.class, "ShoppingListItemSurvey");
        }
        return this.shoppingListItemSurveys;
    }
    /**
     * Auto generated method that gets the related <code>ShoppingListWorkEffort</code> by the relation named <code>ShoppingListWorkEffort</code>.
     * @return the list of <code>ShoppingListWorkEffort</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ShoppingListWorkEffort> getShoppingListWorkEfforts() throws RepositoryException {
        if (this.shoppingListWorkEfforts == null) {
            this.shoppingListWorkEfforts = getRelated(ShoppingListWorkEffort.class, "ShoppingListWorkEffort");
        }
        return this.shoppingListWorkEfforts;
    }

    /**
     * Auto generated value setter.
     * @param parentShoppingList the parentShoppingList to set
    */
    public void setParentShoppingList(ShoppingList parentShoppingList) {
        this.parentShoppingList = parentShoppingList;
    }
    /**
     * Auto generated value setter.
     * @param siblingShoppingLists the siblingShoppingLists to set
    */
    public void setSiblingShoppingLists(List<ShoppingList> siblingShoppingLists) {
        this.siblingShoppingLists = siblingShoppingLists;
    }
    /**
     * Auto generated value setter.
     * @param shoppingListType the shoppingListType to set
    */
    public void setShoppingListType(ShoppingListType shoppingListType) {
        this.shoppingListType = shoppingListType;
    }
    /**
     * Auto generated value setter.
     * @param productStore the productStore to set
    */
    public void setProductStore(ProductStore productStore) {
        this.productStore = productStore;
    }
    /**
     * Auto generated value setter.
     * @param party the party to set
    */
    public void setParty(Party party) {
        this.party = party;
    }
    /**
     * Auto generated value setter.
     * @param visitor the visitor to set
    */
    public void setVisitor(Visitor visitor) {
        this.visitor = visitor;
    }
    /**
     * Auto generated value setter.
     * @param productStoreShipmentMeths the productStoreShipmentMeths to set
    */
    public void setProductStoreShipmentMeths(List<ProductStoreShipmentMeth> productStoreShipmentMeths) {
        this.productStoreShipmentMeths = productStoreShipmentMeths;
    }
    /**
     * Auto generated value setter.
     * @param carrierShipmentMethod the carrierShipmentMethod to set
    */
    public void setCarrierShipmentMethod(CarrierShipmentMethod carrierShipmentMethod) {
        this.carrierShipmentMethod = carrierShipmentMethod;
    }
    /**
     * Auto generated value setter.
     * @param contactMech the contactMech to set
    */
    public void setContactMech(ContactMech contactMech) {
        this.contactMech = contactMech;
    }
    /**
     * Auto generated value setter.
     * @param postalAddress the postalAddress to set
    */
    public void setPostalAddress(PostalAddress postalAddress) {
        this.postalAddress = postalAddress;
    }
    /**
     * Auto generated value setter.
     * @param paymentMethod the paymentMethod to set
    */
    public void setPaymentMethod(PaymentMethod paymentMethod) {
        this.paymentMethod = paymentMethod;
    }
    /**
     * Auto generated value setter.
     * @param recurrenceInfo the recurrenceInfo to set
    */
    public void setRecurrenceInfo(RecurrenceInfo recurrenceInfo) {
        this.recurrenceInfo = recurrenceInfo;
    }
    /**
     * Auto generated value setter.
     * @param productPromoCode the productPromoCode to set
    */
    public void setProductPromoCode(ProductPromoCode productPromoCode) {
        this.productPromoCode = productPromoCode;
    }
    /**
     * Auto generated value setter.
     * @param autoOrderOrderHeaders the autoOrderOrderHeaders to set
    */
    public void setAutoOrderOrderHeaders(List<OrderHeader> autoOrderOrderHeaders) {
        this.autoOrderOrderHeaders = autoOrderOrderHeaders;
    }
    /**
     * Auto generated value setter.
     * @param childShoppingLists the childShoppingLists to set
    */
    public void setChildShoppingLists(List<ShoppingList> childShoppingLists) {
        this.childShoppingLists = childShoppingLists;
    }
    /**
     * Auto generated value setter.
     * @param shoppingListItems the shoppingListItems to set
    */
    public void setShoppingListItems(List<ShoppingListItem> shoppingListItems) {
        this.shoppingListItems = shoppingListItems;
    }
    /**
     * Auto generated value setter.
     * @param shoppingListItemSurveys the shoppingListItemSurveys to set
    */
    public void setShoppingListItemSurveys(List<ShoppingListItemSurvey> shoppingListItemSurveys) {
        this.shoppingListItemSurveys = shoppingListItemSurveys;
    }
    /**
     * Auto generated value setter.
     * @param shoppingListWorkEfforts the shoppingListWorkEfforts to set
    */
    public void setShoppingListWorkEfforts(List<ShoppingListWorkEffort> shoppingListWorkEfforts) {
        this.shoppingListWorkEfforts = shoppingListWorkEfforts;
    }

    /**
     * Auto generated method that add item to collection.
     */
    public void addShoppingListItem(ShoppingListItem shoppingListItem) {
        if (this.shoppingListItems == null) {
            this.shoppingListItems = new ArrayList<ShoppingListItem>();
        }
        this.shoppingListItems.add(shoppingListItem);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeShoppingListItem(ShoppingListItem shoppingListItem) {
        if (this.shoppingListItems == null) {
            return;
        }
        this.shoppingListItems.remove(shoppingListItem);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearShoppingListItem() {
        if (this.shoppingListItems == null) {
            return;
        }
        this.shoppingListItems.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addShoppingListItemSurvey(ShoppingListItemSurvey shoppingListItemSurvey) {
        if (this.shoppingListItemSurveys == null) {
            this.shoppingListItemSurveys = new ArrayList<ShoppingListItemSurvey>();
        }
        this.shoppingListItemSurveys.add(shoppingListItemSurvey);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeShoppingListItemSurvey(ShoppingListItemSurvey shoppingListItemSurvey) {
        if (this.shoppingListItemSurveys == null) {
            return;
        }
        this.shoppingListItemSurveys.remove(shoppingListItemSurvey);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearShoppingListItemSurvey() {
        if (this.shoppingListItemSurveys == null) {
            return;
        }
        this.shoppingListItemSurveys.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addShoppingListWorkEffort(ShoppingListWorkEffort shoppingListWorkEffort) {
        if (this.shoppingListWorkEfforts == null) {
            this.shoppingListWorkEfforts = new ArrayList<ShoppingListWorkEffort>();
        }
        this.shoppingListWorkEfforts.add(shoppingListWorkEffort);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeShoppingListWorkEffort(ShoppingListWorkEffort shoppingListWorkEffort) {
        if (this.shoppingListWorkEfforts == null) {
            return;
        }
        this.shoppingListWorkEfforts.remove(shoppingListWorkEffort);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearShoppingListWorkEffort() {
        if (this.shoppingListWorkEfforts == null) {
            return;
        }
        this.shoppingListWorkEfforts.clear();
    }

    /** {@inheritDoc} */
    @Override
    public void fromMap(Map<String, Object> mapValue) {
        preInit();
        setShoppingListId((String) mapValue.get("shoppingListId"));
        setShoppingListTypeId((String) mapValue.get("shoppingListTypeId"));
        setParentShoppingListId((String) mapValue.get("parentShoppingListId"));
        setProductStoreId((String) mapValue.get("productStoreId"));
        setVisitorId((String) mapValue.get("visitorId"));
        setPartyId((String) mapValue.get("partyId"));
        setListName((String) mapValue.get("listName"));
        setDescription((String) mapValue.get("description"));
        setIsPublic((String) mapValue.get("isPublic"));
        setIsActive((String) mapValue.get("isActive"));
        setCurrencyUom((String) mapValue.get("currencyUom"));
        setShipmentMethodTypeId((String) mapValue.get("shipmentMethodTypeId"));
        setCarrierPartyId((String) mapValue.get("carrierPartyId"));
        setCarrierRoleTypeId((String) mapValue.get("carrierRoleTypeId"));
        setContactMechId((String) mapValue.get("contactMechId"));
        setPaymentMethodId((String) mapValue.get("paymentMethodId"));
        setRecurrenceInfoId((String) mapValue.get("recurrenceInfoId"));
        setLastOrderedDate((Timestamp) mapValue.get("lastOrderedDate"));
        setLastAdminModified((Timestamp) mapValue.get("lastAdminModified"));
        setProductPromoCodeId((String) mapValue.get("productPromoCodeId"));
        setLastUpdatedStamp((Timestamp) mapValue.get("lastUpdatedStamp"));
        setLastUpdatedTxStamp((Timestamp) mapValue.get("lastUpdatedTxStamp"));
        setCreatedStamp((Timestamp) mapValue.get("createdStamp"));
        setCreatedTxStamp((Timestamp) mapValue.get("createdTxStamp"));
        postInit();
    }

    /** {@inheritDoc} */
    @Override
    public Map<String, Object> toMap() {
        Map<String, Object> mapValue = new FastMap<String, Object>();
        mapValue.put("shoppingListId", getShoppingListId());
        mapValue.put("shoppingListTypeId", getShoppingListTypeId());
        mapValue.put("parentShoppingListId", getParentShoppingListId());
        mapValue.put("productStoreId", getProductStoreId());
        mapValue.put("visitorId", getVisitorId());
        mapValue.put("partyId", getPartyId());
        mapValue.put("listName", getListName());
        mapValue.put("description", getDescription());
        mapValue.put("isPublic", getIsPublic());
        mapValue.put("isActive", getIsActive());
        mapValue.put("currencyUom", getCurrencyUom());
        mapValue.put("shipmentMethodTypeId", getShipmentMethodTypeId());
        mapValue.put("carrierPartyId", getCarrierPartyId());
        mapValue.put("carrierRoleTypeId", getCarrierRoleTypeId());
        mapValue.put("contactMechId", getContactMechId());
        mapValue.put("paymentMethodId", getPaymentMethodId());
        mapValue.put("recurrenceInfoId", getRecurrenceInfoId());
        mapValue.put("lastOrderedDate", getLastOrderedDate());
        mapValue.put("lastAdminModified", getLastAdminModified());
        mapValue.put("productPromoCodeId", getProductPromoCodeId());
        mapValue.put("lastUpdatedStamp", getLastUpdatedStamp());
        mapValue.put("lastUpdatedTxStamp", getLastUpdatedTxStamp());
        mapValue.put("createdStamp", getCreatedStamp());
        mapValue.put("createdTxStamp", getCreatedTxStamp());
        return mapValue;
    }


}
