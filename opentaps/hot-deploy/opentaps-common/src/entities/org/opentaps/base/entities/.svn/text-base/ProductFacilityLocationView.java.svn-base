package org.opentaps.base.entities;

/*
 * Copyright (c) Open Source Strategies, Inc.
 *
 * Opentaps is free software: you can redistribute it and/or modify it
 * under the terms of the GNU Affero General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Opentaps is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with Opentaps.  If not, see <http://www.gnu.org/licenses/>.
 */

// DO NOT EDIT THIS FILE!  THIS IS AUTO GENERATED AND WILL GET WRITTEN OVER PERIODICALLY WHEN THE DATA MODEL CHANGES
// EXTEND THIS CLASS INSTEAD.

import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;

import javolution.util.FastMap;

import org.opentaps.foundation.entity.Entity;
import org.opentaps.foundation.entity.EntityFieldInterface;
import org.opentaps.foundation.repository.RepositoryException;
import org.opentaps.foundation.repository.RepositoryInterface;
import javax.persistence.*;
import org.hibernate.search.annotations.*;
import java.lang.String;
import java.math.BigDecimal;

/**
 * Auto generated base entity ProductFacilityLocationView.
 */
@javax.persistence.Entity
@NamedNativeQuery(name="selectProductFacilityLocationViews", query="SELECT PFL.PRODUCT_ID AS \"productId\",PFL.FACILITY_ID AS \"facilityId\",PFL.LOCATION_SEQ_ID AS \"locationSeqId\",PFL.MINIMUM_STOCK AS \"minimumStock\",PFL.MOVE_QUANTITY AS \"moveQuantity\",FL.LOCATION_TYPE_ENUM_ID AS \"locationTypeEnumId\",FL.AREA_ID AS \"areaId\",FL.AISLE_ID AS \"aisleId\",FL.SECTION_ID AS \"sectionId\",FL.LEVEL_ID AS \"levelId\",FL.POSITION_ID AS \"positionId\" FROM PRODUCT_FACILITY_LOCATION PFL INNER JOIN FACILITY_LOCATION FL ON PFL.FACILITY_ID = FL.FACILITY_ID AND PFL.LOCATION_SEQ_ID = FL.LOCATION_SEQ_ID", resultSetMapping="ProductFacilityLocationViewMapping")
@SqlResultSetMapping(name="ProductFacilityLocationViewMapping", entities={
@EntityResult(entityClass=ProductFacilityLocationView.class, fields = {
@FieldResult(name="productId", column="productId")
,@FieldResult(name="facilityId", column="facilityId")
,@FieldResult(name="locationSeqId", column="locationSeqId")
,@FieldResult(name="minimumStock", column="minimumStock")
,@FieldResult(name="moveQuantity", column="moveQuantity")
,@FieldResult(name="locationTypeEnumId", column="locationTypeEnumId")
,@FieldResult(name="areaId", column="areaId")
,@FieldResult(name="aisleId", column="aisleId")
,@FieldResult(name="sectionId", column="sectionId")
,@FieldResult(name="levelId", column="levelId")
,@FieldResult(name="positionId", column="positionId")
})})
@org.hibernate.annotations.Entity(mutable = false)
@org.hibernate.annotations.AccessType("field")
public class ProductFacilityLocationView extends Entity {
static {
java.util.Map<String, String> fields = new java.util.HashMap<String, String>();
        fields.put("productId", "PFL.PRODUCT_ID");
        fields.put("facilityId", "PFL.FACILITY_ID");
        fields.put("locationSeqId", "PFL.LOCATION_SEQ_ID");
        fields.put("minimumStock", "PFL.MINIMUM_STOCK");
        fields.put("moveQuantity", "PFL.MOVE_QUANTITY");
        fields.put("locationTypeEnumId", "FL.LOCATION_TYPE_ENUM_ID");
        fields.put("areaId", "FL.AREA_ID");
        fields.put("aisleId", "FL.AISLE_ID");
        fields.put("sectionId", "FL.SECTION_ID");
        fields.put("levelId", "FL.LEVEL_ID");
        fields.put("positionId", "FL.POSITION_ID");
fieldMapColumns.put("ProductFacilityLocationView", fields);
}
  public static enum Fields implements EntityFieldInterface<ProductFacilityLocationView> {
    productId("productId"),
    facilityId("facilityId"),
    locationSeqId("locationSeqId"),
    minimumStock("minimumStock"),
    moveQuantity("moveQuantity"),
    locationTypeEnumId("locationTypeEnumId"),
    areaId("areaId"),
    aisleId("aisleId"),
    sectionId("sectionId"),
    levelId("levelId"),
    positionId("positionId");
    private final String fieldName;
    private Fields(String name) { fieldName = name; }
    /** {@inheritDoc} */
    public String getName() { return fieldName; }
    /** {@inheritDoc} */
    public String asc() { return fieldName + " ASC"; }
    /** {@inheritDoc} */
    public String desc() { return fieldName + " DESC"; }
  }

    @Id
   private String productId;
    
   private String facilityId;
    
   private String locationSeqId;
    
   private BigDecimal minimumStock;
    
   private BigDecimal moveQuantity;
    
   private String locationTypeEnumId;
    
   private String areaId;
    
   private String aisleId;
    
   private String sectionId;
    
   private String levelId;
    
   private String positionId;
   private transient FacilityLocation facilityLocation = null;
   private transient ProductFacilityLocation productFacilityLocation = null;
   private transient List<InventoryItem> inventoryItems = null;

  /**
   * Default constructor.
   */
  public ProductFacilityLocationView() {
      super();
      this.baseEntityName = "ProductFacilityLocationView";
      this.isView = true;
      
      this.primaryKeyNames = new ArrayList<String>();
      this.primaryKeyNames.add("productId");this.primaryKeyNames.add("facilityId");this.primaryKeyNames.add("locationSeqId");
      this.allFieldsNames = new ArrayList<String>();
      this.allFieldsNames.add("productId");this.allFieldsNames.add("facilityId");this.allFieldsNames.add("locationSeqId");this.allFieldsNames.add("minimumStock");this.allFieldsNames.add("moveQuantity");this.allFieldsNames.add("locationTypeEnumId");this.allFieldsNames.add("areaId");this.allFieldsNames.add("aisleId");this.allFieldsNames.add("sectionId");this.allFieldsNames.add("levelId");this.allFieldsNames.add("positionId");
      this.nonPrimaryKeyNames = new ArrayList<String>();
      this.nonPrimaryKeyNames.addAll(allFieldsNames);
      this.nonPrimaryKeyNames.removeAll(primaryKeyNames);
  }

  /**
   * Constructor with a repository.
   * @param repository a <code>RepositoryInterface</code> value
   */
  public ProductFacilityLocationView(RepositoryInterface repository) {
      this();
      initRepository(repository);
  }

    /**
     * This is a view-entity, so the setter methods will be private to this class and for use in its fromMap constructor only
     */
    /**
     * Auto generated value setter.
     * @param productId the productId to set
     */
    public void setProductId(String productId) {
        this.productId = productId;
    }
    /**
     * Auto generated value setter.
     * @param facilityId the facilityId to set
     */
    public void setFacilityId(String facilityId) {
        this.facilityId = facilityId;
    }
    /**
     * Auto generated value setter.
     * @param locationSeqId the locationSeqId to set
     */
    public void setLocationSeqId(String locationSeqId) {
        this.locationSeqId = locationSeqId;
    }
    /**
     * Auto generated value setter.
     * @param minimumStock the minimumStock to set
     */
    public void setMinimumStock(BigDecimal minimumStock) {
        this.minimumStock = minimumStock;
    }
    /**
     * Auto generated value setter.
     * @param moveQuantity the moveQuantity to set
     */
    public void setMoveQuantity(BigDecimal moveQuantity) {
        this.moveQuantity = moveQuantity;
    }
    /**
     * Auto generated value setter.
     * @param locationTypeEnumId the locationTypeEnumId to set
     */
    public void setLocationTypeEnumId(String locationTypeEnumId) {
        this.locationTypeEnumId = locationTypeEnumId;
    }
    /**
     * Auto generated value setter.
     * @param areaId the areaId to set
     */
    public void setAreaId(String areaId) {
        this.areaId = areaId;
    }
    /**
     * Auto generated value setter.
     * @param aisleId the aisleId to set
     */
    public void setAisleId(String aisleId) {
        this.aisleId = aisleId;
    }
    /**
     * Auto generated value setter.
     * @param sectionId the sectionId to set
     */
    public void setSectionId(String sectionId) {
        this.sectionId = sectionId;
    }
    /**
     * Auto generated value setter.
     * @param levelId the levelId to set
     */
    public void setLevelId(String levelId) {
        this.levelId = levelId;
    }
    /**
     * Auto generated value setter.
     * @param positionId the positionId to set
     */
    public void setPositionId(String positionId) {
        this.positionId = positionId;
    }

    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getProductId() {
        return this.productId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getFacilityId() {
        return this.facilityId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getLocationSeqId() {
        return this.locationSeqId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getMinimumStock() {
        return this.minimumStock;
    }
    /**
     * Auto generated value accessor.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getMoveQuantity() {
        return this.moveQuantity;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getLocationTypeEnumId() {
        return this.locationTypeEnumId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getAreaId() {
        return this.areaId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getAisleId() {
        return this.aisleId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getSectionId() {
        return this.sectionId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getLevelId() {
        return this.levelId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPositionId() {
        return this.positionId;
    }

    /**
     * Auto generated method that gets the related <code>FacilityLocation</code> by the relation named <code>FacilityLocation</code>.
     * @return the <code>FacilityLocation</code>
     * @throws RepositoryException if an error occurs
     */
    public FacilityLocation getFacilityLocation() throws RepositoryException {
        if (this.facilityLocation == null) {
            this.facilityLocation = getRelatedOne(FacilityLocation.class, "FacilityLocation");
        }
        return this.facilityLocation;
    }
    /**
     * Auto generated method that gets the related <code>ProductFacilityLocation</code> by the relation named <code>ProductFacilityLocation</code>.
     * @return the <code>ProductFacilityLocation</code>
     * @throws RepositoryException if an error occurs
     */
    public ProductFacilityLocation getProductFacilityLocation() throws RepositoryException {
        if (this.productFacilityLocation == null) {
            this.productFacilityLocation = getRelatedOne(ProductFacilityLocation.class, "ProductFacilityLocation");
        }
        return this.productFacilityLocation;
    }
    /**
     * Auto generated method that gets the related <code>InventoryItem</code> by the relation named <code>InventoryItem</code>.
     * @return the list of <code>InventoryItem</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends InventoryItem> getInventoryItems() throws RepositoryException {
        if (this.inventoryItems == null) {
            this.inventoryItems = getRelated(InventoryItem.class, "InventoryItem");
        }
        return this.inventoryItems;
    }

    /**
     * Auto generated value setter.
     * @param facilityLocation the facilityLocation to set
    */
    public void setFacilityLocation(FacilityLocation facilityLocation) {
        this.facilityLocation = facilityLocation;
    }
    /**
     * Auto generated value setter.
     * @param productFacilityLocation the productFacilityLocation to set
    */
    public void setProductFacilityLocation(ProductFacilityLocation productFacilityLocation) {
        this.productFacilityLocation = productFacilityLocation;
    }
    /**
     * Auto generated value setter.
     * @param inventoryItems the inventoryItems to set
    */
    public void setInventoryItems(List<InventoryItem> inventoryItems) {
        this.inventoryItems = inventoryItems;
    }


    /** {@inheritDoc} */
    @Override
    public void fromMap(Map<String, Object> mapValue) {
        preInit();
        setProductId((String) mapValue.get("productId"));
        setFacilityId((String) mapValue.get("facilityId"));
        setLocationSeqId((String) mapValue.get("locationSeqId"));
        setMinimumStock(convertToBigDecimal(mapValue.get("minimumStock")));
        setMoveQuantity(convertToBigDecimal(mapValue.get("moveQuantity")));
        setLocationTypeEnumId((String) mapValue.get("locationTypeEnumId"));
        setAreaId((String) mapValue.get("areaId"));
        setAisleId((String) mapValue.get("aisleId"));
        setSectionId((String) mapValue.get("sectionId"));
        setLevelId((String) mapValue.get("levelId"));
        setPositionId((String) mapValue.get("positionId"));
        postInit();
    }

    /** {@inheritDoc} */
    @Override
    public Map<String, Object> toMap() {
        Map<String, Object> mapValue = new FastMap<String, Object>();
        mapValue.put("productId", getProductId());
        mapValue.put("facilityId", getFacilityId());
        mapValue.put("locationSeqId", getLocationSeqId());
        mapValue.put("minimumStock", getMinimumStock());
        mapValue.put("moveQuantity", getMoveQuantity());
        mapValue.put("locationTypeEnumId", getLocationTypeEnumId());
        mapValue.put("areaId", getAreaId());
        mapValue.put("aisleId", getAisleId());
        mapValue.put("sectionId", getSectionId());
        mapValue.put("levelId", getLevelId());
        mapValue.put("positionId", getPositionId());
        return mapValue;
    }


}
