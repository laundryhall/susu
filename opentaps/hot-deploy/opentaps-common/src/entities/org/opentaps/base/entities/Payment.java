package org.opentaps.base.entities;

/*
 * Copyright (c) Open Source Strategies, Inc.
 *
 * Opentaps is free software: you can redistribute it and/or modify it
 * under the terms of the GNU Affero General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Opentaps is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with Opentaps.  If not, see <http://www.gnu.org/licenses/>.
 */

// DO NOT EDIT THIS FILE!  THIS IS AUTO GENERATED AND WILL GET WRITTEN OVER PERIODICALLY WHEN THE DATA MODEL CHANGES
// EXTEND THIS CLASS INSTEAD.

import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;

import javolution.util.FastMap;

import org.opentaps.foundation.entity.Entity;
import org.opentaps.foundation.entity.EntityFieldInterface;
import org.opentaps.foundation.repository.RepositoryException;
import org.opentaps.foundation.repository.RepositoryInterface;
import javax.persistence.*;
import org.hibernate.search.annotations.*;
import java.lang.String;
import java.math.BigDecimal;
import java.sql.Timestamp;

/**
 * Auto generated base entity Payment.
 */
@javax.persistence.Entity
@Table(name="PAYMENT")
public class Payment extends Entity {
static {
java.util.Map<String, String> fields = new java.util.HashMap<String, String>();
        fields.put("paymentId", "PAYMENT_ID");
        fields.put("paymentTypeId", "PAYMENT_TYPE_ID");
        fields.put("paymentMethodTypeId", "PAYMENT_METHOD_TYPE_ID");
        fields.put("paymentMethodId", "PAYMENT_METHOD_ID");
        fields.put("paymentGatewayResponseId", "PAYMENT_GATEWAY_RESPONSE_ID");
        fields.put("paymentPreferenceId", "PAYMENT_PREFERENCE_ID");
        fields.put("partyIdFrom", "PARTY_ID_FROM");
        fields.put("partyIdTo", "PARTY_ID_TO");
        fields.put("roleTypeIdTo", "ROLE_TYPE_ID_TO");
        fields.put("statusId", "STATUS_ID");
        fields.put("effectiveDate", "EFFECTIVE_DATE");
        fields.put("paymentRefNum", "PAYMENT_REF_NUM");
        fields.put("amount", "AMOUNT");
        fields.put("currencyUomId", "CURRENCY_UOM_ID");
        fields.put("comments", "COMMENTS");
        fields.put("finAccountTransId", "FIN_ACCOUNT_TRANS_ID");
        fields.put("overrideGlAccountId", "OVERRIDE_GL_ACCOUNT_ID");
        fields.put("actualCurrencyAmount", "ACTUAL_CURRENCY_AMOUNT");
        fields.put("actualCurrencyUomId", "ACTUAL_CURRENCY_UOM_ID");
        fields.put("lastUpdatedStamp", "LAST_UPDATED_STAMP");
        fields.put("lastUpdatedTxStamp", "LAST_UPDATED_TX_STAMP");
        fields.put("createdStamp", "CREATED_STAMP");
        fields.put("createdTxStamp", "CREATED_TX_STAMP");
        fields.put("appliedAmount", "APPLIED_AMOUNT");
        fields.put("openAmount", "OPEN_AMOUNT");
        fields.put("acctgTagEnumId1", "ACCTG_TAG_ENUM_ID1");
        fields.put("acctgTagEnumId2", "ACCTG_TAG_ENUM_ID2");
        fields.put("acctgTagEnumId3", "ACCTG_TAG_ENUM_ID3");
        fields.put("acctgTagEnumId4", "ACCTG_TAG_ENUM_ID4");
        fields.put("acctgTagEnumId5", "ACCTG_TAG_ENUM_ID5");
        fields.put("acctgTagEnumId6", "ACCTG_TAG_ENUM_ID6");
        fields.put("acctgTagEnumId7", "ACCTG_TAG_ENUM_ID7");
        fields.put("acctgTagEnumId8", "ACCTG_TAG_ENUM_ID8");
        fields.put("acctgTagEnumId9", "ACCTG_TAG_ENUM_ID9");
        fields.put("acctgTagEnumId10", "ACCTG_TAG_ENUM_ID10");
fieldMapColumns.put("Payment", fields);
}
  public static enum Fields implements EntityFieldInterface<Payment> {
    paymentId("paymentId"),
    paymentTypeId("paymentTypeId"),
    paymentMethodTypeId("paymentMethodTypeId"),
    paymentMethodId("paymentMethodId"),
    paymentGatewayResponseId("paymentGatewayResponseId"),
    paymentPreferenceId("paymentPreferenceId"),
    partyIdFrom("partyIdFrom"),
    partyIdTo("partyIdTo"),
    roleTypeIdTo("roleTypeIdTo"),
    statusId("statusId"),
    effectiveDate("effectiveDate"),
    paymentRefNum("paymentRefNum"),
    amount("amount"),
    currencyUomId("currencyUomId"),
    comments("comments"),
    finAccountTransId("finAccountTransId"),
    overrideGlAccountId("overrideGlAccountId"),
    actualCurrencyAmount("actualCurrencyAmount"),
    actualCurrencyUomId("actualCurrencyUomId"),
    lastUpdatedStamp("lastUpdatedStamp"),
    lastUpdatedTxStamp("lastUpdatedTxStamp"),
    createdStamp("createdStamp"),
    createdTxStamp("createdTxStamp"),
    appliedAmount("appliedAmount"),
    openAmount("openAmount"),
    acctgTagEnumId1("acctgTagEnumId1"),
    acctgTagEnumId2("acctgTagEnumId2"),
    acctgTagEnumId3("acctgTagEnumId3"),
    acctgTagEnumId4("acctgTagEnumId4"),
    acctgTagEnumId5("acctgTagEnumId5"),
    acctgTagEnumId6("acctgTagEnumId6"),
    acctgTagEnumId7("acctgTagEnumId7"),
    acctgTagEnumId8("acctgTagEnumId8"),
    acctgTagEnumId9("acctgTagEnumId9"),
    acctgTagEnumId10("acctgTagEnumId10");
    private final String fieldName;
    private Fields(String name) { fieldName = name; }
    /** {@inheritDoc} */
    public String getName() { return fieldName; }
    /** {@inheritDoc} */
    public String asc() { return fieldName + " ASC"; }
    /** {@inheritDoc} */
    public String desc() { return fieldName + " DESC"; }
  }

   @org.hibernate.annotations.GenericGenerator(name="Payment_GEN",  strategy="org.opentaps.foundation.entity.hibernate.OpentapsIdentifierGenerator")
   @GeneratedValue(generator="Payment_GEN")
   @Id
   @Column(name="PAYMENT_ID")
   private String paymentId;
   @Column(name="PAYMENT_TYPE_ID")
   private String paymentTypeId;
   @Column(name="PAYMENT_METHOD_TYPE_ID")
   private String paymentMethodTypeId;
   @Column(name="PAYMENT_METHOD_ID")
   private String paymentMethodId;
   @Column(name="PAYMENT_GATEWAY_RESPONSE_ID")
   private String paymentGatewayResponseId;
   @Column(name="PAYMENT_PREFERENCE_ID")
   private String paymentPreferenceId;
   @Column(name="PARTY_ID_FROM")
   private String partyIdFrom;
   @Column(name="PARTY_ID_TO")
   private String partyIdTo;
   @Column(name="ROLE_TYPE_ID_TO")
   private String roleTypeIdTo;
   @Column(name="STATUS_ID")
   private String statusId;
   @Column(name="EFFECTIVE_DATE")
   private Timestamp effectiveDate;
   @Column(name="PAYMENT_REF_NUM")
   private String paymentRefNum;
   @Column(name="AMOUNT")
   private BigDecimal amount;
   @Column(name="CURRENCY_UOM_ID")
   private String currencyUomId;
   @Column(name="COMMENTS")
   private String comments;
   @Column(name="FIN_ACCOUNT_TRANS_ID")
   private String finAccountTransId;
   @Column(name="OVERRIDE_GL_ACCOUNT_ID")
   private String overrideGlAccountId;
   @Column(name="ACTUAL_CURRENCY_AMOUNT")
   private BigDecimal actualCurrencyAmount;
   @Column(name="ACTUAL_CURRENCY_UOM_ID")
   private String actualCurrencyUomId;
   @Column(name="LAST_UPDATED_STAMP")
   private Timestamp lastUpdatedStamp;
   @Column(name="LAST_UPDATED_TX_STAMP")
   private Timestamp lastUpdatedTxStamp;
   @Column(name="CREATED_STAMP")
   private Timestamp createdStamp;
   @Column(name="CREATED_TX_STAMP")
   private Timestamp createdTxStamp;
   @Column(name="APPLIED_AMOUNT")
   private BigDecimal appliedAmount;
   @Column(name="OPEN_AMOUNT")
   private BigDecimal openAmount;
   @Column(name="ACCTG_TAG_ENUM_ID1")
   private String acctgTagEnumId1;
   @Column(name="ACCTG_TAG_ENUM_ID2")
   private String acctgTagEnumId2;
   @Column(name="ACCTG_TAG_ENUM_ID3")
   private String acctgTagEnumId3;
   @Column(name="ACCTG_TAG_ENUM_ID4")
   private String acctgTagEnumId4;
   @Column(name="ACCTG_TAG_ENUM_ID5")
   private String acctgTagEnumId5;
   @Column(name="ACCTG_TAG_ENUM_ID6")
   private String acctgTagEnumId6;
   @Column(name="ACCTG_TAG_ENUM_ID7")
   private String acctgTagEnumId7;
   @Column(name="ACCTG_TAG_ENUM_ID8")
   private String acctgTagEnumId8;
   @Column(name="ACCTG_TAG_ENUM_ID9")
   private String acctgTagEnumId9;
   @Column(name="ACCTG_TAG_ENUM_ID10")
   private String acctgTagEnumId10;
   @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="PAYMENT_TYPE_ID", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private PaymentType paymentType = null;
   private transient List<PaymentTypeAttr> paymentTypeAttrs = null;
   @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="PAYMENT_METHOD_TYPE_ID", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private PaymentMethodType paymentMethodType = null;
   @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="PAYMENT_METHOD_ID", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private PaymentMethod paymentMethod = null;
   @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="CURRENCY_UOM_ID", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private Uom currencyUom = null;
   @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="ACTUAL_CURRENCY_UOM_ID", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private Uom actualCurrencyUom = null;
   @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="PAYMENT_METHOD_ID", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private CreditCard creditCard = null;
   @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="PAYMENT_METHOD_ID", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private EftAccount eftAccount = null;
   @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="PAYMENT_METHOD_ID", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private GiftCard giftCard = null;
   @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="PAYMENT_PREFERENCE_ID", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private OrderPaymentPreference orderPaymentPreference = null;
   @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="PAYMENT_GATEWAY_RESPONSE_ID", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private PaymentGatewayResponse paymentGatewayResponse = null;
   @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="PARTY_ID_FROM", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private Party fromParty = null;
   @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="PARTY_ID_TO", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private Party toParty = null;
   @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="ROLE_TYPE_ID_TO", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private RoleType toRoleType = null;
   private transient PartyRole toPartyRole = null;
   @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="STATUS_ID", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private StatusItem statusItem = null;
   @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="FIN_ACCOUNT_TRANS_ID", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private FinAccountTrans finAccountTrans = null;
   @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="OVERRIDE_GL_ACCOUNT_ID", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private GlAccount glAccount = null;
   @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="ACCTG_TAG_ENUM_ID1", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private Enumeration tag1Enumeration = null;
   @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="ACCTG_TAG_ENUM_ID2", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private Enumeration tag2Enumeration = null;
   @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="ACCTG_TAG_ENUM_ID3", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private Enumeration tag3Enumeration = null;
   @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="ACCTG_TAG_ENUM_ID4", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private Enumeration tag4Enumeration = null;
   @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="ACCTG_TAG_ENUM_ID5", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private Enumeration tag5Enumeration = null;
   @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="ACCTG_TAG_ENUM_ID6", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private Enumeration tag6Enumeration = null;
   @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="ACCTG_TAG_ENUM_ID7", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private Enumeration tag7Enumeration = null;
   @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="ACCTG_TAG_ENUM_ID8", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private Enumeration tag8Enumeration = null;
   @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="ACCTG_TAG_ENUM_ID9", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private Enumeration tag9Enumeration = null;
   @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="ACCTG_TAG_ENUM_ID10", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private Enumeration tag10Enumeration = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="payment", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="PAYMENT_ID")
   
   private List<AcctgTrans> acctgTranses = null;
   private transient List<CashDrawerTransaction> cashDrawerTransactions = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="payment", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="PAYMENT_ID")
   
   private List<Deduction> deductions = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="payment", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="PAYMENT_ID")
   
   private List<InvoiceAdjustment> invoiceAdjustments = null;
   private transient List<LockboxBatchItemDetail> lockboxBatchItemDetails = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="payment", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="PAYMENT_ID")
   
   private List<PaycheckItem> paycheckItems = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="payment", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="PAYMENT_ID")
   
   private List<PaymentApplication> paymentApplications = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="toPayment", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="TO_PAYMENT_ID")
   
   private List<PaymentApplication> toPaymentApplications = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="payment", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="PAYMENT_ID")
   
   private List<PaymentAttribute> paymentAttributes = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="payment", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="PAYMENT_ID")
   
   private List<PaymentBudgetAllocation> paymentBudgetAllocations = null;
   private transient List<PerfReview> perfReviews = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="payment", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="PAYMENT_ID")
   
   private List<ReturnItemResponse> returnItemResponses = null;

  /**
   * Default constructor.
   */
  public Payment() {
      super();
      this.baseEntityName = "Payment";
      this.isView = false;
      
      this.primaryKeyNames = new ArrayList<String>();
      this.primaryKeyNames.add("paymentId");
      this.allFieldsNames = new ArrayList<String>();
      this.allFieldsNames.add("paymentId");this.allFieldsNames.add("paymentTypeId");this.allFieldsNames.add("paymentMethodTypeId");this.allFieldsNames.add("paymentMethodId");this.allFieldsNames.add("paymentGatewayResponseId");this.allFieldsNames.add("paymentPreferenceId");this.allFieldsNames.add("partyIdFrom");this.allFieldsNames.add("partyIdTo");this.allFieldsNames.add("roleTypeIdTo");this.allFieldsNames.add("statusId");this.allFieldsNames.add("effectiveDate");this.allFieldsNames.add("paymentRefNum");this.allFieldsNames.add("amount");this.allFieldsNames.add("currencyUomId");this.allFieldsNames.add("comments");this.allFieldsNames.add("finAccountTransId");this.allFieldsNames.add("overrideGlAccountId");this.allFieldsNames.add("actualCurrencyAmount");this.allFieldsNames.add("actualCurrencyUomId");this.allFieldsNames.add("lastUpdatedStamp");this.allFieldsNames.add("lastUpdatedTxStamp");this.allFieldsNames.add("createdStamp");this.allFieldsNames.add("createdTxStamp");this.allFieldsNames.add("appliedAmount");this.allFieldsNames.add("openAmount");this.allFieldsNames.add("acctgTagEnumId1");this.allFieldsNames.add("acctgTagEnumId2");this.allFieldsNames.add("acctgTagEnumId3");this.allFieldsNames.add("acctgTagEnumId4");this.allFieldsNames.add("acctgTagEnumId5");this.allFieldsNames.add("acctgTagEnumId6");this.allFieldsNames.add("acctgTagEnumId7");this.allFieldsNames.add("acctgTagEnumId8");this.allFieldsNames.add("acctgTagEnumId9");this.allFieldsNames.add("acctgTagEnumId10");
      this.nonPrimaryKeyNames = new ArrayList<String>();
      this.nonPrimaryKeyNames.addAll(allFieldsNames);
      this.nonPrimaryKeyNames.removeAll(primaryKeyNames);
  }

  /**
   * Constructor with a repository.
   * @param repository a <code>RepositoryInterface</code> value
   */
  public Payment(RepositoryInterface repository) {
      this();
      initRepository(repository);
  }

    /**
     * Auto generated value setter.
     * @param paymentId the paymentId to set
     */
    public void setPaymentId(String paymentId) {
        this.paymentId = paymentId;
    }
    /**
     * Auto generated value setter.
     * @param paymentTypeId the paymentTypeId to set
     */
    public void setPaymentTypeId(String paymentTypeId) {
        this.paymentTypeId = paymentTypeId;
    }
    /**
     * Auto generated value setter.
     * @param paymentMethodTypeId the paymentMethodTypeId to set
     */
    public void setPaymentMethodTypeId(String paymentMethodTypeId) {
        this.paymentMethodTypeId = paymentMethodTypeId;
    }
    /**
     * Auto generated value setter.
     * @param paymentMethodId the paymentMethodId to set
     */
    public void setPaymentMethodId(String paymentMethodId) {
        this.paymentMethodId = paymentMethodId;
    }
    /**
     * Auto generated value setter.
     * @param paymentGatewayResponseId the paymentGatewayResponseId to set
     */
    public void setPaymentGatewayResponseId(String paymentGatewayResponseId) {
        this.paymentGatewayResponseId = paymentGatewayResponseId;
    }
    /**
     * Auto generated value setter.
     * @param paymentPreferenceId the paymentPreferenceId to set
     */
    public void setPaymentPreferenceId(String paymentPreferenceId) {
        this.paymentPreferenceId = paymentPreferenceId;
    }
    /**
     * Auto generated value setter.
     * @param partyIdFrom the partyIdFrom to set
     */
    public void setPartyIdFrom(String partyIdFrom) {
        this.partyIdFrom = partyIdFrom;
    }
    /**
     * Auto generated value setter.
     * @param partyIdTo the partyIdTo to set
     */
    public void setPartyIdTo(String partyIdTo) {
        this.partyIdTo = partyIdTo;
    }
    /**
     * Auto generated value setter.
     * @param roleTypeIdTo the roleTypeIdTo to set
     */
    public void setRoleTypeIdTo(String roleTypeIdTo) {
        this.roleTypeIdTo = roleTypeIdTo;
    }
    /**
     * Auto generated value setter.
     * @param statusId the statusId to set
     */
    public void setStatusId(String statusId) {
        this.statusId = statusId;
    }
    /**
     * Auto generated value setter.
     * @param effectiveDate the effectiveDate to set
     */
    public void setEffectiveDate(Timestamp effectiveDate) {
        this.effectiveDate = effectiveDate;
    }
    /**
     * Auto generated value setter.
     * @param paymentRefNum the paymentRefNum to set
     */
    public void setPaymentRefNum(String paymentRefNum) {
        this.paymentRefNum = paymentRefNum;
    }
    /**
     * Auto generated value setter.
     * @param amount the amount to set
     */
    public void setAmount(BigDecimal amount) {
        this.amount = amount;
    }
    /**
     * Auto generated value setter.
     * @param currencyUomId the currencyUomId to set
     */
    public void setCurrencyUomId(String currencyUomId) {
        this.currencyUomId = currencyUomId;
    }
    /**
     * Auto generated value setter.
     * @param comments the comments to set
     */
    public void setComments(String comments) {
        this.comments = comments;
    }
    /**
     * Auto generated value setter.
     * @param finAccountTransId the finAccountTransId to set
     */
    public void setFinAccountTransId(String finAccountTransId) {
        this.finAccountTransId = finAccountTransId;
    }
    /**
     * Auto generated value setter.
     * @param overrideGlAccountId the overrideGlAccountId to set
     */
    public void setOverrideGlAccountId(String overrideGlAccountId) {
        this.overrideGlAccountId = overrideGlAccountId;
    }
    /**
     * Auto generated value setter.
     * @param actualCurrencyAmount the actualCurrencyAmount to set
     */
    public void setActualCurrencyAmount(BigDecimal actualCurrencyAmount) {
        this.actualCurrencyAmount = actualCurrencyAmount;
    }
    /**
     * Auto generated value setter.
     * @param actualCurrencyUomId the actualCurrencyUomId to set
     */
    public void setActualCurrencyUomId(String actualCurrencyUomId) {
        this.actualCurrencyUomId = actualCurrencyUomId;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedStamp the lastUpdatedStamp to set
     */
    public void setLastUpdatedStamp(Timestamp lastUpdatedStamp) {
        this.lastUpdatedStamp = lastUpdatedStamp;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedTxStamp the lastUpdatedTxStamp to set
     */
    public void setLastUpdatedTxStamp(Timestamp lastUpdatedTxStamp) {
        this.lastUpdatedTxStamp = lastUpdatedTxStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdStamp the createdStamp to set
     */
    public void setCreatedStamp(Timestamp createdStamp) {
        this.createdStamp = createdStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdTxStamp the createdTxStamp to set
     */
    public void setCreatedTxStamp(Timestamp createdTxStamp) {
        this.createdTxStamp = createdTxStamp;
    }
    /**
     * Auto generated value setter.
     * @param appliedAmount the appliedAmount to set
     */
    public void setAppliedAmount(BigDecimal appliedAmount) {
        this.appliedAmount = appliedAmount;
    }
    /**
     * Auto generated value setter.
     * @param openAmount the openAmount to set
     */
    public void setOpenAmount(BigDecimal openAmount) {
        this.openAmount = openAmount;
    }
    /**
     * Auto generated value setter.
     * @param acctgTagEnumId1 the acctgTagEnumId1 to set
     */
    public void setAcctgTagEnumId1(String acctgTagEnumId1) {
        this.acctgTagEnumId1 = acctgTagEnumId1;
    }
    /**
     * Auto generated value setter.
     * @param acctgTagEnumId2 the acctgTagEnumId2 to set
     */
    public void setAcctgTagEnumId2(String acctgTagEnumId2) {
        this.acctgTagEnumId2 = acctgTagEnumId2;
    }
    /**
     * Auto generated value setter.
     * @param acctgTagEnumId3 the acctgTagEnumId3 to set
     */
    public void setAcctgTagEnumId3(String acctgTagEnumId3) {
        this.acctgTagEnumId3 = acctgTagEnumId3;
    }
    /**
     * Auto generated value setter.
     * @param acctgTagEnumId4 the acctgTagEnumId4 to set
     */
    public void setAcctgTagEnumId4(String acctgTagEnumId4) {
        this.acctgTagEnumId4 = acctgTagEnumId4;
    }
    /**
     * Auto generated value setter.
     * @param acctgTagEnumId5 the acctgTagEnumId5 to set
     */
    public void setAcctgTagEnumId5(String acctgTagEnumId5) {
        this.acctgTagEnumId5 = acctgTagEnumId5;
    }
    /**
     * Auto generated value setter.
     * @param acctgTagEnumId6 the acctgTagEnumId6 to set
     */
    public void setAcctgTagEnumId6(String acctgTagEnumId6) {
        this.acctgTagEnumId6 = acctgTagEnumId6;
    }
    /**
     * Auto generated value setter.
     * @param acctgTagEnumId7 the acctgTagEnumId7 to set
     */
    public void setAcctgTagEnumId7(String acctgTagEnumId7) {
        this.acctgTagEnumId7 = acctgTagEnumId7;
    }
    /**
     * Auto generated value setter.
     * @param acctgTagEnumId8 the acctgTagEnumId8 to set
     */
    public void setAcctgTagEnumId8(String acctgTagEnumId8) {
        this.acctgTagEnumId8 = acctgTagEnumId8;
    }
    /**
     * Auto generated value setter.
     * @param acctgTagEnumId9 the acctgTagEnumId9 to set
     */
    public void setAcctgTagEnumId9(String acctgTagEnumId9) {
        this.acctgTagEnumId9 = acctgTagEnumId9;
    }
    /**
     * Auto generated value setter.
     * @param acctgTagEnumId10 the acctgTagEnumId10 to set
     */
    public void setAcctgTagEnumId10(String acctgTagEnumId10) {
        this.acctgTagEnumId10 = acctgTagEnumId10;
    }

    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPaymentId() {
        return this.paymentId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPaymentTypeId() {
        return this.paymentTypeId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPaymentMethodTypeId() {
        return this.paymentMethodTypeId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPaymentMethodId() {
        return this.paymentMethodId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPaymentGatewayResponseId() {
        return this.paymentGatewayResponseId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPaymentPreferenceId() {
        return this.paymentPreferenceId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPartyIdFrom() {
        return this.partyIdFrom;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPartyIdTo() {
        return this.partyIdTo;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getRoleTypeIdTo() {
        return this.roleTypeIdTo;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getStatusId() {
        return this.statusId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getEffectiveDate() {
        return this.effectiveDate;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPaymentRefNum() {
        return this.paymentRefNum;
    }
    /**
     * Auto generated value accessor.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getAmount() {
        return this.amount;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getCurrencyUomId() {
        return this.currencyUomId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getComments() {
        return this.comments;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getFinAccountTransId() {
        return this.finAccountTransId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getOverrideGlAccountId() {
        return this.overrideGlAccountId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getActualCurrencyAmount() {
        return this.actualCurrencyAmount;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getActualCurrencyUomId() {
        return this.actualCurrencyUomId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedStamp() {
        return this.lastUpdatedStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedTxStamp() {
        return this.lastUpdatedTxStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedStamp() {
        return this.createdStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedTxStamp() {
        return this.createdTxStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getAppliedAmount() {
        return this.appliedAmount;
    }
    /**
     * Auto generated value accessor.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getOpenAmount() {
        return this.openAmount;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getAcctgTagEnumId1() {
        return this.acctgTagEnumId1;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getAcctgTagEnumId2() {
        return this.acctgTagEnumId2;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getAcctgTagEnumId3() {
        return this.acctgTagEnumId3;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getAcctgTagEnumId4() {
        return this.acctgTagEnumId4;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getAcctgTagEnumId5() {
        return this.acctgTagEnumId5;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getAcctgTagEnumId6() {
        return this.acctgTagEnumId6;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getAcctgTagEnumId7() {
        return this.acctgTagEnumId7;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getAcctgTagEnumId8() {
        return this.acctgTagEnumId8;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getAcctgTagEnumId9() {
        return this.acctgTagEnumId9;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getAcctgTagEnumId10() {
        return this.acctgTagEnumId10;
    }

    /**
     * Auto generated method that gets the related <code>PaymentType</code> by the relation named <code>PaymentType</code>.
     * @return the <code>PaymentType</code>
     * @throws RepositoryException if an error occurs
     */
    public PaymentType getPaymentType() throws RepositoryException {
        if (this.paymentType == null) {
            this.paymentType = getRelatedOne(PaymentType.class, "PaymentType");
        }
        return this.paymentType;
    }
    /**
     * Auto generated method that gets the related <code>PaymentTypeAttr</code> by the relation named <code>PaymentTypeAttr</code>.
     * @return the list of <code>PaymentTypeAttr</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends PaymentTypeAttr> getPaymentTypeAttrs() throws RepositoryException {
        if (this.paymentTypeAttrs == null) {
            this.paymentTypeAttrs = getRelated(PaymentTypeAttr.class, "PaymentTypeAttr");
        }
        return this.paymentTypeAttrs;
    }
    /**
     * Auto generated method that gets the related <code>PaymentMethodType</code> by the relation named <code>PaymentMethodType</code>.
     * @return the <code>PaymentMethodType</code>
     * @throws RepositoryException if an error occurs
     */
    public PaymentMethodType getPaymentMethodType() throws RepositoryException {
        if (this.paymentMethodType == null) {
            this.paymentMethodType = getRelatedOne(PaymentMethodType.class, "PaymentMethodType");
        }
        return this.paymentMethodType;
    }
    /**
     * Auto generated method that gets the related <code>PaymentMethod</code> by the relation named <code>PaymentMethod</code>.
     * @return the <code>PaymentMethod</code>
     * @throws RepositoryException if an error occurs
     */
    public PaymentMethod getPaymentMethod() throws RepositoryException {
        if (this.paymentMethod == null) {
            this.paymentMethod = getRelatedOne(PaymentMethod.class, "PaymentMethod");
        }
        return this.paymentMethod;
    }
    /**
     * Auto generated method that gets the related <code>Uom</code> by the relation named <code>CurrencyUom</code>.
     * @return the <code>Uom</code>
     * @throws RepositoryException if an error occurs
     */
    public Uom getCurrencyUom() throws RepositoryException {
        if (this.currencyUom == null) {
            this.currencyUom = getRelatedOne(Uom.class, "CurrencyUom");
        }
        return this.currencyUom;
    }
    /**
     * Auto generated method that gets the related <code>Uom</code> by the relation named <code>ActualCurrencyUom</code>.
     * @return the <code>Uom</code>
     * @throws RepositoryException if an error occurs
     */
    public Uom getActualCurrencyUom() throws RepositoryException {
        if (this.actualCurrencyUom == null) {
            this.actualCurrencyUom = getRelatedOne(Uom.class, "ActualCurrencyUom");
        }
        return this.actualCurrencyUom;
    }
    /**
     * Auto generated method that gets the related <code>CreditCard</code> by the relation named <code>CreditCard</code>.
     * @return the <code>CreditCard</code>
     * @throws RepositoryException if an error occurs
     */
    public CreditCard getCreditCard() throws RepositoryException {
        if (this.creditCard == null) {
            this.creditCard = getRelatedOne(CreditCard.class, "CreditCard");
        }
        return this.creditCard;
    }
    /**
     * Auto generated method that gets the related <code>EftAccount</code> by the relation named <code>EftAccount</code>.
     * @return the <code>EftAccount</code>
     * @throws RepositoryException if an error occurs
     */
    public EftAccount getEftAccount() throws RepositoryException {
        if (this.eftAccount == null) {
            this.eftAccount = getRelatedOne(EftAccount.class, "EftAccount");
        }
        return this.eftAccount;
    }
    /**
     * Auto generated method that gets the related <code>GiftCard</code> by the relation named <code>GiftCard</code>.
     * @return the <code>GiftCard</code>
     * @throws RepositoryException if an error occurs
     */
    public GiftCard getGiftCard() throws RepositoryException {
        if (this.giftCard == null) {
            this.giftCard = getRelatedOne(GiftCard.class, "GiftCard");
        }
        return this.giftCard;
    }
    /**
     * Auto generated method that gets the related <code>OrderPaymentPreference</code> by the relation named <code>OrderPaymentPreference</code>.
     * @return the <code>OrderPaymentPreference</code>
     * @throws RepositoryException if an error occurs
     */
    public OrderPaymentPreference getOrderPaymentPreference() throws RepositoryException {
        if (this.orderPaymentPreference == null) {
            this.orderPaymentPreference = getRelatedOne(OrderPaymentPreference.class, "OrderPaymentPreference");
        }
        return this.orderPaymentPreference;
    }
    /**
     * Auto generated method that gets the related <code>PaymentGatewayResponse</code> by the relation named <code>PaymentGatewayResponse</code>.
     * @return the <code>PaymentGatewayResponse</code>
     * @throws RepositoryException if an error occurs
     */
    public PaymentGatewayResponse getPaymentGatewayResponse() throws RepositoryException {
        if (this.paymentGatewayResponse == null) {
            this.paymentGatewayResponse = getRelatedOne(PaymentGatewayResponse.class, "PaymentGatewayResponse");
        }
        return this.paymentGatewayResponse;
    }
    /**
     * Auto generated method that gets the related <code>Party</code> by the relation named <code>FromParty</code>.
     * @return the <code>Party</code>
     * @throws RepositoryException if an error occurs
     */
    public Party getFromParty() throws RepositoryException {
        if (this.fromParty == null) {
            this.fromParty = getRelatedOne(Party.class, "FromParty");
        }
        return this.fromParty;
    }
    /**
     * Auto generated method that gets the related <code>Party</code> by the relation named <code>ToParty</code>.
     * @return the <code>Party</code>
     * @throws RepositoryException if an error occurs
     */
    public Party getToParty() throws RepositoryException {
        if (this.toParty == null) {
            this.toParty = getRelatedOne(Party.class, "ToParty");
        }
        return this.toParty;
    }
    /**
     * Auto generated method that gets the related <code>RoleType</code> by the relation named <code>ToRoleType</code>.
     * @return the <code>RoleType</code>
     * @throws RepositoryException if an error occurs
     */
    public RoleType getToRoleType() throws RepositoryException {
        if (this.toRoleType == null) {
            this.toRoleType = getRelatedOne(RoleType.class, "ToRoleType");
        }
        return this.toRoleType;
    }
    /**
     * Auto generated method that gets the related <code>PartyRole</code> by the relation named <code>ToPartyRole</code>.
     * @return the <code>PartyRole</code>
     * @throws RepositoryException if an error occurs
     */
    public PartyRole getToPartyRole() throws RepositoryException {
        if (this.toPartyRole == null) {
            this.toPartyRole = getRelatedOne(PartyRole.class, "ToPartyRole");
        }
        return this.toPartyRole;
    }
    /**
     * Auto generated method that gets the related <code>StatusItem</code> by the relation named <code>StatusItem</code>.
     * @return the <code>StatusItem</code>
     * @throws RepositoryException if an error occurs
     */
    public StatusItem getStatusItem() throws RepositoryException {
        if (this.statusItem == null) {
            this.statusItem = getRelatedOne(StatusItem.class, "StatusItem");
        }
        return this.statusItem;
    }
    /**
     * Auto generated method that gets the related <code>FinAccountTrans</code> by the relation named <code>FinAccountTrans</code>.
     * @return the <code>FinAccountTrans</code>
     * @throws RepositoryException if an error occurs
     */
    public FinAccountTrans getFinAccountTrans() throws RepositoryException {
        if (this.finAccountTrans == null) {
            this.finAccountTrans = getRelatedOne(FinAccountTrans.class, "FinAccountTrans");
        }
        return this.finAccountTrans;
    }
    /**
     * Auto generated method that gets the related <code>GlAccount</code> by the relation named <code>GlAccount</code>.
     * @return the <code>GlAccount</code>
     * @throws RepositoryException if an error occurs
     */
    public GlAccount getGlAccount() throws RepositoryException {
        if (this.glAccount == null) {
            this.glAccount = getRelatedOne(GlAccount.class, "GlAccount");
        }
        return this.glAccount;
    }
    /**
     * Auto generated method that gets the related <code>Enumeration</code> by the relation named <code>tag1Enumeration</code>.
     * @return the <code>Enumeration</code>
     * @throws RepositoryException if an error occurs
     */
    public Enumeration gettag1Enumeration() throws RepositoryException {
        if (this.tag1Enumeration == null) {
            this.tag1Enumeration = getRelatedOne(Enumeration.class, "tag1Enumeration");
        }
        return this.tag1Enumeration;
    }
    /**
     * Auto generated method that gets the related <code>Enumeration</code> by the relation named <code>tag2Enumeration</code>.
     * @return the <code>Enumeration</code>
     * @throws RepositoryException if an error occurs
     */
    public Enumeration gettag2Enumeration() throws RepositoryException {
        if (this.tag2Enumeration == null) {
            this.tag2Enumeration = getRelatedOne(Enumeration.class, "tag2Enumeration");
        }
        return this.tag2Enumeration;
    }
    /**
     * Auto generated method that gets the related <code>Enumeration</code> by the relation named <code>tag3Enumeration</code>.
     * @return the <code>Enumeration</code>
     * @throws RepositoryException if an error occurs
     */
    public Enumeration gettag3Enumeration() throws RepositoryException {
        if (this.tag3Enumeration == null) {
            this.tag3Enumeration = getRelatedOne(Enumeration.class, "tag3Enumeration");
        }
        return this.tag3Enumeration;
    }
    /**
     * Auto generated method that gets the related <code>Enumeration</code> by the relation named <code>tag4Enumeration</code>.
     * @return the <code>Enumeration</code>
     * @throws RepositoryException if an error occurs
     */
    public Enumeration gettag4Enumeration() throws RepositoryException {
        if (this.tag4Enumeration == null) {
            this.tag4Enumeration = getRelatedOne(Enumeration.class, "tag4Enumeration");
        }
        return this.tag4Enumeration;
    }
    /**
     * Auto generated method that gets the related <code>Enumeration</code> by the relation named <code>tag5Enumeration</code>.
     * @return the <code>Enumeration</code>
     * @throws RepositoryException if an error occurs
     */
    public Enumeration gettag5Enumeration() throws RepositoryException {
        if (this.tag5Enumeration == null) {
            this.tag5Enumeration = getRelatedOne(Enumeration.class, "tag5Enumeration");
        }
        return this.tag5Enumeration;
    }
    /**
     * Auto generated method that gets the related <code>Enumeration</code> by the relation named <code>tag6Enumeration</code>.
     * @return the <code>Enumeration</code>
     * @throws RepositoryException if an error occurs
     */
    public Enumeration gettag6Enumeration() throws RepositoryException {
        if (this.tag6Enumeration == null) {
            this.tag6Enumeration = getRelatedOne(Enumeration.class, "tag6Enumeration");
        }
        return this.tag6Enumeration;
    }
    /**
     * Auto generated method that gets the related <code>Enumeration</code> by the relation named <code>tag7Enumeration</code>.
     * @return the <code>Enumeration</code>
     * @throws RepositoryException if an error occurs
     */
    public Enumeration gettag7Enumeration() throws RepositoryException {
        if (this.tag7Enumeration == null) {
            this.tag7Enumeration = getRelatedOne(Enumeration.class, "tag7Enumeration");
        }
        return this.tag7Enumeration;
    }
    /**
     * Auto generated method that gets the related <code>Enumeration</code> by the relation named <code>tag8Enumeration</code>.
     * @return the <code>Enumeration</code>
     * @throws RepositoryException if an error occurs
     */
    public Enumeration gettag8Enumeration() throws RepositoryException {
        if (this.tag8Enumeration == null) {
            this.tag8Enumeration = getRelatedOne(Enumeration.class, "tag8Enumeration");
        }
        return this.tag8Enumeration;
    }
    /**
     * Auto generated method that gets the related <code>Enumeration</code> by the relation named <code>tag9Enumeration</code>.
     * @return the <code>Enumeration</code>
     * @throws RepositoryException if an error occurs
     */
    public Enumeration gettag9Enumeration() throws RepositoryException {
        if (this.tag9Enumeration == null) {
            this.tag9Enumeration = getRelatedOne(Enumeration.class, "tag9Enumeration");
        }
        return this.tag9Enumeration;
    }
    /**
     * Auto generated method that gets the related <code>Enumeration</code> by the relation named <code>tag10Enumeration</code>.
     * @return the <code>Enumeration</code>
     * @throws RepositoryException if an error occurs
     */
    public Enumeration gettag10Enumeration() throws RepositoryException {
        if (this.tag10Enumeration == null) {
            this.tag10Enumeration = getRelatedOne(Enumeration.class, "tag10Enumeration");
        }
        return this.tag10Enumeration;
    }
    /**
     * Auto generated method that gets the related <code>AcctgTrans</code> by the relation named <code>AcctgTrans</code>.
     * @return the list of <code>AcctgTrans</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends AcctgTrans> getAcctgTranses() throws RepositoryException {
        if (this.acctgTranses == null) {
            this.acctgTranses = getRelated(AcctgTrans.class, "AcctgTrans");
        }
        return this.acctgTranses;
    }
    /**
     * Auto generated method that gets the related <code>CashDrawerTransaction</code> by the relation named <code>CashDrawerTransaction</code>.
     * @return the list of <code>CashDrawerTransaction</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends CashDrawerTransaction> getCashDrawerTransactions() throws RepositoryException {
        if (this.cashDrawerTransactions == null) {
            this.cashDrawerTransactions = getRelated(CashDrawerTransaction.class, "CashDrawerTransaction");
        }
        return this.cashDrawerTransactions;
    }
    /**
     * Auto generated method that gets the related <code>Deduction</code> by the relation named <code>Deduction</code>.
     * @return the list of <code>Deduction</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends Deduction> getDeductions() throws RepositoryException {
        if (this.deductions == null) {
            this.deductions = getRelated(Deduction.class, "Deduction");
        }
        return this.deductions;
    }
    /**
     * Auto generated method that gets the related <code>InvoiceAdjustment</code> by the relation named <code>InvoiceAdjustment</code>.
     * @return the list of <code>InvoiceAdjustment</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends InvoiceAdjustment> getInvoiceAdjustments() throws RepositoryException {
        if (this.invoiceAdjustments == null) {
            this.invoiceAdjustments = getRelated(InvoiceAdjustment.class, "InvoiceAdjustment");
        }
        return this.invoiceAdjustments;
    }
    /**
     * Auto generated method that gets the related <code>LockboxBatchItemDetail</code> by the relation named <code>LockboxBatchItemDetail</code>.
     * @return the list of <code>LockboxBatchItemDetail</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends LockboxBatchItemDetail> getLockboxBatchItemDetails() throws RepositoryException {
        if (this.lockboxBatchItemDetails == null) {
            this.lockboxBatchItemDetails = getRelated(LockboxBatchItemDetail.class, "LockboxBatchItemDetail");
        }
        return this.lockboxBatchItemDetails;
    }
    /**
     * Auto generated method that gets the related <code>PaycheckItem</code> by the relation named <code>PaycheckItem</code>.
     * @return the list of <code>PaycheckItem</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends PaycheckItem> getPaycheckItems() throws RepositoryException {
        if (this.paycheckItems == null) {
            this.paycheckItems = getRelated(PaycheckItem.class, "PaycheckItem");
        }
        return this.paycheckItems;
    }
    /**
     * Auto generated method that gets the related <code>PaymentApplication</code> by the relation named <code>PaymentApplication</code>.
     * @return the list of <code>PaymentApplication</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends PaymentApplication> getPaymentApplications() throws RepositoryException {
        if (this.paymentApplications == null) {
            this.paymentApplications = getRelated(PaymentApplication.class, "PaymentApplication");
        }
        return this.paymentApplications;
    }
    /**
     * Auto generated method that gets the related <code>PaymentApplication</code> by the relation named <code>ToPaymentApplication</code>.
     * @return the list of <code>PaymentApplication</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends PaymentApplication> getToPaymentApplications() throws RepositoryException {
        if (this.toPaymentApplications == null) {
            this.toPaymentApplications = getRelated(PaymentApplication.class, "ToPaymentApplication");
        }
        return this.toPaymentApplications;
    }
    /**
     * Auto generated method that gets the related <code>PaymentAttribute</code> by the relation named <code>PaymentAttribute</code>.
     * @return the list of <code>PaymentAttribute</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends PaymentAttribute> getPaymentAttributes() throws RepositoryException {
        if (this.paymentAttributes == null) {
            this.paymentAttributes = getRelated(PaymentAttribute.class, "PaymentAttribute");
        }
        return this.paymentAttributes;
    }
    /**
     * Auto generated method that gets the related <code>PaymentBudgetAllocation</code> by the relation named <code>PaymentBudgetAllocation</code>.
     * @return the list of <code>PaymentBudgetAllocation</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends PaymentBudgetAllocation> getPaymentBudgetAllocations() throws RepositoryException {
        if (this.paymentBudgetAllocations == null) {
            this.paymentBudgetAllocations = getRelated(PaymentBudgetAllocation.class, "PaymentBudgetAllocation");
        }
        return this.paymentBudgetAllocations;
    }
    /**
     * Auto generated method that gets the related <code>PerfReview</code> by the relation named <code>PerfReview</code>.
     * @return the list of <code>PerfReview</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends PerfReview> getPerfReviews() throws RepositoryException {
        if (this.perfReviews == null) {
            this.perfReviews = getRelated(PerfReview.class, "PerfReview");
        }
        return this.perfReviews;
    }
    /**
     * Auto generated method that gets the related <code>ReturnItemResponse</code> by the relation named <code>ReturnItemResponse</code>.
     * @return the list of <code>ReturnItemResponse</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ReturnItemResponse> getReturnItemResponses() throws RepositoryException {
        if (this.returnItemResponses == null) {
            this.returnItemResponses = getRelated(ReturnItemResponse.class, "ReturnItemResponse");
        }
        return this.returnItemResponses;
    }

    /**
     * Auto generated value setter.
     * @param paymentType the paymentType to set
    */
    public void setPaymentType(PaymentType paymentType) {
        this.paymentType = paymentType;
    }
    /**
     * Auto generated value setter.
     * @param paymentTypeAttrs the paymentTypeAttrs to set
    */
    public void setPaymentTypeAttrs(List<PaymentTypeAttr> paymentTypeAttrs) {
        this.paymentTypeAttrs = paymentTypeAttrs;
    }
    /**
     * Auto generated value setter.
     * @param paymentMethodType the paymentMethodType to set
    */
    public void setPaymentMethodType(PaymentMethodType paymentMethodType) {
        this.paymentMethodType = paymentMethodType;
    }
    /**
     * Auto generated value setter.
     * @param paymentMethod the paymentMethod to set
    */
    public void setPaymentMethod(PaymentMethod paymentMethod) {
        this.paymentMethod = paymentMethod;
    }
    /**
     * Auto generated value setter.
     * @param currencyUom the currencyUom to set
    */
    public void setCurrencyUom(Uom currencyUom) {
        this.currencyUom = currencyUom;
    }
    /**
     * Auto generated value setter.
     * @param actualCurrencyUom the actualCurrencyUom to set
    */
    public void setActualCurrencyUom(Uom actualCurrencyUom) {
        this.actualCurrencyUom = actualCurrencyUom;
    }
    /**
     * Auto generated value setter.
     * @param creditCard the creditCard to set
    */
    public void setCreditCard(CreditCard creditCard) {
        this.creditCard = creditCard;
    }
    /**
     * Auto generated value setter.
     * @param eftAccount the eftAccount to set
    */
    public void setEftAccount(EftAccount eftAccount) {
        this.eftAccount = eftAccount;
    }
    /**
     * Auto generated value setter.
     * @param giftCard the giftCard to set
    */
    public void setGiftCard(GiftCard giftCard) {
        this.giftCard = giftCard;
    }
    /**
     * Auto generated value setter.
     * @param orderPaymentPreference the orderPaymentPreference to set
    */
    public void setOrderPaymentPreference(OrderPaymentPreference orderPaymentPreference) {
        this.orderPaymentPreference = orderPaymentPreference;
    }
    /**
     * Auto generated value setter.
     * @param paymentGatewayResponse the paymentGatewayResponse to set
    */
    public void setPaymentGatewayResponse(PaymentGatewayResponse paymentGatewayResponse) {
        this.paymentGatewayResponse = paymentGatewayResponse;
    }
    /**
     * Auto generated value setter.
     * @param fromParty the fromParty to set
    */
    public void setFromParty(Party fromParty) {
        this.fromParty = fromParty;
    }
    /**
     * Auto generated value setter.
     * @param toParty the toParty to set
    */
    public void setToParty(Party toParty) {
        this.toParty = toParty;
    }
    /**
     * Auto generated value setter.
     * @param toRoleType the toRoleType to set
    */
    public void setToRoleType(RoleType toRoleType) {
        this.toRoleType = toRoleType;
    }
    /**
     * Auto generated value setter.
     * @param toPartyRole the toPartyRole to set
    */
    public void setToPartyRole(PartyRole toPartyRole) {
        this.toPartyRole = toPartyRole;
    }
    /**
     * Auto generated value setter.
     * @param statusItem the statusItem to set
    */
    public void setStatusItem(StatusItem statusItem) {
        this.statusItem = statusItem;
    }
    /**
     * Auto generated value setter.
     * @param finAccountTrans the finAccountTrans to set
    */
    public void setFinAccountTrans(FinAccountTrans finAccountTrans) {
        this.finAccountTrans = finAccountTrans;
    }
    /**
     * Auto generated value setter.
     * @param glAccount the glAccount to set
    */
    public void setGlAccount(GlAccount glAccount) {
        this.glAccount = glAccount;
    }
    /**
     * Auto generated value setter.
     * @param tag1Enumeration the tag1Enumeration to set
    */
    public void settag1Enumeration(Enumeration tag1Enumeration) {
        this.tag1Enumeration = tag1Enumeration;
    }
    /**
     * Auto generated value setter.
     * @param tag2Enumeration the tag2Enumeration to set
    */
    public void settag2Enumeration(Enumeration tag2Enumeration) {
        this.tag2Enumeration = tag2Enumeration;
    }
    /**
     * Auto generated value setter.
     * @param tag3Enumeration the tag3Enumeration to set
    */
    public void settag3Enumeration(Enumeration tag3Enumeration) {
        this.tag3Enumeration = tag3Enumeration;
    }
    /**
     * Auto generated value setter.
     * @param tag4Enumeration the tag4Enumeration to set
    */
    public void settag4Enumeration(Enumeration tag4Enumeration) {
        this.tag4Enumeration = tag4Enumeration;
    }
    /**
     * Auto generated value setter.
     * @param tag5Enumeration the tag5Enumeration to set
    */
    public void settag5Enumeration(Enumeration tag5Enumeration) {
        this.tag5Enumeration = tag5Enumeration;
    }
    /**
     * Auto generated value setter.
     * @param tag6Enumeration the tag6Enumeration to set
    */
    public void settag6Enumeration(Enumeration tag6Enumeration) {
        this.tag6Enumeration = tag6Enumeration;
    }
    /**
     * Auto generated value setter.
     * @param tag7Enumeration the tag7Enumeration to set
    */
    public void settag7Enumeration(Enumeration tag7Enumeration) {
        this.tag7Enumeration = tag7Enumeration;
    }
    /**
     * Auto generated value setter.
     * @param tag8Enumeration the tag8Enumeration to set
    */
    public void settag8Enumeration(Enumeration tag8Enumeration) {
        this.tag8Enumeration = tag8Enumeration;
    }
    /**
     * Auto generated value setter.
     * @param tag9Enumeration the tag9Enumeration to set
    */
    public void settag9Enumeration(Enumeration tag9Enumeration) {
        this.tag9Enumeration = tag9Enumeration;
    }
    /**
     * Auto generated value setter.
     * @param tag10Enumeration the tag10Enumeration to set
    */
    public void settag10Enumeration(Enumeration tag10Enumeration) {
        this.tag10Enumeration = tag10Enumeration;
    }
    /**
     * Auto generated value setter.
     * @param acctgTranses the acctgTranses to set
    */
    public void setAcctgTranses(List<AcctgTrans> acctgTranses) {
        this.acctgTranses = acctgTranses;
    }
    /**
     * Auto generated value setter.
     * @param cashDrawerTransactions the cashDrawerTransactions to set
    */
    public void setCashDrawerTransactions(List<CashDrawerTransaction> cashDrawerTransactions) {
        this.cashDrawerTransactions = cashDrawerTransactions;
    }
    /**
     * Auto generated value setter.
     * @param deductions the deductions to set
    */
    public void setDeductions(List<Deduction> deductions) {
        this.deductions = deductions;
    }
    /**
     * Auto generated value setter.
     * @param invoiceAdjustments the invoiceAdjustments to set
    */
    public void setInvoiceAdjustments(List<InvoiceAdjustment> invoiceAdjustments) {
        this.invoiceAdjustments = invoiceAdjustments;
    }
    /**
     * Auto generated value setter.
     * @param lockboxBatchItemDetails the lockboxBatchItemDetails to set
    */
    public void setLockboxBatchItemDetails(List<LockboxBatchItemDetail> lockboxBatchItemDetails) {
        this.lockboxBatchItemDetails = lockboxBatchItemDetails;
    }
    /**
     * Auto generated value setter.
     * @param paycheckItems the paycheckItems to set
    */
    public void setPaycheckItems(List<PaycheckItem> paycheckItems) {
        this.paycheckItems = paycheckItems;
    }
    /**
     * Auto generated value setter.
     * @param paymentApplications the paymentApplications to set
    */
    public void setPaymentApplications(List<PaymentApplication> paymentApplications) {
        this.paymentApplications = paymentApplications;
    }
    /**
     * Auto generated value setter.
     * @param toPaymentApplications the toPaymentApplications to set
    */
    public void setToPaymentApplications(List<PaymentApplication> toPaymentApplications) {
        this.toPaymentApplications = toPaymentApplications;
    }
    /**
     * Auto generated value setter.
     * @param paymentAttributes the paymentAttributes to set
    */
    public void setPaymentAttributes(List<PaymentAttribute> paymentAttributes) {
        this.paymentAttributes = paymentAttributes;
    }
    /**
     * Auto generated value setter.
     * @param paymentBudgetAllocations the paymentBudgetAllocations to set
    */
    public void setPaymentBudgetAllocations(List<PaymentBudgetAllocation> paymentBudgetAllocations) {
        this.paymentBudgetAllocations = paymentBudgetAllocations;
    }
    /**
     * Auto generated value setter.
     * @param perfReviews the perfReviews to set
    */
    public void setPerfReviews(List<PerfReview> perfReviews) {
        this.perfReviews = perfReviews;
    }
    /**
     * Auto generated value setter.
     * @param returnItemResponses the returnItemResponses to set
    */
    public void setReturnItemResponses(List<ReturnItemResponse> returnItemResponses) {
        this.returnItemResponses = returnItemResponses;
    }

    /**
     * Auto generated method that add item to collection.
     */
    public void addPaycheckItem(PaycheckItem paycheckItem) {
        if (this.paycheckItems == null) {
            this.paycheckItems = new ArrayList<PaycheckItem>();
        }
        this.paycheckItems.add(paycheckItem);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removePaycheckItem(PaycheckItem paycheckItem) {
        if (this.paycheckItems == null) {
            return;
        }
        this.paycheckItems.remove(paycheckItem);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearPaycheckItem() {
        if (this.paycheckItems == null) {
            return;
        }
        this.paycheckItems.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addPaymentAttribute(PaymentAttribute paymentAttribute) {
        if (this.paymentAttributes == null) {
            this.paymentAttributes = new ArrayList<PaymentAttribute>();
        }
        this.paymentAttributes.add(paymentAttribute);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removePaymentAttribute(PaymentAttribute paymentAttribute) {
        if (this.paymentAttributes == null) {
            return;
        }
        this.paymentAttributes.remove(paymentAttribute);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearPaymentAttribute() {
        if (this.paymentAttributes == null) {
            return;
        }
        this.paymentAttributes.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addPaymentBudgetAllocation(PaymentBudgetAllocation paymentBudgetAllocation) {
        if (this.paymentBudgetAllocations == null) {
            this.paymentBudgetAllocations = new ArrayList<PaymentBudgetAllocation>();
        }
        this.paymentBudgetAllocations.add(paymentBudgetAllocation);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removePaymentBudgetAllocation(PaymentBudgetAllocation paymentBudgetAllocation) {
        if (this.paymentBudgetAllocations == null) {
            return;
        }
        this.paymentBudgetAllocations.remove(paymentBudgetAllocation);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearPaymentBudgetAllocation() {
        if (this.paymentBudgetAllocations == null) {
            return;
        }
        this.paymentBudgetAllocations.clear();
    }

    /** {@inheritDoc} */
    @Override
    public void fromMap(Map<String, Object> mapValue) {
        preInit();
        setPaymentId((String) mapValue.get("paymentId"));
        setPaymentTypeId((String) mapValue.get("paymentTypeId"));
        setPaymentMethodTypeId((String) mapValue.get("paymentMethodTypeId"));
        setPaymentMethodId((String) mapValue.get("paymentMethodId"));
        setPaymentGatewayResponseId((String) mapValue.get("paymentGatewayResponseId"));
        setPaymentPreferenceId((String) mapValue.get("paymentPreferenceId"));
        setPartyIdFrom((String) mapValue.get("partyIdFrom"));
        setPartyIdTo((String) mapValue.get("partyIdTo"));
        setRoleTypeIdTo((String) mapValue.get("roleTypeIdTo"));
        setStatusId((String) mapValue.get("statusId"));
        setEffectiveDate((Timestamp) mapValue.get("effectiveDate"));
        setPaymentRefNum((String) mapValue.get("paymentRefNum"));
        setAmount(convertToBigDecimal(mapValue.get("amount")));
        setCurrencyUomId((String) mapValue.get("currencyUomId"));
        setComments((String) mapValue.get("comments"));
        setFinAccountTransId((String) mapValue.get("finAccountTransId"));
        setOverrideGlAccountId((String) mapValue.get("overrideGlAccountId"));
        setActualCurrencyAmount(convertToBigDecimal(mapValue.get("actualCurrencyAmount")));
        setActualCurrencyUomId((String) mapValue.get("actualCurrencyUomId"));
        setLastUpdatedStamp((Timestamp) mapValue.get("lastUpdatedStamp"));
        setLastUpdatedTxStamp((Timestamp) mapValue.get("lastUpdatedTxStamp"));
        setCreatedStamp((Timestamp) mapValue.get("createdStamp"));
        setCreatedTxStamp((Timestamp) mapValue.get("createdTxStamp"));
        setAppliedAmount(convertToBigDecimal(mapValue.get("appliedAmount")));
        setOpenAmount(convertToBigDecimal(mapValue.get("openAmount")));
        setAcctgTagEnumId1((String) mapValue.get("acctgTagEnumId1"));
        setAcctgTagEnumId2((String) mapValue.get("acctgTagEnumId2"));
        setAcctgTagEnumId3((String) mapValue.get("acctgTagEnumId3"));
        setAcctgTagEnumId4((String) mapValue.get("acctgTagEnumId4"));
        setAcctgTagEnumId5((String) mapValue.get("acctgTagEnumId5"));
        setAcctgTagEnumId6((String) mapValue.get("acctgTagEnumId6"));
        setAcctgTagEnumId7((String) mapValue.get("acctgTagEnumId7"));
        setAcctgTagEnumId8((String) mapValue.get("acctgTagEnumId8"));
        setAcctgTagEnumId9((String) mapValue.get("acctgTagEnumId9"));
        setAcctgTagEnumId10((String) mapValue.get("acctgTagEnumId10"));
        postInit();
    }

    /** {@inheritDoc} */
    @Override
    public Map<String, Object> toMap() {
        Map<String, Object> mapValue = new FastMap<String, Object>();
        mapValue.put("paymentId", getPaymentId());
        mapValue.put("paymentTypeId", getPaymentTypeId());
        mapValue.put("paymentMethodTypeId", getPaymentMethodTypeId());
        mapValue.put("paymentMethodId", getPaymentMethodId());
        mapValue.put("paymentGatewayResponseId", getPaymentGatewayResponseId());
        mapValue.put("paymentPreferenceId", getPaymentPreferenceId());
        mapValue.put("partyIdFrom", getPartyIdFrom());
        mapValue.put("partyIdTo", getPartyIdTo());
        mapValue.put("roleTypeIdTo", getRoleTypeIdTo());
        mapValue.put("statusId", getStatusId());
        mapValue.put("effectiveDate", getEffectiveDate());
        mapValue.put("paymentRefNum", getPaymentRefNum());
        mapValue.put("amount", getAmount());
        mapValue.put("currencyUomId", getCurrencyUomId());
        mapValue.put("comments", getComments());
        mapValue.put("finAccountTransId", getFinAccountTransId());
        mapValue.put("overrideGlAccountId", getOverrideGlAccountId());
        mapValue.put("actualCurrencyAmount", getActualCurrencyAmount());
        mapValue.put("actualCurrencyUomId", getActualCurrencyUomId());
        mapValue.put("lastUpdatedStamp", getLastUpdatedStamp());
        mapValue.put("lastUpdatedTxStamp", getLastUpdatedTxStamp());
        mapValue.put("createdStamp", getCreatedStamp());
        mapValue.put("createdTxStamp", getCreatedTxStamp());
        mapValue.put("appliedAmount", getAppliedAmount());
        mapValue.put("openAmount", getOpenAmount());
        mapValue.put("acctgTagEnumId1", getAcctgTagEnumId1());
        mapValue.put("acctgTagEnumId2", getAcctgTagEnumId2());
        mapValue.put("acctgTagEnumId3", getAcctgTagEnumId3());
        mapValue.put("acctgTagEnumId4", getAcctgTagEnumId4());
        mapValue.put("acctgTagEnumId5", getAcctgTagEnumId5());
        mapValue.put("acctgTagEnumId6", getAcctgTagEnumId6());
        mapValue.put("acctgTagEnumId7", getAcctgTagEnumId7());
        mapValue.put("acctgTagEnumId8", getAcctgTagEnumId8());
        mapValue.put("acctgTagEnumId9", getAcctgTagEnumId9());
        mapValue.put("acctgTagEnumId10", getAcctgTagEnumId10());
        return mapValue;
    }


}
