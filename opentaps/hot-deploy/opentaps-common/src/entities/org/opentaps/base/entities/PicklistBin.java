package org.opentaps.base.entities;

/*
 * Copyright (c) Open Source Strategies, Inc.
 *
 * Opentaps is free software: you can redistribute it and/or modify it
 * under the terms of the GNU Affero General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Opentaps is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with Opentaps.  If not, see <http://www.gnu.org/licenses/>.
 */

// DO NOT EDIT THIS FILE!  THIS IS AUTO GENERATED AND WILL GET WRITTEN OVER PERIODICALLY WHEN THE DATA MODEL CHANGES
// EXTEND THIS CLASS INSTEAD.

import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;

import javolution.util.FastMap;

import org.opentaps.foundation.entity.Entity;
import org.opentaps.foundation.entity.EntityFieldInterface;
import org.opentaps.foundation.repository.RepositoryException;
import org.opentaps.foundation.repository.RepositoryInterface;
import javax.persistence.*;
import org.hibernate.search.annotations.*;
import java.lang.Long;
import java.lang.String;
import java.sql.Timestamp;

/**
 * Auto generated base entity PicklistBin.
 */
@javax.persistence.Entity
@Table(name="PICKLIST_BIN")
public class PicklistBin extends Entity {
static {
java.util.Map<String, String> fields = new java.util.HashMap<String, String>();
        fields.put("picklistBinId", "PICKLIST_BIN_ID");
        fields.put("picklistId", "PICKLIST_ID");
        fields.put("binLocationNumber", "BIN_LOCATION_NUMBER");
        fields.put("primaryOrderId", "PRIMARY_ORDER_ID");
        fields.put("primaryShipGroupSeqId", "PRIMARY_SHIP_GROUP_SEQ_ID");
        fields.put("lastUpdatedStamp", "LAST_UPDATED_STAMP");
        fields.put("lastUpdatedTxStamp", "LAST_UPDATED_TX_STAMP");
        fields.put("createdStamp", "CREATED_STAMP");
        fields.put("createdTxStamp", "CREATED_TX_STAMP");
fieldMapColumns.put("PicklistBin", fields);
}
  public static enum Fields implements EntityFieldInterface<PicklistBin> {
    picklistBinId("picklistBinId"),
    picklistId("picklistId"),
    binLocationNumber("binLocationNumber"),
    primaryOrderId("primaryOrderId"),
    primaryShipGroupSeqId("primaryShipGroupSeqId"),
    lastUpdatedStamp("lastUpdatedStamp"),
    lastUpdatedTxStamp("lastUpdatedTxStamp"),
    createdStamp("createdStamp"),
    createdTxStamp("createdTxStamp");
    private final String fieldName;
    private Fields(String name) { fieldName = name; }
    /** {@inheritDoc} */
    public String getName() { return fieldName; }
    /** {@inheritDoc} */
    public String asc() { return fieldName + " ASC"; }
    /** {@inheritDoc} */
    public String desc() { return fieldName + " DESC"; }
  }

   @org.hibernate.annotations.GenericGenerator(name="PicklistBin_GEN",  strategy="org.opentaps.foundation.entity.hibernate.OpentapsIdentifierGenerator")
   @GeneratedValue(generator="PicklistBin_GEN")
   @Id
   @Column(name="PICKLIST_BIN_ID")
   private String picklistBinId;
   @Column(name="PICKLIST_ID")
   private String picklistId;
   @Column(name="BIN_LOCATION_NUMBER")
   private Long binLocationNumber;
   @Column(name="PRIMARY_ORDER_ID")
   private String primaryOrderId;
   @Column(name="PRIMARY_SHIP_GROUP_SEQ_ID")
   private String primaryShipGroupSeqId;
   @Column(name="LAST_UPDATED_STAMP")
   private Timestamp lastUpdatedStamp;
   @Column(name="LAST_UPDATED_TX_STAMP")
   private Timestamp lastUpdatedTxStamp;
   @Column(name="CREATED_STAMP")
   private Timestamp createdStamp;
   @Column(name="CREATED_TX_STAMP")
   private Timestamp createdTxStamp;
   @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="PICKLIST_ID", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private Picklist picklist = null;
   private transient OrderItemShipGroup primaryOrderItemShipGroup = null;
   @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="PRIMARY_ORDER_ID", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private OrderHeader primaryOrderHeader = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="picklistBin", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="PICKLIST_BIN_ID")
   
   private List<PicklistItem> picklistItems = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="picklistBin", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="PICKLIST_BIN_ID")
   
   private List<Shipment> shipments = null;

  /**
   * Default constructor.
   */
  public PicklistBin() {
      super();
      this.baseEntityName = "PicklistBin";
      this.isView = false;
      
      this.primaryKeyNames = new ArrayList<String>();
      this.primaryKeyNames.add("picklistBinId");
      this.allFieldsNames = new ArrayList<String>();
      this.allFieldsNames.add("picklistBinId");this.allFieldsNames.add("picklistId");this.allFieldsNames.add("binLocationNumber");this.allFieldsNames.add("primaryOrderId");this.allFieldsNames.add("primaryShipGroupSeqId");this.allFieldsNames.add("lastUpdatedStamp");this.allFieldsNames.add("lastUpdatedTxStamp");this.allFieldsNames.add("createdStamp");this.allFieldsNames.add("createdTxStamp");
      this.nonPrimaryKeyNames = new ArrayList<String>();
      this.nonPrimaryKeyNames.addAll(allFieldsNames);
      this.nonPrimaryKeyNames.removeAll(primaryKeyNames);
  }

  /**
   * Constructor with a repository.
   * @param repository a <code>RepositoryInterface</code> value
   */
  public PicklistBin(RepositoryInterface repository) {
      this();
      initRepository(repository);
  }

    /**
     * Auto generated value setter.
     * @param picklistBinId the picklistBinId to set
     */
    public void setPicklistBinId(String picklistBinId) {
        this.picklistBinId = picklistBinId;
    }
    /**
     * Auto generated value setter.
     * @param picklistId the picklistId to set
     */
    public void setPicklistId(String picklistId) {
        this.picklistId = picklistId;
    }
    /**
     * Auto generated value setter.
     * @param binLocationNumber the binLocationNumber to set
     */
    public void setBinLocationNumber(Long binLocationNumber) {
        this.binLocationNumber = binLocationNumber;
    }
    /**
     * Auto generated value setter.
     * @param primaryOrderId the primaryOrderId to set
     */
    public void setPrimaryOrderId(String primaryOrderId) {
        this.primaryOrderId = primaryOrderId;
    }
    /**
     * Auto generated value setter.
     * @param primaryShipGroupSeqId the primaryShipGroupSeqId to set
     */
    public void setPrimaryShipGroupSeqId(String primaryShipGroupSeqId) {
        this.primaryShipGroupSeqId = primaryShipGroupSeqId;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedStamp the lastUpdatedStamp to set
     */
    public void setLastUpdatedStamp(Timestamp lastUpdatedStamp) {
        this.lastUpdatedStamp = lastUpdatedStamp;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedTxStamp the lastUpdatedTxStamp to set
     */
    public void setLastUpdatedTxStamp(Timestamp lastUpdatedTxStamp) {
        this.lastUpdatedTxStamp = lastUpdatedTxStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdStamp the createdStamp to set
     */
    public void setCreatedStamp(Timestamp createdStamp) {
        this.createdStamp = createdStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdTxStamp the createdTxStamp to set
     */
    public void setCreatedTxStamp(Timestamp createdTxStamp) {
        this.createdTxStamp = createdTxStamp;
    }

    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPicklistBinId() {
        return this.picklistBinId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPicklistId() {
        return this.picklistId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Long</code>
     */
    public Long getBinLocationNumber() {
        return this.binLocationNumber;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPrimaryOrderId() {
        return this.primaryOrderId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPrimaryShipGroupSeqId() {
        return this.primaryShipGroupSeqId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedStamp() {
        return this.lastUpdatedStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedTxStamp() {
        return this.lastUpdatedTxStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedStamp() {
        return this.createdStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedTxStamp() {
        return this.createdTxStamp;
    }

    /**
     * Auto generated method that gets the related <code>Picklist</code> by the relation named <code>Picklist</code>.
     * @return the <code>Picklist</code>
     * @throws RepositoryException if an error occurs
     */
    public Picklist getPicklist() throws RepositoryException {
        if (this.picklist == null) {
            this.picklist = getRelatedOne(Picklist.class, "Picklist");
        }
        return this.picklist;
    }
    /**
     * Auto generated method that gets the related <code>OrderItemShipGroup</code> by the relation named <code>PrimaryOrderItemShipGroup</code>.
     * @return the <code>OrderItemShipGroup</code>
     * @throws RepositoryException if an error occurs
     */
    public OrderItemShipGroup getPrimaryOrderItemShipGroup() throws RepositoryException {
        if (this.primaryOrderItemShipGroup == null) {
            this.primaryOrderItemShipGroup = getRelatedOne(OrderItemShipGroup.class, "PrimaryOrderItemShipGroup");
        }
        return this.primaryOrderItemShipGroup;
    }
    /**
     * Auto generated method that gets the related <code>OrderHeader</code> by the relation named <code>PrimaryOrderHeader</code>.
     * @return the <code>OrderHeader</code>
     * @throws RepositoryException if an error occurs
     */
    public OrderHeader getPrimaryOrderHeader() throws RepositoryException {
        if (this.primaryOrderHeader == null) {
            this.primaryOrderHeader = getRelatedOne(OrderHeader.class, "PrimaryOrderHeader");
        }
        return this.primaryOrderHeader;
    }
    /**
     * Auto generated method that gets the related <code>PicklistItem</code> by the relation named <code>PicklistItem</code>.
     * @return the list of <code>PicklistItem</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends PicklistItem> getPicklistItems() throws RepositoryException {
        if (this.picklistItems == null) {
            this.picklistItems = getRelated(PicklistItem.class, "PicklistItem");
        }
        return this.picklistItems;
    }
    /**
     * Auto generated method that gets the related <code>Shipment</code> by the relation named <code>Shipment</code>.
     * @return the list of <code>Shipment</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends Shipment> getShipments() throws RepositoryException {
        if (this.shipments == null) {
            this.shipments = getRelated(Shipment.class, "Shipment");
        }
        return this.shipments;
    }

    /**
     * Auto generated value setter.
     * @param picklist the picklist to set
    */
    public void setPicklist(Picklist picklist) {
        this.picklist = picklist;
    }
    /**
     * Auto generated value setter.
     * @param primaryOrderItemShipGroup the primaryOrderItemShipGroup to set
    */
    public void setPrimaryOrderItemShipGroup(OrderItemShipGroup primaryOrderItemShipGroup) {
        this.primaryOrderItemShipGroup = primaryOrderItemShipGroup;
    }
    /**
     * Auto generated value setter.
     * @param primaryOrderHeader the primaryOrderHeader to set
    */
    public void setPrimaryOrderHeader(OrderHeader primaryOrderHeader) {
        this.primaryOrderHeader = primaryOrderHeader;
    }
    /**
     * Auto generated value setter.
     * @param picklistItems the picklistItems to set
    */
    public void setPicklistItems(List<PicklistItem> picklistItems) {
        this.picklistItems = picklistItems;
    }
    /**
     * Auto generated value setter.
     * @param shipments the shipments to set
    */
    public void setShipments(List<Shipment> shipments) {
        this.shipments = shipments;
    }

    /**
     * Auto generated method that add item to collection.
     */
    public void addPicklistItem(PicklistItem picklistItem) {
        if (this.picklistItems == null) {
            this.picklistItems = new ArrayList<PicklistItem>();
        }
        this.picklistItems.add(picklistItem);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removePicklistItem(PicklistItem picklistItem) {
        if (this.picklistItems == null) {
            return;
        }
        this.picklistItems.remove(picklistItem);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearPicklistItem() {
        if (this.picklistItems == null) {
            return;
        }
        this.picklistItems.clear();
    }

    /** {@inheritDoc} */
    @Override
    public void fromMap(Map<String, Object> mapValue) {
        preInit();
        setPicklistBinId((String) mapValue.get("picklistBinId"));
        setPicklistId((String) mapValue.get("picklistId"));
        setBinLocationNumber((Long) mapValue.get("binLocationNumber"));
        setPrimaryOrderId((String) mapValue.get("primaryOrderId"));
        setPrimaryShipGroupSeqId((String) mapValue.get("primaryShipGroupSeqId"));
        setLastUpdatedStamp((Timestamp) mapValue.get("lastUpdatedStamp"));
        setLastUpdatedTxStamp((Timestamp) mapValue.get("lastUpdatedTxStamp"));
        setCreatedStamp((Timestamp) mapValue.get("createdStamp"));
        setCreatedTxStamp((Timestamp) mapValue.get("createdTxStamp"));
        postInit();
    }

    /** {@inheritDoc} */
    @Override
    public Map<String, Object> toMap() {
        Map<String, Object> mapValue = new FastMap<String, Object>();
        mapValue.put("picklistBinId", getPicklistBinId());
        mapValue.put("picklistId", getPicklistId());
        mapValue.put("binLocationNumber", getBinLocationNumber());
        mapValue.put("primaryOrderId", getPrimaryOrderId());
        mapValue.put("primaryShipGroupSeqId", getPrimaryShipGroupSeqId());
        mapValue.put("lastUpdatedStamp", getLastUpdatedStamp());
        mapValue.put("lastUpdatedTxStamp", getLastUpdatedTxStamp());
        mapValue.put("createdStamp", getCreatedStamp());
        mapValue.put("createdTxStamp", getCreatedTxStamp());
        return mapValue;
    }


}
