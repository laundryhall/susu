package org.opentaps.base.entities;

/*
 * Copyright (c) Open Source Strategies, Inc.
 *
 * Opentaps is free software: you can redistribute it and/or modify it
 * under the terms of the GNU Affero General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Opentaps is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with Opentaps.  If not, see <http://www.gnu.org/licenses/>.
 */

// DO NOT EDIT THIS FILE!  THIS IS AUTO GENERATED AND WILL GET WRITTEN OVER PERIODICALLY WHEN THE DATA MODEL CHANGES
// EXTEND THIS CLASS INSTEAD.

import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;

import javolution.util.FastMap;

import org.opentaps.foundation.entity.Entity;
import org.opentaps.foundation.entity.EntityFieldInterface;
import org.opentaps.foundation.repository.RepositoryException;
import org.opentaps.foundation.repository.RepositoryInterface;
import javax.persistence.*;
import org.hibernate.search.annotations.*;
import java.lang.String;
import java.sql.Timestamp;

/**
 * Auto generated base entity InventoryTransfer.
 */
@javax.persistence.Entity
@Table(name="INVENTORY_TRANSFER")
public class InventoryTransfer extends Entity {
static {
java.util.Map<String, String> fields = new java.util.HashMap<String, String>();
        fields.put("inventoryTransferId", "INVENTORY_TRANSFER_ID");
        fields.put("statusId", "STATUS_ID");
        fields.put("inventoryItemId", "INVENTORY_ITEM_ID");
        fields.put("facilityId", "FACILITY_ID");
        fields.put("locationSeqId", "LOCATION_SEQ_ID");
        fields.put("containerId", "CONTAINER_ID");
        fields.put("facilityIdTo", "FACILITY_ID_TO");
        fields.put("locationSeqIdTo", "LOCATION_SEQ_ID_TO");
        fields.put("containerIdTo", "CONTAINER_ID_TO");
        fields.put("itemIssuanceId", "ITEM_ISSUANCE_ID");
        fields.put("sendDate", "SEND_DATE");
        fields.put("receiveDate", "RECEIVE_DATE");
        fields.put("comments", "COMMENTS");
        fields.put("lastUpdatedStamp", "LAST_UPDATED_STAMP");
        fields.put("lastUpdatedTxStamp", "LAST_UPDATED_TX_STAMP");
        fields.put("createdStamp", "CREATED_STAMP");
        fields.put("createdTxStamp", "CREATED_TX_STAMP");
fieldMapColumns.put("InventoryTransfer", fields);
}
  public static enum Fields implements EntityFieldInterface<InventoryTransfer> {
    inventoryTransferId("inventoryTransferId"),
    statusId("statusId"),
    inventoryItemId("inventoryItemId"),
    facilityId("facilityId"),
    locationSeqId("locationSeqId"),
    containerId("containerId"),
    facilityIdTo("facilityIdTo"),
    locationSeqIdTo("locationSeqIdTo"),
    containerIdTo("containerIdTo"),
    itemIssuanceId("itemIssuanceId"),
    sendDate("sendDate"),
    receiveDate("receiveDate"),
    comments("comments"),
    lastUpdatedStamp("lastUpdatedStamp"),
    lastUpdatedTxStamp("lastUpdatedTxStamp"),
    createdStamp("createdStamp"),
    createdTxStamp("createdTxStamp");
    private final String fieldName;
    private Fields(String name) { fieldName = name; }
    /** {@inheritDoc} */
    public String getName() { return fieldName; }
    /** {@inheritDoc} */
    public String asc() { return fieldName + " ASC"; }
    /** {@inheritDoc} */
    public String desc() { return fieldName + " DESC"; }
  }

   @org.hibernate.annotations.GenericGenerator(name="InventoryTransfer_GEN",  strategy="org.opentaps.foundation.entity.hibernate.OpentapsIdentifierGenerator")
   @GeneratedValue(generator="InventoryTransfer_GEN")
   @Id
   @Column(name="INVENTORY_TRANSFER_ID")
   private String inventoryTransferId;
   @Column(name="STATUS_ID")
   private String statusId;
   @Column(name="INVENTORY_ITEM_ID")
   private String inventoryItemId;
   @Column(name="FACILITY_ID")
   private String facilityId;
   @Column(name="LOCATION_SEQ_ID")
   private String locationSeqId;
   @Column(name="CONTAINER_ID")
   private String containerId;
   @Column(name="FACILITY_ID_TO")
   private String facilityIdTo;
   @Column(name="LOCATION_SEQ_ID_TO")
   private String locationSeqIdTo;
   @Column(name="CONTAINER_ID_TO")
   private String containerIdTo;
   @Column(name="ITEM_ISSUANCE_ID")
   private String itemIssuanceId;
   @Column(name="SEND_DATE")
   private Timestamp sendDate;
   @Column(name="RECEIVE_DATE")
   private Timestamp receiveDate;
   @Column(name="COMMENTS")
   private String comments;
   @Column(name="LAST_UPDATED_STAMP")
   private Timestamp lastUpdatedStamp;
   @Column(name="LAST_UPDATED_TX_STAMP")
   private Timestamp lastUpdatedTxStamp;
   @Column(name="CREATED_STAMP")
   private Timestamp createdStamp;
   @Column(name="CREATED_TX_STAMP")
   private Timestamp createdTxStamp;
   @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="INVENTORY_ITEM_ID", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private InventoryItem inventoryItem = null;
   @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="STATUS_ID", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private StatusItem statusItem = null;
   @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="FACILITY_ID", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private Facility facility = null;
   private transient FacilityLocation facilityLocation = null;
   @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="CONTAINER_ID", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private Container container = null;
   @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="FACILITY_ID_TO", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private Facility toFacility = null;
   private transient FacilityLocation toFacilityLocation = null;
   @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="CONTAINER_ID_TO", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private Container toContainer = null;
   @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="ITEM_ISSUANCE_ID", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private ItemIssuance itemIssuance = null;

  /**
   * Default constructor.
   */
  public InventoryTransfer() {
      super();
      this.baseEntityName = "InventoryTransfer";
      this.isView = false;
      
      this.primaryKeyNames = new ArrayList<String>();
      this.primaryKeyNames.add("inventoryTransferId");
      this.allFieldsNames = new ArrayList<String>();
      this.allFieldsNames.add("inventoryTransferId");this.allFieldsNames.add("statusId");this.allFieldsNames.add("inventoryItemId");this.allFieldsNames.add("facilityId");this.allFieldsNames.add("locationSeqId");this.allFieldsNames.add("containerId");this.allFieldsNames.add("facilityIdTo");this.allFieldsNames.add("locationSeqIdTo");this.allFieldsNames.add("containerIdTo");this.allFieldsNames.add("itemIssuanceId");this.allFieldsNames.add("sendDate");this.allFieldsNames.add("receiveDate");this.allFieldsNames.add("comments");this.allFieldsNames.add("lastUpdatedStamp");this.allFieldsNames.add("lastUpdatedTxStamp");this.allFieldsNames.add("createdStamp");this.allFieldsNames.add("createdTxStamp");
      this.nonPrimaryKeyNames = new ArrayList<String>();
      this.nonPrimaryKeyNames.addAll(allFieldsNames);
      this.nonPrimaryKeyNames.removeAll(primaryKeyNames);
  }

  /**
   * Constructor with a repository.
   * @param repository a <code>RepositoryInterface</code> value
   */
  public InventoryTransfer(RepositoryInterface repository) {
      this();
      initRepository(repository);
  }

    /**
     * Auto generated value setter.
     * @param inventoryTransferId the inventoryTransferId to set
     */
    public void setInventoryTransferId(String inventoryTransferId) {
        this.inventoryTransferId = inventoryTransferId;
    }
    /**
     * Auto generated value setter.
     * @param statusId the statusId to set
     */
    public void setStatusId(String statusId) {
        this.statusId = statusId;
    }
    /**
     * Auto generated value setter.
     * @param inventoryItemId the inventoryItemId to set
     */
    public void setInventoryItemId(String inventoryItemId) {
        this.inventoryItemId = inventoryItemId;
    }
    /**
     * Auto generated value setter.
     * @param facilityId the facilityId to set
     */
    public void setFacilityId(String facilityId) {
        this.facilityId = facilityId;
    }
    /**
     * Auto generated value setter.
     * @param locationSeqId the locationSeqId to set
     */
    public void setLocationSeqId(String locationSeqId) {
        this.locationSeqId = locationSeqId;
    }
    /**
     * Auto generated value setter.
     * @param containerId the containerId to set
     */
    public void setContainerId(String containerId) {
        this.containerId = containerId;
    }
    /**
     * Auto generated value setter.
     * @param facilityIdTo the facilityIdTo to set
     */
    public void setFacilityIdTo(String facilityIdTo) {
        this.facilityIdTo = facilityIdTo;
    }
    /**
     * Auto generated value setter.
     * @param locationSeqIdTo the locationSeqIdTo to set
     */
    public void setLocationSeqIdTo(String locationSeqIdTo) {
        this.locationSeqIdTo = locationSeqIdTo;
    }
    /**
     * Auto generated value setter.
     * @param containerIdTo the containerIdTo to set
     */
    public void setContainerIdTo(String containerIdTo) {
        this.containerIdTo = containerIdTo;
    }
    /**
     * Auto generated value setter.
     * @param itemIssuanceId the itemIssuanceId to set
     */
    public void setItemIssuanceId(String itemIssuanceId) {
        this.itemIssuanceId = itemIssuanceId;
    }
    /**
     * Auto generated value setter.
     * @param sendDate the sendDate to set
     */
    public void setSendDate(Timestamp sendDate) {
        this.sendDate = sendDate;
    }
    /**
     * Auto generated value setter.
     * @param receiveDate the receiveDate to set
     */
    public void setReceiveDate(Timestamp receiveDate) {
        this.receiveDate = receiveDate;
    }
    /**
     * Auto generated value setter.
     * @param comments the comments to set
     */
    public void setComments(String comments) {
        this.comments = comments;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedStamp the lastUpdatedStamp to set
     */
    public void setLastUpdatedStamp(Timestamp lastUpdatedStamp) {
        this.lastUpdatedStamp = lastUpdatedStamp;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedTxStamp the lastUpdatedTxStamp to set
     */
    public void setLastUpdatedTxStamp(Timestamp lastUpdatedTxStamp) {
        this.lastUpdatedTxStamp = lastUpdatedTxStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdStamp the createdStamp to set
     */
    public void setCreatedStamp(Timestamp createdStamp) {
        this.createdStamp = createdStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdTxStamp the createdTxStamp to set
     */
    public void setCreatedTxStamp(Timestamp createdTxStamp) {
        this.createdTxStamp = createdTxStamp;
    }

    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getInventoryTransferId() {
        return this.inventoryTransferId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getStatusId() {
        return this.statusId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getInventoryItemId() {
        return this.inventoryItemId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getFacilityId() {
        return this.facilityId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getLocationSeqId() {
        return this.locationSeqId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getContainerId() {
        return this.containerId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getFacilityIdTo() {
        return this.facilityIdTo;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getLocationSeqIdTo() {
        return this.locationSeqIdTo;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getContainerIdTo() {
        return this.containerIdTo;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getItemIssuanceId() {
        return this.itemIssuanceId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getSendDate() {
        return this.sendDate;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getReceiveDate() {
        return this.receiveDate;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getComments() {
        return this.comments;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedStamp() {
        return this.lastUpdatedStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedTxStamp() {
        return this.lastUpdatedTxStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedStamp() {
        return this.createdStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedTxStamp() {
        return this.createdTxStamp;
    }

    /**
     * Auto generated method that gets the related <code>InventoryItem</code> by the relation named <code>InventoryItem</code>.
     * @return the <code>InventoryItem</code>
     * @throws RepositoryException if an error occurs
     */
    public InventoryItem getInventoryItem() throws RepositoryException {
        if (this.inventoryItem == null) {
            this.inventoryItem = getRelatedOne(InventoryItem.class, "InventoryItem");
        }
        return this.inventoryItem;
    }
    /**
     * Auto generated method that gets the related <code>StatusItem</code> by the relation named <code>StatusItem</code>.
     * @return the <code>StatusItem</code>
     * @throws RepositoryException if an error occurs
     */
    public StatusItem getStatusItem() throws RepositoryException {
        if (this.statusItem == null) {
            this.statusItem = getRelatedOne(StatusItem.class, "StatusItem");
        }
        return this.statusItem;
    }
    /**
     * Auto generated method that gets the related <code>Facility</code> by the relation named <code>Facility</code>.
     * @return the <code>Facility</code>
     * @throws RepositoryException if an error occurs
     */
    public Facility getFacility() throws RepositoryException {
        if (this.facility == null) {
            this.facility = getRelatedOne(Facility.class, "Facility");
        }
        return this.facility;
    }
    /**
     * Auto generated method that gets the related <code>FacilityLocation</code> by the relation named <code>FacilityLocation</code>.
     * @return the <code>FacilityLocation</code>
     * @throws RepositoryException if an error occurs
     */
    public FacilityLocation getFacilityLocation() throws RepositoryException {
        if (this.facilityLocation == null) {
            this.facilityLocation = getRelatedOne(FacilityLocation.class, "FacilityLocation");
        }
        return this.facilityLocation;
    }
    /**
     * Auto generated method that gets the related <code>Container</code> by the relation named <code>Container</code>.
     * @return the <code>Container</code>
     * @throws RepositoryException if an error occurs
     */
    public Container getContainer() throws RepositoryException {
        if (this.container == null) {
            this.container = getRelatedOne(Container.class, "Container");
        }
        return this.container;
    }
    /**
     * Auto generated method that gets the related <code>Facility</code> by the relation named <code>ToFacility</code>.
     * @return the <code>Facility</code>
     * @throws RepositoryException if an error occurs
     */
    public Facility getToFacility() throws RepositoryException {
        if (this.toFacility == null) {
            this.toFacility = getRelatedOne(Facility.class, "ToFacility");
        }
        return this.toFacility;
    }
    /**
     * Auto generated method that gets the related <code>FacilityLocation</code> by the relation named <code>ToFacilityLocation</code>.
     * @return the <code>FacilityLocation</code>
     * @throws RepositoryException if an error occurs
     */
    public FacilityLocation getToFacilityLocation() throws RepositoryException {
        if (this.toFacilityLocation == null) {
            this.toFacilityLocation = getRelatedOne(FacilityLocation.class, "ToFacilityLocation");
        }
        return this.toFacilityLocation;
    }
    /**
     * Auto generated method that gets the related <code>Container</code> by the relation named <code>ToContainer</code>.
     * @return the <code>Container</code>
     * @throws RepositoryException if an error occurs
     */
    public Container getToContainer() throws RepositoryException {
        if (this.toContainer == null) {
            this.toContainer = getRelatedOne(Container.class, "ToContainer");
        }
        return this.toContainer;
    }
    /**
     * Auto generated method that gets the related <code>ItemIssuance</code> by the relation named <code>ItemIssuance</code>.
     * @return the <code>ItemIssuance</code>
     * @throws RepositoryException if an error occurs
     */
    public ItemIssuance getItemIssuance() throws RepositoryException {
        if (this.itemIssuance == null) {
            this.itemIssuance = getRelatedOne(ItemIssuance.class, "ItemIssuance");
        }
        return this.itemIssuance;
    }

    /**
     * Auto generated value setter.
     * @param inventoryItem the inventoryItem to set
    */
    public void setInventoryItem(InventoryItem inventoryItem) {
        this.inventoryItem = inventoryItem;
    }
    /**
     * Auto generated value setter.
     * @param statusItem the statusItem to set
    */
    public void setStatusItem(StatusItem statusItem) {
        this.statusItem = statusItem;
    }
    /**
     * Auto generated value setter.
     * @param facility the facility to set
    */
    public void setFacility(Facility facility) {
        this.facility = facility;
    }
    /**
     * Auto generated value setter.
     * @param facilityLocation the facilityLocation to set
    */
    public void setFacilityLocation(FacilityLocation facilityLocation) {
        this.facilityLocation = facilityLocation;
    }
    /**
     * Auto generated value setter.
     * @param container the container to set
    */
    public void setContainer(Container container) {
        this.container = container;
    }
    /**
     * Auto generated value setter.
     * @param toFacility the toFacility to set
    */
    public void setToFacility(Facility toFacility) {
        this.toFacility = toFacility;
    }
    /**
     * Auto generated value setter.
     * @param toFacilityLocation the toFacilityLocation to set
    */
    public void setToFacilityLocation(FacilityLocation toFacilityLocation) {
        this.toFacilityLocation = toFacilityLocation;
    }
    /**
     * Auto generated value setter.
     * @param toContainer the toContainer to set
    */
    public void setToContainer(Container toContainer) {
        this.toContainer = toContainer;
    }
    /**
     * Auto generated value setter.
     * @param itemIssuance the itemIssuance to set
    */
    public void setItemIssuance(ItemIssuance itemIssuance) {
        this.itemIssuance = itemIssuance;
    }


    /** {@inheritDoc} */
    @Override
    public void fromMap(Map<String, Object> mapValue) {
        preInit();
        setInventoryTransferId((String) mapValue.get("inventoryTransferId"));
        setStatusId((String) mapValue.get("statusId"));
        setInventoryItemId((String) mapValue.get("inventoryItemId"));
        setFacilityId((String) mapValue.get("facilityId"));
        setLocationSeqId((String) mapValue.get("locationSeqId"));
        setContainerId((String) mapValue.get("containerId"));
        setFacilityIdTo((String) mapValue.get("facilityIdTo"));
        setLocationSeqIdTo((String) mapValue.get("locationSeqIdTo"));
        setContainerIdTo((String) mapValue.get("containerIdTo"));
        setItemIssuanceId((String) mapValue.get("itemIssuanceId"));
        setSendDate((Timestamp) mapValue.get("sendDate"));
        setReceiveDate((Timestamp) mapValue.get("receiveDate"));
        setComments((String) mapValue.get("comments"));
        setLastUpdatedStamp((Timestamp) mapValue.get("lastUpdatedStamp"));
        setLastUpdatedTxStamp((Timestamp) mapValue.get("lastUpdatedTxStamp"));
        setCreatedStamp((Timestamp) mapValue.get("createdStamp"));
        setCreatedTxStamp((Timestamp) mapValue.get("createdTxStamp"));
        postInit();
    }

    /** {@inheritDoc} */
    @Override
    public Map<String, Object> toMap() {
        Map<String, Object> mapValue = new FastMap<String, Object>();
        mapValue.put("inventoryTransferId", getInventoryTransferId());
        mapValue.put("statusId", getStatusId());
        mapValue.put("inventoryItemId", getInventoryItemId());
        mapValue.put("facilityId", getFacilityId());
        mapValue.put("locationSeqId", getLocationSeqId());
        mapValue.put("containerId", getContainerId());
        mapValue.put("facilityIdTo", getFacilityIdTo());
        mapValue.put("locationSeqIdTo", getLocationSeqIdTo());
        mapValue.put("containerIdTo", getContainerIdTo());
        mapValue.put("itemIssuanceId", getItemIssuanceId());
        mapValue.put("sendDate", getSendDate());
        mapValue.put("receiveDate", getReceiveDate());
        mapValue.put("comments", getComments());
        mapValue.put("lastUpdatedStamp", getLastUpdatedStamp());
        mapValue.put("lastUpdatedTxStamp", getLastUpdatedTxStamp());
        mapValue.put("createdStamp", getCreatedStamp());
        mapValue.put("createdTxStamp", getCreatedTxStamp());
        return mapValue;
    }


}
