package org.opentaps.base.entities;

/*
 * Copyright (c) Open Source Strategies, Inc.
 *
 * Opentaps is free software: you can redistribute it and/or modify it
 * under the terms of the GNU Affero General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Opentaps is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with Opentaps.  If not, see <http://www.gnu.org/licenses/>.
 */

// DO NOT EDIT THIS FILE!  THIS IS AUTO GENERATED AND WILL GET WRITTEN OVER PERIODICALLY WHEN THE DATA MODEL CHANGES
// EXTEND THIS CLASS INSTEAD.

import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;

import javolution.util.FastMap;

import org.opentaps.foundation.entity.Entity;
import org.opentaps.foundation.entity.EntityFieldInterface;
import org.opentaps.foundation.repository.RepositoryException;
import org.opentaps.foundation.repository.RepositoryInterface;
import javax.persistence.*;
import org.hibernate.search.annotations.*;
import java.lang.Long;
import java.lang.String;
import java.sql.Timestamp;

/**
 * Auto generated base entity PortalPage.
 */
@javax.persistence.Entity
@Table(name="PORTAL_PAGE")
public class PortalPage extends Entity {
static {
java.util.Map<String, String> fields = new java.util.HashMap<String, String>();
        fields.put("portalPageId", "PORTAL_PAGE_ID");
        fields.put("portalPageName", "PORTAL_PAGE_NAME");
        fields.put("description", "DESCRIPTION");
        fields.put("ownerUserLoginId", "OWNER_USER_LOGIN_ID");
        fields.put("originalPortalPageId", "ORIGINAL_PORTAL_PAGE_ID");
        fields.put("parentPortalPageId", "PARENT_PORTAL_PAGE_ID");
        fields.put("sequenceNum", "SEQUENCE_NUM");
        fields.put("securityGroupId", "SECURITY_GROUP_ID");
        fields.put("lastUpdatedStamp", "LAST_UPDATED_STAMP");
        fields.put("lastUpdatedTxStamp", "LAST_UPDATED_TX_STAMP");
        fields.put("createdStamp", "CREATED_STAMP");
        fields.put("createdTxStamp", "CREATED_TX_STAMP");
fieldMapColumns.put("PortalPage", fields);
}
  public static enum Fields implements EntityFieldInterface<PortalPage> {
    portalPageId("portalPageId"),
    portalPageName("portalPageName"),
    description("description"),
    ownerUserLoginId("ownerUserLoginId"),
    originalPortalPageId("originalPortalPageId"),
    parentPortalPageId("parentPortalPageId"),
    sequenceNum("sequenceNum"),
    securityGroupId("securityGroupId"),
    lastUpdatedStamp("lastUpdatedStamp"),
    lastUpdatedTxStamp("lastUpdatedTxStamp"),
    createdStamp("createdStamp"),
    createdTxStamp("createdTxStamp");
    private final String fieldName;
    private Fields(String name) { fieldName = name; }
    /** {@inheritDoc} */
    public String getName() { return fieldName; }
    /** {@inheritDoc} */
    public String asc() { return fieldName + " ASC"; }
    /** {@inheritDoc} */
    public String desc() { return fieldName + " DESC"; }
  }

   @org.hibernate.annotations.GenericGenerator(name="PortalPage_GEN",  strategy="org.opentaps.foundation.entity.hibernate.OpentapsIdentifierGenerator")
   @GeneratedValue(generator="PortalPage_GEN")
   @Id
   @Column(name="PORTAL_PAGE_ID")
   private String portalPageId;
   @Column(name="PORTAL_PAGE_NAME")
   private String portalPageName;
   @Column(name="DESCRIPTION")
   private String description;
   @Column(name="OWNER_USER_LOGIN_ID")
   private String ownerUserLoginId;
   @Column(name="ORIGINAL_PORTAL_PAGE_ID")
   private String originalPortalPageId;
   @Column(name="PARENT_PORTAL_PAGE_ID")
   private String parentPortalPageId;
   @Column(name="SEQUENCE_NUM")
   private Long sequenceNum;
   @Column(name="SECURITY_GROUP_ID")
   private String securityGroupId;
   @Column(name="LAST_UPDATED_STAMP")
   private Timestamp lastUpdatedStamp;
   @Column(name="LAST_UPDATED_TX_STAMP")
   private Timestamp lastUpdatedTxStamp;
   @Column(name="CREATED_STAMP")
   private Timestamp createdStamp;
   @Column(name="CREATED_TX_STAMP")
   private Timestamp createdTxStamp;
   @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="PARENT_PORTAL_PAGE_ID", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private PortalPage parentPortalPage = null;
   @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="SECURITY_GROUP_ID", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private SecurityGroup securityGroup = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="parentPortalPage", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="PARENT_PORTAL_PAGE_ID")
   
   private List<PortalPage> childPortalPages = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="portalPage", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="PORTAL_PAGE_ID")
   
   private List<PortalPageColumn> portalPageColumns = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="portalPage", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="PORTAL_PAGE_ID")
   
   private List<PortalPagePortlet> portalPagePortlets = null;

  /**
   * Default constructor.
   */
  public PortalPage() {
      super();
      this.baseEntityName = "PortalPage";
      this.isView = false;
      
      this.primaryKeyNames = new ArrayList<String>();
      this.primaryKeyNames.add("portalPageId");
      this.allFieldsNames = new ArrayList<String>();
      this.allFieldsNames.add("portalPageId");this.allFieldsNames.add("portalPageName");this.allFieldsNames.add("description");this.allFieldsNames.add("ownerUserLoginId");this.allFieldsNames.add("originalPortalPageId");this.allFieldsNames.add("parentPortalPageId");this.allFieldsNames.add("sequenceNum");this.allFieldsNames.add("securityGroupId");this.allFieldsNames.add("lastUpdatedStamp");this.allFieldsNames.add("lastUpdatedTxStamp");this.allFieldsNames.add("createdStamp");this.allFieldsNames.add("createdTxStamp");
      this.nonPrimaryKeyNames = new ArrayList<String>();
      this.nonPrimaryKeyNames.addAll(allFieldsNames);
      this.nonPrimaryKeyNames.removeAll(primaryKeyNames);
  }

  /**
   * Constructor with a repository.
   * @param repository a <code>RepositoryInterface</code> value
   */
  public PortalPage(RepositoryInterface repository) {
      this();
      initRepository(repository);
  }

    /**
     * Auto generated value setter.
     * @param portalPageId the portalPageId to set
     */
    public void setPortalPageId(String portalPageId) {
        this.portalPageId = portalPageId;
    }
    /**
     * Auto generated value setter.
     * @param portalPageName the portalPageName to set
     */
    public void setPortalPageName(String portalPageName) {
        this.portalPageName = portalPageName;
    }
    /**
     * Auto generated value setter.
     * @param description the description to set
     */
    public void setDescription(String description) {
        this.description = description;
    }
    /**
     * Auto generated value setter.
     * @param ownerUserLoginId the ownerUserLoginId to set
     */
    public void setOwnerUserLoginId(String ownerUserLoginId) {
        this.ownerUserLoginId = ownerUserLoginId;
    }
    /**
     * Auto generated value setter.
     * @param originalPortalPageId the originalPortalPageId to set
     */
    public void setOriginalPortalPageId(String originalPortalPageId) {
        this.originalPortalPageId = originalPortalPageId;
    }
    /**
     * Auto generated value setter.
     * @param parentPortalPageId the parentPortalPageId to set
     */
    public void setParentPortalPageId(String parentPortalPageId) {
        this.parentPortalPageId = parentPortalPageId;
    }
    /**
     * Auto generated value setter.
     * @param sequenceNum the sequenceNum to set
     */
    public void setSequenceNum(Long sequenceNum) {
        this.sequenceNum = sequenceNum;
    }
    /**
     * Auto generated value setter.
     * @param securityGroupId the securityGroupId to set
     */
    public void setSecurityGroupId(String securityGroupId) {
        this.securityGroupId = securityGroupId;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedStamp the lastUpdatedStamp to set
     */
    public void setLastUpdatedStamp(Timestamp lastUpdatedStamp) {
        this.lastUpdatedStamp = lastUpdatedStamp;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedTxStamp the lastUpdatedTxStamp to set
     */
    public void setLastUpdatedTxStamp(Timestamp lastUpdatedTxStamp) {
        this.lastUpdatedTxStamp = lastUpdatedTxStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdStamp the createdStamp to set
     */
    public void setCreatedStamp(Timestamp createdStamp) {
        this.createdStamp = createdStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdTxStamp the createdTxStamp to set
     */
    public void setCreatedTxStamp(Timestamp createdTxStamp) {
        this.createdTxStamp = createdTxStamp;
    }

    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPortalPageId() {
        return this.portalPageId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPortalPageName() {
        return this.portalPageName;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getDescription() {
        return this.description;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getOwnerUserLoginId() {
        return this.ownerUserLoginId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getOriginalPortalPageId() {
        return this.originalPortalPageId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getParentPortalPageId() {
        return this.parentPortalPageId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Long</code>
     */
    public Long getSequenceNum() {
        return this.sequenceNum;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getSecurityGroupId() {
        return this.securityGroupId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedStamp() {
        return this.lastUpdatedStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedTxStamp() {
        return this.lastUpdatedTxStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedStamp() {
        return this.createdStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedTxStamp() {
        return this.createdTxStamp;
    }

    /**
     * Auto generated method that gets the related <code>PortalPage</code> by the relation named <code>ParentPortalPage</code>.
     * @return the <code>PortalPage</code>
     * @throws RepositoryException if an error occurs
     */
    public PortalPage getParentPortalPage() throws RepositoryException {
        if (this.parentPortalPage == null) {
            this.parentPortalPage = getRelatedOne(PortalPage.class, "ParentPortalPage");
        }
        return this.parentPortalPage;
    }
    /**
     * Auto generated method that gets the related <code>SecurityGroup</code> by the relation named <code>SecurityGroup</code>.
     * @return the <code>SecurityGroup</code>
     * @throws RepositoryException if an error occurs
     */
    public SecurityGroup getSecurityGroup() throws RepositoryException {
        if (this.securityGroup == null) {
            this.securityGroup = getRelatedOne(SecurityGroup.class, "SecurityGroup");
        }
        return this.securityGroup;
    }
    /**
     * Auto generated method that gets the related <code>PortalPage</code> by the relation named <code>ChildPortalPage</code>.
     * @return the list of <code>PortalPage</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends PortalPage> getChildPortalPages() throws RepositoryException {
        if (this.childPortalPages == null) {
            this.childPortalPages = getRelated(PortalPage.class, "ChildPortalPage");
        }
        return this.childPortalPages;
    }
    /**
     * Auto generated method that gets the related <code>PortalPageColumn</code> by the relation named <code>PortalPageColumn</code>.
     * @return the list of <code>PortalPageColumn</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends PortalPageColumn> getPortalPageColumns() throws RepositoryException {
        if (this.portalPageColumns == null) {
            this.portalPageColumns = getRelated(PortalPageColumn.class, "PortalPageColumn");
        }
        return this.portalPageColumns;
    }
    /**
     * Auto generated method that gets the related <code>PortalPagePortlet</code> by the relation named <code>PortalPagePortlet</code>.
     * @return the list of <code>PortalPagePortlet</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends PortalPagePortlet> getPortalPagePortlets() throws RepositoryException {
        if (this.portalPagePortlets == null) {
            this.portalPagePortlets = getRelated(PortalPagePortlet.class, "PortalPagePortlet");
        }
        return this.portalPagePortlets;
    }

    /**
     * Auto generated value setter.
     * @param parentPortalPage the parentPortalPage to set
    */
    public void setParentPortalPage(PortalPage parentPortalPage) {
        this.parentPortalPage = parentPortalPage;
    }
    /**
     * Auto generated value setter.
     * @param securityGroup the securityGroup to set
    */
    public void setSecurityGroup(SecurityGroup securityGroup) {
        this.securityGroup = securityGroup;
    }
    /**
     * Auto generated value setter.
     * @param childPortalPages the childPortalPages to set
    */
    public void setChildPortalPages(List<PortalPage> childPortalPages) {
        this.childPortalPages = childPortalPages;
    }
    /**
     * Auto generated value setter.
     * @param portalPageColumns the portalPageColumns to set
    */
    public void setPortalPageColumns(List<PortalPageColumn> portalPageColumns) {
        this.portalPageColumns = portalPageColumns;
    }
    /**
     * Auto generated value setter.
     * @param portalPagePortlets the portalPagePortlets to set
    */
    public void setPortalPagePortlets(List<PortalPagePortlet> portalPagePortlets) {
        this.portalPagePortlets = portalPagePortlets;
    }

    /**
     * Auto generated method that add item to collection.
     */
    public void addPortalPageColumn(PortalPageColumn portalPageColumn) {
        if (this.portalPageColumns == null) {
            this.portalPageColumns = new ArrayList<PortalPageColumn>();
        }
        this.portalPageColumns.add(portalPageColumn);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removePortalPageColumn(PortalPageColumn portalPageColumn) {
        if (this.portalPageColumns == null) {
            return;
        }
        this.portalPageColumns.remove(portalPageColumn);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearPortalPageColumn() {
        if (this.portalPageColumns == null) {
            return;
        }
        this.portalPageColumns.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addPortalPagePortlet(PortalPagePortlet portalPagePortlet) {
        if (this.portalPagePortlets == null) {
            this.portalPagePortlets = new ArrayList<PortalPagePortlet>();
        }
        this.portalPagePortlets.add(portalPagePortlet);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removePortalPagePortlet(PortalPagePortlet portalPagePortlet) {
        if (this.portalPagePortlets == null) {
            return;
        }
        this.portalPagePortlets.remove(portalPagePortlet);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearPortalPagePortlet() {
        if (this.portalPagePortlets == null) {
            return;
        }
        this.portalPagePortlets.clear();
    }

    /** {@inheritDoc} */
    @Override
    public void fromMap(Map<String, Object> mapValue) {
        preInit();
        setPortalPageId((String) mapValue.get("portalPageId"));
        setPortalPageName((String) mapValue.get("portalPageName"));
        setDescription((String) mapValue.get("description"));
        setOwnerUserLoginId((String) mapValue.get("ownerUserLoginId"));
        setOriginalPortalPageId((String) mapValue.get("originalPortalPageId"));
        setParentPortalPageId((String) mapValue.get("parentPortalPageId"));
        setSequenceNum((Long) mapValue.get("sequenceNum"));
        setSecurityGroupId((String) mapValue.get("securityGroupId"));
        setLastUpdatedStamp((Timestamp) mapValue.get("lastUpdatedStamp"));
        setLastUpdatedTxStamp((Timestamp) mapValue.get("lastUpdatedTxStamp"));
        setCreatedStamp((Timestamp) mapValue.get("createdStamp"));
        setCreatedTxStamp((Timestamp) mapValue.get("createdTxStamp"));
        postInit();
    }

    /** {@inheritDoc} */
    @Override
    public Map<String, Object> toMap() {
        Map<String, Object> mapValue = new FastMap<String, Object>();
        mapValue.put("portalPageId", getPortalPageId());
        mapValue.put("portalPageName", getPortalPageName());
        mapValue.put("description", getDescription());
        mapValue.put("ownerUserLoginId", getOwnerUserLoginId());
        mapValue.put("originalPortalPageId", getOriginalPortalPageId());
        mapValue.put("parentPortalPageId", getParentPortalPageId());
        mapValue.put("sequenceNum", getSequenceNum());
        mapValue.put("securityGroupId", getSecurityGroupId());
        mapValue.put("lastUpdatedStamp", getLastUpdatedStamp());
        mapValue.put("lastUpdatedTxStamp", getLastUpdatedTxStamp());
        mapValue.put("createdStamp", getCreatedStamp());
        mapValue.put("createdTxStamp", getCreatedTxStamp());
        return mapValue;
    }


}
