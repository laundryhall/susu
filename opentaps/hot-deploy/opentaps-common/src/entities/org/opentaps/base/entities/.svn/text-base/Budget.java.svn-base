package org.opentaps.base.entities;

/*
 * Copyright (c) Open Source Strategies, Inc.
 *
 * Opentaps is free software: you can redistribute it and/or modify it
 * under the terms of the GNU Affero General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Opentaps is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with Opentaps.  If not, see <http://www.gnu.org/licenses/>.
 */

// DO NOT EDIT THIS FILE!  THIS IS AUTO GENERATED AND WILL GET WRITTEN OVER PERIODICALLY WHEN THE DATA MODEL CHANGES
// EXTEND THIS CLASS INSTEAD.

import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;

import javolution.util.FastMap;

import org.opentaps.foundation.entity.Entity;
import org.opentaps.foundation.entity.EntityFieldInterface;
import org.opentaps.foundation.repository.RepositoryException;
import org.opentaps.foundation.repository.RepositoryInterface;
import javax.persistence.*;
import org.hibernate.search.annotations.*;
import java.lang.String;
import java.sql.Timestamp;

/**
 * Auto generated base entity Budget.
 */
@javax.persistence.Entity
@Table(name="BUDGET")
public class Budget extends Entity {
static {
java.util.Map<String, String> fields = new java.util.HashMap<String, String>();
        fields.put("budgetId", "BUDGET_ID");
        fields.put("budgetTypeId", "BUDGET_TYPE_ID");
        fields.put("customTimePeriodId", "CUSTOM_TIME_PERIOD_ID");
        fields.put("comments", "COMMENTS");
        fields.put("lastUpdatedStamp", "LAST_UPDATED_STAMP");
        fields.put("lastUpdatedTxStamp", "LAST_UPDATED_TX_STAMP");
        fields.put("createdStamp", "CREATED_STAMP");
        fields.put("createdTxStamp", "CREATED_TX_STAMP");
fieldMapColumns.put("Budget", fields);
}
  public static enum Fields implements EntityFieldInterface<Budget> {
    budgetId("budgetId"),
    budgetTypeId("budgetTypeId"),
    customTimePeriodId("customTimePeriodId"),
    comments("comments"),
    lastUpdatedStamp("lastUpdatedStamp"),
    lastUpdatedTxStamp("lastUpdatedTxStamp"),
    createdStamp("createdStamp"),
    createdTxStamp("createdTxStamp");
    private final String fieldName;
    private Fields(String name) { fieldName = name; }
    /** {@inheritDoc} */
    public String getName() { return fieldName; }
    /** {@inheritDoc} */
    public String asc() { return fieldName + " ASC"; }
    /** {@inheritDoc} */
    public String desc() { return fieldName + " DESC"; }
  }

   @org.hibernate.annotations.GenericGenerator(name="Budget_GEN",  strategy="org.opentaps.foundation.entity.hibernate.OpentapsIdentifierGenerator")
   @GeneratedValue(generator="Budget_GEN")
   @Id
   @Column(name="BUDGET_ID")
   private String budgetId;
   @Column(name="BUDGET_TYPE_ID")
   private String budgetTypeId;
   @Column(name="CUSTOM_TIME_PERIOD_ID")
   private String customTimePeriodId;
   @Column(name="COMMENTS")
   private String comments;
   @Column(name="LAST_UPDATED_STAMP")
   private Timestamp lastUpdatedStamp;
   @Column(name="LAST_UPDATED_TX_STAMP")
   private Timestamp lastUpdatedTxStamp;
   @Column(name="CREATED_STAMP")
   private Timestamp createdStamp;
   @Column(name="CREATED_TX_STAMP")
   private Timestamp createdTxStamp;
   @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="BUDGET_TYPE_ID", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private BudgetType budgetType = null;
   @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="CUSTOM_TIME_PERIOD_ID", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private CustomTimePeriod customTimePeriod = null;
   private transient List<BudgetTypeAttr> budgetTypeAttrs = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="budget", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="BUDGET_ID")
   
   private List<BudgetAttribute> budgetAttributes = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="budget", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="BUDGET_ID")
   
   private List<BudgetItem> budgetItems = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="budget", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="BUDGET_ID")
   
   private List<BudgetReview> budgetReviews = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="budget", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="BUDGET_ID")
   
   private List<BudgetRevision> budgetRevisions = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="budget", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="BUDGET_ID")
   
   private List<BudgetRevisionImpact> budgetRevisionImpacts = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="budget", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="BUDGET_ID")
   
   private List<BudgetRole> budgetRoles = null;
   private transient List<BudgetScenarioApplication> budgetScenarioApplications = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="budget", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="BUDGET_ID")
   
   private List<BudgetStatus> budgetStatuses = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="budget", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="BUDGET_ID")
   
   private List<PaymentBudgetAllocation> paymentBudgetAllocations = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="budget", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="BUDGET_ID")
   
   private List<RequirementBudgetAllocation> requirementBudgetAllocations = null;

  /**
   * Default constructor.
   */
  public Budget() {
      super();
      this.baseEntityName = "Budget";
      this.isView = false;
      
      this.primaryKeyNames = new ArrayList<String>();
      this.primaryKeyNames.add("budgetId");
      this.allFieldsNames = new ArrayList<String>();
      this.allFieldsNames.add("budgetId");this.allFieldsNames.add("budgetTypeId");this.allFieldsNames.add("customTimePeriodId");this.allFieldsNames.add("comments");this.allFieldsNames.add("lastUpdatedStamp");this.allFieldsNames.add("lastUpdatedTxStamp");this.allFieldsNames.add("createdStamp");this.allFieldsNames.add("createdTxStamp");
      this.nonPrimaryKeyNames = new ArrayList<String>();
      this.nonPrimaryKeyNames.addAll(allFieldsNames);
      this.nonPrimaryKeyNames.removeAll(primaryKeyNames);
  }

  /**
   * Constructor with a repository.
   * @param repository a <code>RepositoryInterface</code> value
   */
  public Budget(RepositoryInterface repository) {
      this();
      initRepository(repository);
  }

    /**
     * Auto generated value setter.
     * @param budgetId the budgetId to set
     */
    public void setBudgetId(String budgetId) {
        this.budgetId = budgetId;
    }
    /**
     * Auto generated value setter.
     * @param budgetTypeId the budgetTypeId to set
     */
    public void setBudgetTypeId(String budgetTypeId) {
        this.budgetTypeId = budgetTypeId;
    }
    /**
     * Auto generated value setter.
     * @param customTimePeriodId the customTimePeriodId to set
     */
    public void setCustomTimePeriodId(String customTimePeriodId) {
        this.customTimePeriodId = customTimePeriodId;
    }
    /**
     * Auto generated value setter.
     * @param comments the comments to set
     */
    public void setComments(String comments) {
        this.comments = comments;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedStamp the lastUpdatedStamp to set
     */
    public void setLastUpdatedStamp(Timestamp lastUpdatedStamp) {
        this.lastUpdatedStamp = lastUpdatedStamp;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedTxStamp the lastUpdatedTxStamp to set
     */
    public void setLastUpdatedTxStamp(Timestamp lastUpdatedTxStamp) {
        this.lastUpdatedTxStamp = lastUpdatedTxStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdStamp the createdStamp to set
     */
    public void setCreatedStamp(Timestamp createdStamp) {
        this.createdStamp = createdStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdTxStamp the createdTxStamp to set
     */
    public void setCreatedTxStamp(Timestamp createdTxStamp) {
        this.createdTxStamp = createdTxStamp;
    }

    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getBudgetId() {
        return this.budgetId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getBudgetTypeId() {
        return this.budgetTypeId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getCustomTimePeriodId() {
        return this.customTimePeriodId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getComments() {
        return this.comments;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedStamp() {
        return this.lastUpdatedStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedTxStamp() {
        return this.lastUpdatedTxStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedStamp() {
        return this.createdStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedTxStamp() {
        return this.createdTxStamp;
    }

    /**
     * Auto generated method that gets the related <code>BudgetType</code> by the relation named <code>BudgetType</code>.
     * @return the <code>BudgetType</code>
     * @throws RepositoryException if an error occurs
     */
    public BudgetType getBudgetType() throws RepositoryException {
        if (this.budgetType == null) {
            this.budgetType = getRelatedOne(BudgetType.class, "BudgetType");
        }
        return this.budgetType;
    }
    /**
     * Auto generated method that gets the related <code>CustomTimePeriod</code> by the relation named <code>CustomTimePeriod</code>.
     * @return the <code>CustomTimePeriod</code>
     * @throws RepositoryException if an error occurs
     */
    public CustomTimePeriod getCustomTimePeriod() throws RepositoryException {
        if (this.customTimePeriod == null) {
            this.customTimePeriod = getRelatedOne(CustomTimePeriod.class, "CustomTimePeriod");
        }
        return this.customTimePeriod;
    }
    /**
     * Auto generated method that gets the related <code>BudgetTypeAttr</code> by the relation named <code>BudgetTypeAttr</code>.
     * @return the list of <code>BudgetTypeAttr</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends BudgetTypeAttr> getBudgetTypeAttrs() throws RepositoryException {
        if (this.budgetTypeAttrs == null) {
            this.budgetTypeAttrs = getRelated(BudgetTypeAttr.class, "BudgetTypeAttr");
        }
        return this.budgetTypeAttrs;
    }
    /**
     * Auto generated method that gets the related <code>BudgetAttribute</code> by the relation named <code>BudgetAttribute</code>.
     * @return the list of <code>BudgetAttribute</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends BudgetAttribute> getBudgetAttributes() throws RepositoryException {
        if (this.budgetAttributes == null) {
            this.budgetAttributes = getRelated(BudgetAttribute.class, "BudgetAttribute");
        }
        return this.budgetAttributes;
    }
    /**
     * Auto generated method that gets the related <code>BudgetItem</code> by the relation named <code>BudgetItem</code>.
     * @return the list of <code>BudgetItem</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends BudgetItem> getBudgetItems() throws RepositoryException {
        if (this.budgetItems == null) {
            this.budgetItems = getRelated(BudgetItem.class, "BudgetItem");
        }
        return this.budgetItems;
    }
    /**
     * Auto generated method that gets the related <code>BudgetReview</code> by the relation named <code>BudgetReview</code>.
     * @return the list of <code>BudgetReview</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends BudgetReview> getBudgetReviews() throws RepositoryException {
        if (this.budgetReviews == null) {
            this.budgetReviews = getRelated(BudgetReview.class, "BudgetReview");
        }
        return this.budgetReviews;
    }
    /**
     * Auto generated method that gets the related <code>BudgetRevision</code> by the relation named <code>BudgetRevision</code>.
     * @return the list of <code>BudgetRevision</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends BudgetRevision> getBudgetRevisions() throws RepositoryException {
        if (this.budgetRevisions == null) {
            this.budgetRevisions = getRelated(BudgetRevision.class, "BudgetRevision");
        }
        return this.budgetRevisions;
    }
    /**
     * Auto generated method that gets the related <code>BudgetRevisionImpact</code> by the relation named <code>BudgetRevisionImpact</code>.
     * @return the list of <code>BudgetRevisionImpact</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends BudgetRevisionImpact> getBudgetRevisionImpacts() throws RepositoryException {
        if (this.budgetRevisionImpacts == null) {
            this.budgetRevisionImpacts = getRelated(BudgetRevisionImpact.class, "BudgetRevisionImpact");
        }
        return this.budgetRevisionImpacts;
    }
    /**
     * Auto generated method that gets the related <code>BudgetRole</code> by the relation named <code>BudgetRole</code>.
     * @return the list of <code>BudgetRole</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends BudgetRole> getBudgetRoles() throws RepositoryException {
        if (this.budgetRoles == null) {
            this.budgetRoles = getRelated(BudgetRole.class, "BudgetRole");
        }
        return this.budgetRoles;
    }
    /**
     * Auto generated method that gets the related <code>BudgetScenarioApplication</code> by the relation named <code>BudgetScenarioApplication</code>.
     * @return the list of <code>BudgetScenarioApplication</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends BudgetScenarioApplication> getBudgetScenarioApplications() throws RepositoryException {
        if (this.budgetScenarioApplications == null) {
            this.budgetScenarioApplications = getRelated(BudgetScenarioApplication.class, "BudgetScenarioApplication");
        }
        return this.budgetScenarioApplications;
    }
    /**
     * Auto generated method that gets the related <code>BudgetStatus</code> by the relation named <code>BudgetStatus</code>.
     * @return the list of <code>BudgetStatus</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends BudgetStatus> getBudgetStatuses() throws RepositoryException {
        if (this.budgetStatuses == null) {
            this.budgetStatuses = getRelated(BudgetStatus.class, "BudgetStatus");
        }
        return this.budgetStatuses;
    }
    /**
     * Auto generated method that gets the related <code>PaymentBudgetAllocation</code> by the relation named <code>PaymentBudgetAllocation</code>.
     * @return the list of <code>PaymentBudgetAllocation</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends PaymentBudgetAllocation> getPaymentBudgetAllocations() throws RepositoryException {
        if (this.paymentBudgetAllocations == null) {
            this.paymentBudgetAllocations = getRelated(PaymentBudgetAllocation.class, "PaymentBudgetAllocation");
        }
        return this.paymentBudgetAllocations;
    }
    /**
     * Auto generated method that gets the related <code>RequirementBudgetAllocation</code> by the relation named <code>RequirementBudgetAllocation</code>.
     * @return the list of <code>RequirementBudgetAllocation</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends RequirementBudgetAllocation> getRequirementBudgetAllocations() throws RepositoryException {
        if (this.requirementBudgetAllocations == null) {
            this.requirementBudgetAllocations = getRelated(RequirementBudgetAllocation.class, "RequirementBudgetAllocation");
        }
        return this.requirementBudgetAllocations;
    }

    /**
     * Auto generated value setter.
     * @param budgetType the budgetType to set
    */
    public void setBudgetType(BudgetType budgetType) {
        this.budgetType = budgetType;
    }
    /**
     * Auto generated value setter.
     * @param customTimePeriod the customTimePeriod to set
    */
    public void setCustomTimePeriod(CustomTimePeriod customTimePeriod) {
        this.customTimePeriod = customTimePeriod;
    }
    /**
     * Auto generated value setter.
     * @param budgetTypeAttrs the budgetTypeAttrs to set
    */
    public void setBudgetTypeAttrs(List<BudgetTypeAttr> budgetTypeAttrs) {
        this.budgetTypeAttrs = budgetTypeAttrs;
    }
    /**
     * Auto generated value setter.
     * @param budgetAttributes the budgetAttributes to set
    */
    public void setBudgetAttributes(List<BudgetAttribute> budgetAttributes) {
        this.budgetAttributes = budgetAttributes;
    }
    /**
     * Auto generated value setter.
     * @param budgetItems the budgetItems to set
    */
    public void setBudgetItems(List<BudgetItem> budgetItems) {
        this.budgetItems = budgetItems;
    }
    /**
     * Auto generated value setter.
     * @param budgetReviews the budgetReviews to set
    */
    public void setBudgetReviews(List<BudgetReview> budgetReviews) {
        this.budgetReviews = budgetReviews;
    }
    /**
     * Auto generated value setter.
     * @param budgetRevisions the budgetRevisions to set
    */
    public void setBudgetRevisions(List<BudgetRevision> budgetRevisions) {
        this.budgetRevisions = budgetRevisions;
    }
    /**
     * Auto generated value setter.
     * @param budgetRevisionImpacts the budgetRevisionImpacts to set
    */
    public void setBudgetRevisionImpacts(List<BudgetRevisionImpact> budgetRevisionImpacts) {
        this.budgetRevisionImpacts = budgetRevisionImpacts;
    }
    /**
     * Auto generated value setter.
     * @param budgetRoles the budgetRoles to set
    */
    public void setBudgetRoles(List<BudgetRole> budgetRoles) {
        this.budgetRoles = budgetRoles;
    }
    /**
     * Auto generated value setter.
     * @param budgetScenarioApplications the budgetScenarioApplications to set
    */
    public void setBudgetScenarioApplications(List<BudgetScenarioApplication> budgetScenarioApplications) {
        this.budgetScenarioApplications = budgetScenarioApplications;
    }
    /**
     * Auto generated value setter.
     * @param budgetStatuses the budgetStatuses to set
    */
    public void setBudgetStatuses(List<BudgetStatus> budgetStatuses) {
        this.budgetStatuses = budgetStatuses;
    }
    /**
     * Auto generated value setter.
     * @param paymentBudgetAllocations the paymentBudgetAllocations to set
    */
    public void setPaymentBudgetAllocations(List<PaymentBudgetAllocation> paymentBudgetAllocations) {
        this.paymentBudgetAllocations = paymentBudgetAllocations;
    }
    /**
     * Auto generated value setter.
     * @param requirementBudgetAllocations the requirementBudgetAllocations to set
    */
    public void setRequirementBudgetAllocations(List<RequirementBudgetAllocation> requirementBudgetAllocations) {
        this.requirementBudgetAllocations = requirementBudgetAllocations;
    }

    /**
     * Auto generated method that add item to collection.
     */
    public void addBudgetAttribute(BudgetAttribute budgetAttribute) {
        if (this.budgetAttributes == null) {
            this.budgetAttributes = new ArrayList<BudgetAttribute>();
        }
        this.budgetAttributes.add(budgetAttribute);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeBudgetAttribute(BudgetAttribute budgetAttribute) {
        if (this.budgetAttributes == null) {
            return;
        }
        this.budgetAttributes.remove(budgetAttribute);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearBudgetAttribute() {
        if (this.budgetAttributes == null) {
            return;
        }
        this.budgetAttributes.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addBudgetItem(BudgetItem budgetItem) {
        if (this.budgetItems == null) {
            this.budgetItems = new ArrayList<BudgetItem>();
        }
        this.budgetItems.add(budgetItem);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeBudgetItem(BudgetItem budgetItem) {
        if (this.budgetItems == null) {
            return;
        }
        this.budgetItems.remove(budgetItem);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearBudgetItem() {
        if (this.budgetItems == null) {
            return;
        }
        this.budgetItems.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addBudgetReview(BudgetReview budgetReview) {
        if (this.budgetReviews == null) {
            this.budgetReviews = new ArrayList<BudgetReview>();
        }
        this.budgetReviews.add(budgetReview);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeBudgetReview(BudgetReview budgetReview) {
        if (this.budgetReviews == null) {
            return;
        }
        this.budgetReviews.remove(budgetReview);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearBudgetReview() {
        if (this.budgetReviews == null) {
            return;
        }
        this.budgetReviews.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addBudgetRevision(BudgetRevision budgetRevision) {
        if (this.budgetRevisions == null) {
            this.budgetRevisions = new ArrayList<BudgetRevision>();
        }
        this.budgetRevisions.add(budgetRevision);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeBudgetRevision(BudgetRevision budgetRevision) {
        if (this.budgetRevisions == null) {
            return;
        }
        this.budgetRevisions.remove(budgetRevision);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearBudgetRevision() {
        if (this.budgetRevisions == null) {
            return;
        }
        this.budgetRevisions.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addBudgetRevisionImpact(BudgetRevisionImpact budgetRevisionImpact) {
        if (this.budgetRevisionImpacts == null) {
            this.budgetRevisionImpacts = new ArrayList<BudgetRevisionImpact>();
        }
        this.budgetRevisionImpacts.add(budgetRevisionImpact);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeBudgetRevisionImpact(BudgetRevisionImpact budgetRevisionImpact) {
        if (this.budgetRevisionImpacts == null) {
            return;
        }
        this.budgetRevisionImpacts.remove(budgetRevisionImpact);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearBudgetRevisionImpact() {
        if (this.budgetRevisionImpacts == null) {
            return;
        }
        this.budgetRevisionImpacts.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addBudgetRole(BudgetRole budgetRole) {
        if (this.budgetRoles == null) {
            this.budgetRoles = new ArrayList<BudgetRole>();
        }
        this.budgetRoles.add(budgetRole);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeBudgetRole(BudgetRole budgetRole) {
        if (this.budgetRoles == null) {
            return;
        }
        this.budgetRoles.remove(budgetRole);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearBudgetRole() {
        if (this.budgetRoles == null) {
            return;
        }
        this.budgetRoles.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addBudgetStatuse(BudgetStatus budgetStatuse) {
        if (this.budgetStatuses == null) {
            this.budgetStatuses = new ArrayList<BudgetStatus>();
        }
        this.budgetStatuses.add(budgetStatuse);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeBudgetStatuse(BudgetStatus budgetStatuse) {
        if (this.budgetStatuses == null) {
            return;
        }
        this.budgetStatuses.remove(budgetStatuse);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearBudgetStatuse() {
        if (this.budgetStatuses == null) {
            return;
        }
        this.budgetStatuses.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addPaymentBudgetAllocation(PaymentBudgetAllocation paymentBudgetAllocation) {
        if (this.paymentBudgetAllocations == null) {
            this.paymentBudgetAllocations = new ArrayList<PaymentBudgetAllocation>();
        }
        this.paymentBudgetAllocations.add(paymentBudgetAllocation);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removePaymentBudgetAllocation(PaymentBudgetAllocation paymentBudgetAllocation) {
        if (this.paymentBudgetAllocations == null) {
            return;
        }
        this.paymentBudgetAllocations.remove(paymentBudgetAllocation);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearPaymentBudgetAllocation() {
        if (this.paymentBudgetAllocations == null) {
            return;
        }
        this.paymentBudgetAllocations.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addRequirementBudgetAllocation(RequirementBudgetAllocation requirementBudgetAllocation) {
        if (this.requirementBudgetAllocations == null) {
            this.requirementBudgetAllocations = new ArrayList<RequirementBudgetAllocation>();
        }
        this.requirementBudgetAllocations.add(requirementBudgetAllocation);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeRequirementBudgetAllocation(RequirementBudgetAllocation requirementBudgetAllocation) {
        if (this.requirementBudgetAllocations == null) {
            return;
        }
        this.requirementBudgetAllocations.remove(requirementBudgetAllocation);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearRequirementBudgetAllocation() {
        if (this.requirementBudgetAllocations == null) {
            return;
        }
        this.requirementBudgetAllocations.clear();
    }

    /** {@inheritDoc} */
    @Override
    public void fromMap(Map<String, Object> mapValue) {
        preInit();
        setBudgetId((String) mapValue.get("budgetId"));
        setBudgetTypeId((String) mapValue.get("budgetTypeId"));
        setCustomTimePeriodId((String) mapValue.get("customTimePeriodId"));
        setComments((String) mapValue.get("comments"));
        setLastUpdatedStamp((Timestamp) mapValue.get("lastUpdatedStamp"));
        setLastUpdatedTxStamp((Timestamp) mapValue.get("lastUpdatedTxStamp"));
        setCreatedStamp((Timestamp) mapValue.get("createdStamp"));
        setCreatedTxStamp((Timestamp) mapValue.get("createdTxStamp"));
        postInit();
    }

    /** {@inheritDoc} */
    @Override
    public Map<String, Object> toMap() {
        Map<String, Object> mapValue = new FastMap<String, Object>();
        mapValue.put("budgetId", getBudgetId());
        mapValue.put("budgetTypeId", getBudgetTypeId());
        mapValue.put("customTimePeriodId", getCustomTimePeriodId());
        mapValue.put("comments", getComments());
        mapValue.put("lastUpdatedStamp", getLastUpdatedStamp());
        mapValue.put("lastUpdatedTxStamp", getLastUpdatedTxStamp());
        mapValue.put("createdStamp", getCreatedStamp());
        mapValue.put("createdTxStamp", getCreatedTxStamp());
        return mapValue;
    }


}
