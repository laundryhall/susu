package org.opentaps.base.entities;

/*
 * Copyright (c) Open Source Strategies, Inc.
 *
 * Opentaps is free software: you can redistribute it and/or modify it
 * under the terms of the GNU Affero General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Opentaps is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with Opentaps.  If not, see <http://www.gnu.org/licenses/>.
 */

// DO NOT EDIT THIS FILE!  THIS IS AUTO GENERATED AND WILL GET WRITTEN OVER PERIODICALLY WHEN THE DATA MODEL CHANGES
// EXTEND THIS CLASS INSTEAD.

import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;

import javolution.util.FastMap;

import org.opentaps.foundation.entity.Entity;
import org.opentaps.foundation.entity.EntityFieldInterface;
import org.opentaps.foundation.repository.RepositoryException;
import org.opentaps.foundation.repository.RepositoryInterface;
import javax.persistence.*;
import org.hibernate.search.annotations.*;
import java.lang.Long;
import java.lang.String;
import java.math.BigDecimal;
import java.sql.Timestamp;

/**
 * Auto generated base entity OrderPaymentPreference.
 */
@javax.persistence.Entity
@Table(name="ORDER_PAYMENT_PREFERENCE")
public class OrderPaymentPreference extends Entity {
static {
java.util.Map<String, String> fields = new java.util.HashMap<String, String>();
        fields.put("orderPaymentPreferenceId", "ORDER_PAYMENT_PREFERENCE_ID");
        fields.put("orderId", "ORDER_ID");
        fields.put("orderItemSeqId", "ORDER_ITEM_SEQ_ID");
        fields.put("shipGroupSeqId", "SHIP_GROUP_SEQ_ID");
        fields.put("productPricePurposeId", "PRODUCT_PRICE_PURPOSE_ID");
        fields.put("paymentMethodTypeId", "PAYMENT_METHOD_TYPE_ID");
        fields.put("paymentMethodId", "PAYMENT_METHOD_ID");
        fields.put("finAccountId", "FIN_ACCOUNT_ID");
        fields.put("securityCode", "SECURITY_CODE");
        fields.put("track2", "TRACK2");
        fields.put("presentFlag", "PRESENT_FLAG");
        fields.put("swipedFlag", "SWIPED_FLAG");
        fields.put("overflowFlag", "OVERFLOW_FLAG");
        fields.put("maxAmount", "MAX_AMOUNT");
        fields.put("processAttempt", "PROCESS_ATTEMPT");
        fields.put("billingPostalCode", "BILLING_POSTAL_CODE");
        fields.put("manualAuthCode", "MANUAL_AUTH_CODE");
        fields.put("manualRefNum", "MANUAL_REF_NUM");
        fields.put("statusId", "STATUS_ID");
        fields.put("needsNsfRetry", "NEEDS_NSF_RETRY");
        fields.put("createdDate", "CREATED_DATE");
        fields.put("createdByUserLogin", "CREATED_BY_USER_LOGIN");
        fields.put("lastUpdatedStamp", "LAST_UPDATED_STAMP");
        fields.put("lastUpdatedTxStamp", "LAST_UPDATED_TX_STAMP");
        fields.put("createdStamp", "CREATED_STAMP");
        fields.put("createdTxStamp", "CREATED_TX_STAMP");
fieldMapColumns.put("OrderPaymentPreference", fields);
}
  public static enum Fields implements EntityFieldInterface<OrderPaymentPreference> {
    orderPaymentPreferenceId("orderPaymentPreferenceId"),
    orderId("orderId"),
    orderItemSeqId("orderItemSeqId"),
    shipGroupSeqId("shipGroupSeqId"),
    productPricePurposeId("productPricePurposeId"),
    paymentMethodTypeId("paymentMethodTypeId"),
    paymentMethodId("paymentMethodId"),
    finAccountId("finAccountId"),
    securityCode("securityCode"),
    track2("track2"),
    presentFlag("presentFlag"),
    swipedFlag("swipedFlag"),
    overflowFlag("overflowFlag"),
    maxAmount("maxAmount"),
    processAttempt("processAttempt"),
    billingPostalCode("billingPostalCode"),
    manualAuthCode("manualAuthCode"),
    manualRefNum("manualRefNum"),
    statusId("statusId"),
    needsNsfRetry("needsNsfRetry"),
    createdDate("createdDate"),
    createdByUserLogin("createdByUserLogin"),
    lastUpdatedStamp("lastUpdatedStamp"),
    lastUpdatedTxStamp("lastUpdatedTxStamp"),
    createdStamp("createdStamp"),
    createdTxStamp("createdTxStamp");
    private final String fieldName;
    private Fields(String name) { fieldName = name; }
    /** {@inheritDoc} */
    public String getName() { return fieldName; }
    /** {@inheritDoc} */
    public String asc() { return fieldName + " ASC"; }
    /** {@inheritDoc} */
    public String desc() { return fieldName + " DESC"; }
  }

   @org.hibernate.annotations.GenericGenerator(name="OrderPaymentPreference_GEN",  strategy="org.opentaps.foundation.entity.hibernate.OpentapsIdentifierGenerator")
   @GeneratedValue(generator="OrderPaymentPreference_GEN")
   @Id
   @Column(name="ORDER_PAYMENT_PREFERENCE_ID")
   private String orderPaymentPreferenceId;
   @Column(name="ORDER_ID")
   private String orderId;
   @Column(name="ORDER_ITEM_SEQ_ID")
   private String orderItemSeqId;
   @Column(name="SHIP_GROUP_SEQ_ID")
   private String shipGroupSeqId;
   @Column(name="PRODUCT_PRICE_PURPOSE_ID")
   private String productPricePurposeId;
   @Column(name="PAYMENT_METHOD_TYPE_ID")
   private String paymentMethodTypeId;
   @Column(name="PAYMENT_METHOD_ID")
   private String paymentMethodId;
   @Column(name="FIN_ACCOUNT_ID")
   private String finAccountId;
   @Column(name="SECURITY_CODE")
   private String securityCode;
   @Column(name="TRACK2")
   private String track2;
   @Column(name="PRESENT_FLAG")
   private String presentFlag;
   @Column(name="SWIPED_FLAG")
   private String swipedFlag;
   @Column(name="OVERFLOW_FLAG")
   private String overflowFlag;
   @Column(name="MAX_AMOUNT")
   private BigDecimal maxAmount;
   @Column(name="PROCESS_ATTEMPT")
   private Long processAttempt;
   @Column(name="BILLING_POSTAL_CODE")
   private String billingPostalCode;
   @Column(name="MANUAL_AUTH_CODE")
   private String manualAuthCode;
   @Column(name="MANUAL_REF_NUM")
   private String manualRefNum;
   @Column(name="STATUS_ID")
   private String statusId;
   @Column(name="NEEDS_NSF_RETRY")
   private String needsNsfRetry;
   @Column(name="CREATED_DATE")
   private Timestamp createdDate;
   @Column(name="CREATED_BY_USER_LOGIN")
   private String createdByUserLogin;
   @Column(name="LAST_UPDATED_STAMP")
   private Timestamp lastUpdatedStamp;
   @Column(name="LAST_UPDATED_TX_STAMP")
   private Timestamp lastUpdatedTxStamp;
   @Column(name="CREATED_STAMP")
   private Timestamp createdStamp;
   @Column(name="CREATED_TX_STAMP")
   private Timestamp createdTxStamp;
   @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="ORDER_ID", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private OrderHeader orderHeader = null;
   private transient OrderItem orderItem = null;
   private transient OrderItemShipGroup orderItemShipGroup = null;
   @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="PRODUCT_PRICE_PURPOSE_ID", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private ProductPricePurpose productPricePurpose = null;
   @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="PAYMENT_METHOD_TYPE_ID", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private PaymentMethodType paymentMethodType = null;
   @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="PAYMENT_METHOD_ID", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private PaymentMethod paymentMethod = null;
   @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="FIN_ACCOUNT_ID", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private FinAccount finAccount = null;
   @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="STATUS_ID", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private StatusItem statusItem = null;
   @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="CREATED_BY_USER_LOGIN", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private UserLogin userLogin = null;
   @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="PAYMENT_METHOD_ID", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private CreditCard creditCard = null;
   @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="PAYMENT_METHOD_ID", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private EftAccount eftAccount = null;
   @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="PAYMENT_METHOD_ID", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private GiftCard giftCard = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="orderPaymentPreference", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="ORDER_PAYMENT_PREFERENCE_ID")
   
   private List<OrderStatus> orderStatuses = null;
   private transient List<Payment> payments = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="orderPaymentPreference", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="ORDER_PAYMENT_PREFERENCE_ID")
   
   private List<PaymentGatewayResponse> paymentGatewayResponses = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="orderPaymentPreference", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="ORDER_PAYMENT_PREFERENCE_ID")
   
   private List<ReturnItemResponse> returnItemResponses = null;

  /**
   * Default constructor.
   */
  public OrderPaymentPreference() {
      super();
      this.baseEntityName = "OrderPaymentPreference";
      this.isView = false;
      
      this.primaryKeyNames = new ArrayList<String>();
      this.primaryKeyNames.add("orderPaymentPreferenceId");
      this.allFieldsNames = new ArrayList<String>();
      this.allFieldsNames.add("orderPaymentPreferenceId");this.allFieldsNames.add("orderId");this.allFieldsNames.add("orderItemSeqId");this.allFieldsNames.add("shipGroupSeqId");this.allFieldsNames.add("productPricePurposeId");this.allFieldsNames.add("paymentMethodTypeId");this.allFieldsNames.add("paymentMethodId");this.allFieldsNames.add("finAccountId");this.allFieldsNames.add("securityCode");this.allFieldsNames.add("track2");this.allFieldsNames.add("presentFlag");this.allFieldsNames.add("swipedFlag");this.allFieldsNames.add("overflowFlag");this.allFieldsNames.add("maxAmount");this.allFieldsNames.add("processAttempt");this.allFieldsNames.add("billingPostalCode");this.allFieldsNames.add("manualAuthCode");this.allFieldsNames.add("manualRefNum");this.allFieldsNames.add("statusId");this.allFieldsNames.add("needsNsfRetry");this.allFieldsNames.add("createdDate");this.allFieldsNames.add("createdByUserLogin");this.allFieldsNames.add("lastUpdatedStamp");this.allFieldsNames.add("lastUpdatedTxStamp");this.allFieldsNames.add("createdStamp");this.allFieldsNames.add("createdTxStamp");
      this.nonPrimaryKeyNames = new ArrayList<String>();
      this.nonPrimaryKeyNames.addAll(allFieldsNames);
      this.nonPrimaryKeyNames.removeAll(primaryKeyNames);
  }

  /**
   * Constructor with a repository.
   * @param repository a <code>RepositoryInterface</code> value
   */
  public OrderPaymentPreference(RepositoryInterface repository) {
      this();
      initRepository(repository);
  }

    /**
     * Auto generated value setter.
     * @param orderPaymentPreferenceId the orderPaymentPreferenceId to set
     */
    public void setOrderPaymentPreferenceId(String orderPaymentPreferenceId) {
        this.orderPaymentPreferenceId = orderPaymentPreferenceId;
    }
    /**
     * Auto generated value setter.
     * @param orderId the orderId to set
     */
    public void setOrderId(String orderId) {
        this.orderId = orderId;
    }
    /**
     * Auto generated value setter.
     * @param orderItemSeqId the orderItemSeqId to set
     */
    public void setOrderItemSeqId(String orderItemSeqId) {
        this.orderItemSeqId = orderItemSeqId;
    }
    /**
     * Auto generated value setter.
     * @param shipGroupSeqId the shipGroupSeqId to set
     */
    public void setShipGroupSeqId(String shipGroupSeqId) {
        this.shipGroupSeqId = shipGroupSeqId;
    }
    /**
     * Auto generated value setter.
     * @param productPricePurposeId the productPricePurposeId to set
     */
    public void setProductPricePurposeId(String productPricePurposeId) {
        this.productPricePurposeId = productPricePurposeId;
    }
    /**
     * Auto generated value setter.
     * @param paymentMethodTypeId the paymentMethodTypeId to set
     */
    public void setPaymentMethodTypeId(String paymentMethodTypeId) {
        this.paymentMethodTypeId = paymentMethodTypeId;
    }
    /**
     * Auto generated value setter.
     * @param paymentMethodId the paymentMethodId to set
     */
    public void setPaymentMethodId(String paymentMethodId) {
        this.paymentMethodId = paymentMethodId;
    }
    /**
     * Auto generated value setter.
     * @param finAccountId the finAccountId to set
     */
    public void setFinAccountId(String finAccountId) {
        this.finAccountId = finAccountId;
    }
    /**
     * Auto generated value setter.
     * @param securityCode the securityCode to set
     */
    public void setSecurityCode(String securityCode) {
        this.securityCode = securityCode;
    }
    /**
     * Auto generated value setter.
     * @param track2 the track2 to set
     */
    public void setTrack2(String track2) {
        this.track2 = track2;
    }
    /**
     * Auto generated value setter.
     * @param presentFlag the presentFlag to set
     */
    public void setPresentFlag(String presentFlag) {
        this.presentFlag = presentFlag;
    }
    /**
     * Auto generated value setter.
     * @param swipedFlag the swipedFlag to set
     */
    public void setSwipedFlag(String swipedFlag) {
        this.swipedFlag = swipedFlag;
    }
    /**
     * Auto generated value setter.
     * @param overflowFlag the overflowFlag to set
     */
    public void setOverflowFlag(String overflowFlag) {
        this.overflowFlag = overflowFlag;
    }
    /**
     * Auto generated value setter.
     * @param maxAmount the maxAmount to set
     */
    public void setMaxAmount(BigDecimal maxAmount) {
        this.maxAmount = maxAmount;
    }
    /**
     * Auto generated value setter.
     * @param processAttempt the processAttempt to set
     */
    public void setProcessAttempt(Long processAttempt) {
        this.processAttempt = processAttempt;
    }
    /**
     * Auto generated value setter.
     * @param billingPostalCode the billingPostalCode to set
     */
    public void setBillingPostalCode(String billingPostalCode) {
        this.billingPostalCode = billingPostalCode;
    }
    /**
     * Auto generated value setter.
     * @param manualAuthCode the manualAuthCode to set
     */
    public void setManualAuthCode(String manualAuthCode) {
        this.manualAuthCode = manualAuthCode;
    }
    /**
     * Auto generated value setter.
     * @param manualRefNum the manualRefNum to set
     */
    public void setManualRefNum(String manualRefNum) {
        this.manualRefNum = manualRefNum;
    }
    /**
     * Auto generated value setter.
     * @param statusId the statusId to set
     */
    public void setStatusId(String statusId) {
        this.statusId = statusId;
    }
    /**
     * Auto generated value setter.
     * @param needsNsfRetry the needsNsfRetry to set
     */
    public void setNeedsNsfRetry(String needsNsfRetry) {
        this.needsNsfRetry = needsNsfRetry;
    }
    /**
     * Auto generated value setter.
     * @param createdDate the createdDate to set
     */
    public void setCreatedDate(Timestamp createdDate) {
        this.createdDate = createdDate;
    }
    /**
     * Auto generated value setter.
     * @param createdByUserLogin the createdByUserLogin to set
     */
    public void setCreatedByUserLogin(String createdByUserLogin) {
        this.createdByUserLogin = createdByUserLogin;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedStamp the lastUpdatedStamp to set
     */
    public void setLastUpdatedStamp(Timestamp lastUpdatedStamp) {
        this.lastUpdatedStamp = lastUpdatedStamp;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedTxStamp the lastUpdatedTxStamp to set
     */
    public void setLastUpdatedTxStamp(Timestamp lastUpdatedTxStamp) {
        this.lastUpdatedTxStamp = lastUpdatedTxStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdStamp the createdStamp to set
     */
    public void setCreatedStamp(Timestamp createdStamp) {
        this.createdStamp = createdStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdTxStamp the createdTxStamp to set
     */
    public void setCreatedTxStamp(Timestamp createdTxStamp) {
        this.createdTxStamp = createdTxStamp;
    }

    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getOrderPaymentPreferenceId() {
        return this.orderPaymentPreferenceId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getOrderId() {
        return this.orderId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getOrderItemSeqId() {
        return this.orderItemSeqId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getShipGroupSeqId() {
        return this.shipGroupSeqId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getProductPricePurposeId() {
        return this.productPricePurposeId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPaymentMethodTypeId() {
        return this.paymentMethodTypeId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPaymentMethodId() {
        return this.paymentMethodId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getFinAccountId() {
        return this.finAccountId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getSecurityCode() {
        return this.securityCode;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getTrack2() {
        return this.track2;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPresentFlag() {
        return this.presentFlag;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getSwipedFlag() {
        return this.swipedFlag;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getOverflowFlag() {
        return this.overflowFlag;
    }
    /**
     * Auto generated value accessor.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getMaxAmount() {
        return this.maxAmount;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Long</code>
     */
    public Long getProcessAttempt() {
        return this.processAttempt;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getBillingPostalCode() {
        return this.billingPostalCode;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getManualAuthCode() {
        return this.manualAuthCode;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getManualRefNum() {
        return this.manualRefNum;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getStatusId() {
        return this.statusId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getNeedsNsfRetry() {
        return this.needsNsfRetry;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedDate() {
        return this.createdDate;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getCreatedByUserLogin() {
        return this.createdByUserLogin;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedStamp() {
        return this.lastUpdatedStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedTxStamp() {
        return this.lastUpdatedTxStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedStamp() {
        return this.createdStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedTxStamp() {
        return this.createdTxStamp;
    }

    /**
     * Auto generated method that gets the related <code>OrderHeader</code> by the relation named <code>OrderHeader</code>.
     * @return the <code>OrderHeader</code>
     * @throws RepositoryException if an error occurs
     */
    public OrderHeader getOrderHeader() throws RepositoryException {
        if (this.orderHeader == null) {
            this.orderHeader = getRelatedOne(OrderHeader.class, "OrderHeader");
        }
        return this.orderHeader;
    }
    /**
     * Auto generated method that gets the related <code>OrderItem</code> by the relation named <code>OrderItem</code>.
     * @return the <code>OrderItem</code>
     * @throws RepositoryException if an error occurs
     */
    public OrderItem getOrderItem() throws RepositoryException {
        if (this.orderItem == null) {
            this.orderItem = getRelatedOne(OrderItem.class, "OrderItem");
        }
        return this.orderItem;
    }
    /**
     * Auto generated method that gets the related <code>OrderItemShipGroup</code> by the relation named <code>OrderItemShipGroup</code>.
     * @return the <code>OrderItemShipGroup</code>
     * @throws RepositoryException if an error occurs
     */
    public OrderItemShipGroup getOrderItemShipGroup() throws RepositoryException {
        if (this.orderItemShipGroup == null) {
            this.orderItemShipGroup = getRelatedOne(OrderItemShipGroup.class, "OrderItemShipGroup");
        }
        return this.orderItemShipGroup;
    }
    /**
     * Auto generated method that gets the related <code>ProductPricePurpose</code> by the relation named <code>ProductPricePurpose</code>.
     * @return the <code>ProductPricePurpose</code>
     * @throws RepositoryException if an error occurs
     */
    public ProductPricePurpose getProductPricePurpose() throws RepositoryException {
        if (this.productPricePurpose == null) {
            this.productPricePurpose = getRelatedOne(ProductPricePurpose.class, "ProductPricePurpose");
        }
        return this.productPricePurpose;
    }
    /**
     * Auto generated method that gets the related <code>PaymentMethodType</code> by the relation named <code>PaymentMethodType</code>.
     * @return the <code>PaymentMethodType</code>
     * @throws RepositoryException if an error occurs
     */
    public PaymentMethodType getPaymentMethodType() throws RepositoryException {
        if (this.paymentMethodType == null) {
            this.paymentMethodType = getRelatedOne(PaymentMethodType.class, "PaymentMethodType");
        }
        return this.paymentMethodType;
    }
    /**
     * Auto generated method that gets the related <code>PaymentMethod</code> by the relation named <code>PaymentMethod</code>.
     * @return the <code>PaymentMethod</code>
     * @throws RepositoryException if an error occurs
     */
    public PaymentMethod getPaymentMethod() throws RepositoryException {
        if (this.paymentMethod == null) {
            this.paymentMethod = getRelatedOne(PaymentMethod.class, "PaymentMethod");
        }
        return this.paymentMethod;
    }
    /**
     * Auto generated method that gets the related <code>FinAccount</code> by the relation named <code>FinAccount</code>.
     * @return the <code>FinAccount</code>
     * @throws RepositoryException if an error occurs
     */
    public FinAccount getFinAccount() throws RepositoryException {
        if (this.finAccount == null) {
            this.finAccount = getRelatedOne(FinAccount.class, "FinAccount");
        }
        return this.finAccount;
    }
    /**
     * Auto generated method that gets the related <code>StatusItem</code> by the relation named <code>StatusItem</code>.
     * @return the <code>StatusItem</code>
     * @throws RepositoryException if an error occurs
     */
    public StatusItem getStatusItem() throws RepositoryException {
        if (this.statusItem == null) {
            this.statusItem = getRelatedOne(StatusItem.class, "StatusItem");
        }
        return this.statusItem;
    }
    /**
     * Auto generated method that gets the related <code>UserLogin</code> by the relation named <code>UserLogin</code>.
     * @return the <code>UserLogin</code>
     * @throws RepositoryException if an error occurs
     */
    public UserLogin getUserLogin() throws RepositoryException {
        if (this.userLogin == null) {
            this.userLogin = getRelatedOne(UserLogin.class, "UserLogin");
        }
        return this.userLogin;
    }
    /**
     * Auto generated method that gets the related <code>CreditCard</code> by the relation named <code>CreditCard</code>.
     * @return the <code>CreditCard</code>
     * @throws RepositoryException if an error occurs
     */
    public CreditCard getCreditCard() throws RepositoryException {
        if (this.creditCard == null) {
            this.creditCard = getRelatedOne(CreditCard.class, "CreditCard");
        }
        return this.creditCard;
    }
    /**
     * Auto generated method that gets the related <code>EftAccount</code> by the relation named <code>EftAccount</code>.
     * @return the <code>EftAccount</code>
     * @throws RepositoryException if an error occurs
     */
    public EftAccount getEftAccount() throws RepositoryException {
        if (this.eftAccount == null) {
            this.eftAccount = getRelatedOne(EftAccount.class, "EftAccount");
        }
        return this.eftAccount;
    }
    /**
     * Auto generated method that gets the related <code>GiftCard</code> by the relation named <code>GiftCard</code>.
     * @return the <code>GiftCard</code>
     * @throws RepositoryException if an error occurs
     */
    public GiftCard getGiftCard() throws RepositoryException {
        if (this.giftCard == null) {
            this.giftCard = getRelatedOne(GiftCard.class, "GiftCard");
        }
        return this.giftCard;
    }
    /**
     * Auto generated method that gets the related <code>OrderStatus</code> by the relation named <code>OrderStatus</code>.
     * @return the list of <code>OrderStatus</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends OrderStatus> getOrderStatuses() throws RepositoryException {
        if (this.orderStatuses == null) {
            this.orderStatuses = getRelated(OrderStatus.class, "OrderStatus");
        }
        return this.orderStatuses;
    }
    /**
     * Auto generated method that gets the related <code>Payment</code> by the relation named <code>Payment</code>.
     * @return the list of <code>Payment</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends Payment> getPayments() throws RepositoryException {
        if (this.payments == null) {
            this.payments = getRelated(Payment.class, "Payment");
        }
        return this.payments;
    }
    /**
     * Auto generated method that gets the related <code>PaymentGatewayResponse</code> by the relation named <code>PaymentGatewayResponse</code>.
     * @return the list of <code>PaymentGatewayResponse</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends PaymentGatewayResponse> getPaymentGatewayResponses() throws RepositoryException {
        if (this.paymentGatewayResponses == null) {
            this.paymentGatewayResponses = getRelated(PaymentGatewayResponse.class, "PaymentGatewayResponse");
        }
        return this.paymentGatewayResponses;
    }
    /**
     * Auto generated method that gets the related <code>ReturnItemResponse</code> by the relation named <code>ReturnItemResponse</code>.
     * @return the list of <code>ReturnItemResponse</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ReturnItemResponse> getReturnItemResponses() throws RepositoryException {
        if (this.returnItemResponses == null) {
            this.returnItemResponses = getRelated(ReturnItemResponse.class, "ReturnItemResponse");
        }
        return this.returnItemResponses;
    }

    /**
     * Auto generated value setter.
     * @param orderHeader the orderHeader to set
    */
    public void setOrderHeader(OrderHeader orderHeader) {
        this.orderHeader = orderHeader;
    }
    /**
     * Auto generated value setter.
     * @param orderItem the orderItem to set
    */
    public void setOrderItem(OrderItem orderItem) {
        this.orderItem = orderItem;
    }
    /**
     * Auto generated value setter.
     * @param orderItemShipGroup the orderItemShipGroup to set
    */
    public void setOrderItemShipGroup(OrderItemShipGroup orderItemShipGroup) {
        this.orderItemShipGroup = orderItemShipGroup;
    }
    /**
     * Auto generated value setter.
     * @param productPricePurpose the productPricePurpose to set
    */
    public void setProductPricePurpose(ProductPricePurpose productPricePurpose) {
        this.productPricePurpose = productPricePurpose;
    }
    /**
     * Auto generated value setter.
     * @param paymentMethodType the paymentMethodType to set
    */
    public void setPaymentMethodType(PaymentMethodType paymentMethodType) {
        this.paymentMethodType = paymentMethodType;
    }
    /**
     * Auto generated value setter.
     * @param paymentMethod the paymentMethod to set
    */
    public void setPaymentMethod(PaymentMethod paymentMethod) {
        this.paymentMethod = paymentMethod;
    }
    /**
     * Auto generated value setter.
     * @param finAccount the finAccount to set
    */
    public void setFinAccount(FinAccount finAccount) {
        this.finAccount = finAccount;
    }
    /**
     * Auto generated value setter.
     * @param statusItem the statusItem to set
    */
    public void setStatusItem(StatusItem statusItem) {
        this.statusItem = statusItem;
    }
    /**
     * Auto generated value setter.
     * @param userLogin the userLogin to set
    */
    public void setUserLogin(UserLogin userLogin) {
        this.userLogin = userLogin;
    }
    /**
     * Auto generated value setter.
     * @param creditCard the creditCard to set
    */
    public void setCreditCard(CreditCard creditCard) {
        this.creditCard = creditCard;
    }
    /**
     * Auto generated value setter.
     * @param eftAccount the eftAccount to set
    */
    public void setEftAccount(EftAccount eftAccount) {
        this.eftAccount = eftAccount;
    }
    /**
     * Auto generated value setter.
     * @param giftCard the giftCard to set
    */
    public void setGiftCard(GiftCard giftCard) {
        this.giftCard = giftCard;
    }
    /**
     * Auto generated value setter.
     * @param orderStatuses the orderStatuses to set
    */
    public void setOrderStatuses(List<OrderStatus> orderStatuses) {
        this.orderStatuses = orderStatuses;
    }
    /**
     * Auto generated value setter.
     * @param payments the payments to set
    */
    public void setPayments(List<Payment> payments) {
        this.payments = payments;
    }
    /**
     * Auto generated value setter.
     * @param paymentGatewayResponses the paymentGatewayResponses to set
    */
    public void setPaymentGatewayResponses(List<PaymentGatewayResponse> paymentGatewayResponses) {
        this.paymentGatewayResponses = paymentGatewayResponses;
    }
    /**
     * Auto generated value setter.
     * @param returnItemResponses the returnItemResponses to set
    */
    public void setReturnItemResponses(List<ReturnItemResponse> returnItemResponses) {
        this.returnItemResponses = returnItemResponses;
    }


    /** {@inheritDoc} */
    @Override
    public void fromMap(Map<String, Object> mapValue) {
        preInit();
        setOrderPaymentPreferenceId((String) mapValue.get("orderPaymentPreferenceId"));
        setOrderId((String) mapValue.get("orderId"));
        setOrderItemSeqId((String) mapValue.get("orderItemSeqId"));
        setShipGroupSeqId((String) mapValue.get("shipGroupSeqId"));
        setProductPricePurposeId((String) mapValue.get("productPricePurposeId"));
        setPaymentMethodTypeId((String) mapValue.get("paymentMethodTypeId"));
        setPaymentMethodId((String) mapValue.get("paymentMethodId"));
        setFinAccountId((String) mapValue.get("finAccountId"));
        setSecurityCode((String) mapValue.get("securityCode"));
        setTrack2((String) mapValue.get("track2"));
        setPresentFlag((String) mapValue.get("presentFlag"));
        setSwipedFlag((String) mapValue.get("swipedFlag"));
        setOverflowFlag((String) mapValue.get("overflowFlag"));
        setMaxAmount(convertToBigDecimal(mapValue.get("maxAmount")));
        setProcessAttempt((Long) mapValue.get("processAttempt"));
        setBillingPostalCode((String) mapValue.get("billingPostalCode"));
        setManualAuthCode((String) mapValue.get("manualAuthCode"));
        setManualRefNum((String) mapValue.get("manualRefNum"));
        setStatusId((String) mapValue.get("statusId"));
        setNeedsNsfRetry((String) mapValue.get("needsNsfRetry"));
        setCreatedDate((Timestamp) mapValue.get("createdDate"));
        setCreatedByUserLogin((String) mapValue.get("createdByUserLogin"));
        setLastUpdatedStamp((Timestamp) mapValue.get("lastUpdatedStamp"));
        setLastUpdatedTxStamp((Timestamp) mapValue.get("lastUpdatedTxStamp"));
        setCreatedStamp((Timestamp) mapValue.get("createdStamp"));
        setCreatedTxStamp((Timestamp) mapValue.get("createdTxStamp"));
        postInit();
    }

    /** {@inheritDoc} */
    @Override
    public Map<String, Object> toMap() {
        Map<String, Object> mapValue = new FastMap<String, Object>();
        mapValue.put("orderPaymentPreferenceId", getOrderPaymentPreferenceId());
        mapValue.put("orderId", getOrderId());
        mapValue.put("orderItemSeqId", getOrderItemSeqId());
        mapValue.put("shipGroupSeqId", getShipGroupSeqId());
        mapValue.put("productPricePurposeId", getProductPricePurposeId());
        mapValue.put("paymentMethodTypeId", getPaymentMethodTypeId());
        mapValue.put("paymentMethodId", getPaymentMethodId());
        mapValue.put("finAccountId", getFinAccountId());
        mapValue.put("securityCode", getSecurityCode());
        mapValue.put("track2", getTrack2());
        mapValue.put("presentFlag", getPresentFlag());
        mapValue.put("swipedFlag", getSwipedFlag());
        mapValue.put("overflowFlag", getOverflowFlag());
        mapValue.put("maxAmount", getMaxAmount());
        mapValue.put("processAttempt", getProcessAttempt());
        mapValue.put("billingPostalCode", getBillingPostalCode());
        mapValue.put("manualAuthCode", getManualAuthCode());
        mapValue.put("manualRefNum", getManualRefNum());
        mapValue.put("statusId", getStatusId());
        mapValue.put("needsNsfRetry", getNeedsNsfRetry());
        mapValue.put("createdDate", getCreatedDate());
        mapValue.put("createdByUserLogin", getCreatedByUserLogin());
        mapValue.put("lastUpdatedStamp", getLastUpdatedStamp());
        mapValue.put("lastUpdatedTxStamp", getLastUpdatedTxStamp());
        mapValue.put("createdStamp", getCreatedStamp());
        mapValue.put("createdTxStamp", getCreatedTxStamp());
        return mapValue;
    }


}
