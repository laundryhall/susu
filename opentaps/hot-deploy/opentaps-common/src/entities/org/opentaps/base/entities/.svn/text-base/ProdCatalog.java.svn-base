package org.opentaps.base.entities;

/*
 * Copyright (c) Open Source Strategies, Inc.
 *
 * Opentaps is free software: you can redistribute it and/or modify it
 * under the terms of the GNU Affero General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Opentaps is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with Opentaps.  If not, see <http://www.gnu.org/licenses/>.
 */

// DO NOT EDIT THIS FILE!  THIS IS AUTO GENERATED AND WILL GET WRITTEN OVER PERIODICALLY WHEN THE DATA MODEL CHANGES
// EXTEND THIS CLASS INSTEAD.

import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;

import javolution.util.FastMap;

import org.opentaps.foundation.entity.Entity;
import org.opentaps.foundation.entity.EntityFieldInterface;
import org.opentaps.foundation.repository.RepositoryException;
import org.opentaps.foundation.repository.RepositoryInterface;
import javax.persistence.*;
import org.hibernate.search.annotations.*;
import java.lang.String;
import java.sql.Timestamp;

/**
 * Auto generated base entity ProdCatalog.
 */
@javax.persistence.Entity
@Table(name="PROD_CATALOG")
public class ProdCatalog extends Entity {
static {
java.util.Map<String, String> fields = new java.util.HashMap<String, String>();
        fields.put("prodCatalogId", "PROD_CATALOG_ID");
        fields.put("catalogName", "CATALOG_NAME");
        fields.put("useQuickAdd", "USE_QUICK_ADD");
        fields.put("styleSheet", "STYLE_SHEET");
        fields.put("headerLogo", "HEADER_LOGO");
        fields.put("contentPathPrefix", "CONTENT_PATH_PREFIX");
        fields.put("templatePathPrefix", "TEMPLATE_PATH_PREFIX");
        fields.put("viewAllowPermReqd", "VIEW_ALLOW_PERM_REQD");
        fields.put("purchaseAllowPermReqd", "PURCHASE_ALLOW_PERM_REQD");
        fields.put("lastUpdatedStamp", "LAST_UPDATED_STAMP");
        fields.put("lastUpdatedTxStamp", "LAST_UPDATED_TX_STAMP");
        fields.put("createdStamp", "CREATED_STAMP");
        fields.put("createdTxStamp", "CREATED_TX_STAMP");
fieldMapColumns.put("ProdCatalog", fields);
}
  public static enum Fields implements EntityFieldInterface<ProdCatalog> {
    prodCatalogId("prodCatalogId"),
    catalogName("catalogName"),
    useQuickAdd("useQuickAdd"),
    styleSheet("styleSheet"),
    headerLogo("headerLogo"),
    contentPathPrefix("contentPathPrefix"),
    templatePathPrefix("templatePathPrefix"),
    viewAllowPermReqd("viewAllowPermReqd"),
    purchaseAllowPermReqd("purchaseAllowPermReqd"),
    lastUpdatedStamp("lastUpdatedStamp"),
    lastUpdatedTxStamp("lastUpdatedTxStamp"),
    createdStamp("createdStamp"),
    createdTxStamp("createdTxStamp");
    private final String fieldName;
    private Fields(String name) { fieldName = name; }
    /** {@inheritDoc} */
    public String getName() { return fieldName; }
    /** {@inheritDoc} */
    public String asc() { return fieldName + " ASC"; }
    /** {@inheritDoc} */
    public String desc() { return fieldName + " DESC"; }
  }

   @org.hibernate.annotations.GenericGenerator(name="ProdCatalog_GEN",  strategy="org.opentaps.foundation.entity.hibernate.OpentapsIdentifierGenerator")
   @GeneratedValue(generator="ProdCatalog_GEN")
   @Id
   @Column(name="PROD_CATALOG_ID")
   private String prodCatalogId;
   @Column(name="CATALOG_NAME")
   private String catalogName;
   @Column(name="USE_QUICK_ADD")
   private String useQuickAdd;
   @Column(name="STYLE_SHEET")
   private String styleSheet;
   @Column(name="HEADER_LOGO")
   private String headerLogo;
   @Column(name="CONTENT_PATH_PREFIX")
   private String contentPathPrefix;
   @Column(name="TEMPLATE_PATH_PREFIX")
   private String templatePathPrefix;
   @Column(name="VIEW_ALLOW_PERM_REQD")
   private String viewAllowPermReqd;
   @Column(name="PURCHASE_ALLOW_PERM_REQD")
   private String purchaseAllowPermReqd;
   @Column(name="LAST_UPDATED_STAMP")
   private Timestamp lastUpdatedStamp;
   @Column(name="LAST_UPDATED_TX_STAMP")
   private Timestamp lastUpdatedTxStamp;
   @Column(name="CREATED_STAMP")
   private Timestamp createdStamp;
   @Column(name="CREATED_TX_STAMP")
   private Timestamp createdTxStamp;
   private transient List<CartAbandonedLine> cartAbandonedLines = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="prodCatalog", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="PROD_CATALOG_ID")
   
   private List<ProdCatalogCategory> prodCatalogCategorys = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="prodCatalog", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="PROD_CATALOG_ID")
   
   private List<ProdCatalogInvFacility> prodCatalogInvFacilitys = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="prodCatalog", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="PROD_CATALOG_ID")
   
   private List<ProdCatalogRole> prodCatalogRoles = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="prodCatalog", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="PROD_CATALOG_ID")
   
   private List<ProductStoreCatalog> productStoreCatalogs = null;

  /**
   * Default constructor.
   */
  public ProdCatalog() {
      super();
      this.baseEntityName = "ProdCatalog";
      this.isView = false;
      
      this.primaryKeyNames = new ArrayList<String>();
      this.primaryKeyNames.add("prodCatalogId");
      this.allFieldsNames = new ArrayList<String>();
      this.allFieldsNames.add("prodCatalogId");this.allFieldsNames.add("catalogName");this.allFieldsNames.add("useQuickAdd");this.allFieldsNames.add("styleSheet");this.allFieldsNames.add("headerLogo");this.allFieldsNames.add("contentPathPrefix");this.allFieldsNames.add("templatePathPrefix");this.allFieldsNames.add("viewAllowPermReqd");this.allFieldsNames.add("purchaseAllowPermReqd");this.allFieldsNames.add("lastUpdatedStamp");this.allFieldsNames.add("lastUpdatedTxStamp");this.allFieldsNames.add("createdStamp");this.allFieldsNames.add("createdTxStamp");
      this.nonPrimaryKeyNames = new ArrayList<String>();
      this.nonPrimaryKeyNames.addAll(allFieldsNames);
      this.nonPrimaryKeyNames.removeAll(primaryKeyNames);
  }

  /**
   * Constructor with a repository.
   * @param repository a <code>RepositoryInterface</code> value
   */
  public ProdCatalog(RepositoryInterface repository) {
      this();
      initRepository(repository);
  }

    /**
     * Auto generated value setter.
     * @param prodCatalogId the prodCatalogId to set
     */
    public void setProdCatalogId(String prodCatalogId) {
        this.prodCatalogId = prodCatalogId;
    }
    /**
     * Auto generated value setter.
     * @param catalogName the catalogName to set
     */
    public void setCatalogName(String catalogName) {
        this.catalogName = catalogName;
    }
    /**
     * Auto generated value setter.
     * @param useQuickAdd the useQuickAdd to set
     */
    public void setUseQuickAdd(String useQuickAdd) {
        this.useQuickAdd = useQuickAdd;
    }
    /**
     * Auto generated value setter.
     * @param styleSheet the styleSheet to set
     */
    public void setStyleSheet(String styleSheet) {
        this.styleSheet = styleSheet;
    }
    /**
     * Auto generated value setter.
     * @param headerLogo the headerLogo to set
     */
    public void setHeaderLogo(String headerLogo) {
        this.headerLogo = headerLogo;
    }
    /**
     * Auto generated value setter.
     * @param contentPathPrefix the contentPathPrefix to set
     */
    public void setContentPathPrefix(String contentPathPrefix) {
        this.contentPathPrefix = contentPathPrefix;
    }
    /**
     * Auto generated value setter.
     * @param templatePathPrefix the templatePathPrefix to set
     */
    public void setTemplatePathPrefix(String templatePathPrefix) {
        this.templatePathPrefix = templatePathPrefix;
    }
    /**
     * Auto generated value setter.
     * @param viewAllowPermReqd the viewAllowPermReqd to set
     */
    public void setViewAllowPermReqd(String viewAllowPermReqd) {
        this.viewAllowPermReqd = viewAllowPermReqd;
    }
    /**
     * Auto generated value setter.
     * @param purchaseAllowPermReqd the purchaseAllowPermReqd to set
     */
    public void setPurchaseAllowPermReqd(String purchaseAllowPermReqd) {
        this.purchaseAllowPermReqd = purchaseAllowPermReqd;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedStamp the lastUpdatedStamp to set
     */
    public void setLastUpdatedStamp(Timestamp lastUpdatedStamp) {
        this.lastUpdatedStamp = lastUpdatedStamp;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedTxStamp the lastUpdatedTxStamp to set
     */
    public void setLastUpdatedTxStamp(Timestamp lastUpdatedTxStamp) {
        this.lastUpdatedTxStamp = lastUpdatedTxStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdStamp the createdStamp to set
     */
    public void setCreatedStamp(Timestamp createdStamp) {
        this.createdStamp = createdStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdTxStamp the createdTxStamp to set
     */
    public void setCreatedTxStamp(Timestamp createdTxStamp) {
        this.createdTxStamp = createdTxStamp;
    }

    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getProdCatalogId() {
        return this.prodCatalogId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getCatalogName() {
        return this.catalogName;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getUseQuickAdd() {
        return this.useQuickAdd;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getStyleSheet() {
        return this.styleSheet;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getHeaderLogo() {
        return this.headerLogo;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getContentPathPrefix() {
        return this.contentPathPrefix;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getTemplatePathPrefix() {
        return this.templatePathPrefix;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getViewAllowPermReqd() {
        return this.viewAllowPermReqd;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPurchaseAllowPermReqd() {
        return this.purchaseAllowPermReqd;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedStamp() {
        return this.lastUpdatedStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedTxStamp() {
        return this.lastUpdatedTxStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedStamp() {
        return this.createdStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedTxStamp() {
        return this.createdTxStamp;
    }

    /**
     * Auto generated method that gets the related <code>CartAbandonedLine</code> by the relation named <code>CartAbandonedLine</code>.
     * @return the list of <code>CartAbandonedLine</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends CartAbandonedLine> getCartAbandonedLines() throws RepositoryException {
        if (this.cartAbandonedLines == null) {
            this.cartAbandonedLines = getRelated(CartAbandonedLine.class, "CartAbandonedLine");
        }
        return this.cartAbandonedLines;
    }
    /**
     * Auto generated method that gets the related <code>ProdCatalogCategory</code> by the relation named <code>ProdCatalogCategory</code>.
     * @return the list of <code>ProdCatalogCategory</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ProdCatalogCategory> getProdCatalogCategorys() throws RepositoryException {
        if (this.prodCatalogCategorys == null) {
            this.prodCatalogCategorys = getRelated(ProdCatalogCategory.class, "ProdCatalogCategory");
        }
        return this.prodCatalogCategorys;
    }
    /**
     * Auto generated method that gets the related <code>ProdCatalogInvFacility</code> by the relation named <code>ProdCatalogInvFacility</code>.
     * @return the list of <code>ProdCatalogInvFacility</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ProdCatalogInvFacility> getProdCatalogInvFacilitys() throws RepositoryException {
        if (this.prodCatalogInvFacilitys == null) {
            this.prodCatalogInvFacilitys = getRelated(ProdCatalogInvFacility.class, "ProdCatalogInvFacility");
        }
        return this.prodCatalogInvFacilitys;
    }
    /**
     * Auto generated method that gets the related <code>ProdCatalogRole</code> by the relation named <code>ProdCatalogRole</code>.
     * @return the list of <code>ProdCatalogRole</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ProdCatalogRole> getProdCatalogRoles() throws RepositoryException {
        if (this.prodCatalogRoles == null) {
            this.prodCatalogRoles = getRelated(ProdCatalogRole.class, "ProdCatalogRole");
        }
        return this.prodCatalogRoles;
    }
    /**
     * Auto generated method that gets the related <code>ProductStoreCatalog</code> by the relation named <code>ProductStoreCatalog</code>.
     * @return the list of <code>ProductStoreCatalog</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ProductStoreCatalog> getProductStoreCatalogs() throws RepositoryException {
        if (this.productStoreCatalogs == null) {
            this.productStoreCatalogs = getRelated(ProductStoreCatalog.class, "ProductStoreCatalog");
        }
        return this.productStoreCatalogs;
    }

    /**
     * Auto generated value setter.
     * @param cartAbandonedLines the cartAbandonedLines to set
    */
    public void setCartAbandonedLines(List<CartAbandonedLine> cartAbandonedLines) {
        this.cartAbandonedLines = cartAbandonedLines;
    }
    /**
     * Auto generated value setter.
     * @param prodCatalogCategorys the prodCatalogCategorys to set
    */
    public void setProdCatalogCategorys(List<ProdCatalogCategory> prodCatalogCategorys) {
        this.prodCatalogCategorys = prodCatalogCategorys;
    }
    /**
     * Auto generated value setter.
     * @param prodCatalogInvFacilitys the prodCatalogInvFacilitys to set
    */
    public void setProdCatalogInvFacilitys(List<ProdCatalogInvFacility> prodCatalogInvFacilitys) {
        this.prodCatalogInvFacilitys = prodCatalogInvFacilitys;
    }
    /**
     * Auto generated value setter.
     * @param prodCatalogRoles the prodCatalogRoles to set
    */
    public void setProdCatalogRoles(List<ProdCatalogRole> prodCatalogRoles) {
        this.prodCatalogRoles = prodCatalogRoles;
    }
    /**
     * Auto generated value setter.
     * @param productStoreCatalogs the productStoreCatalogs to set
    */
    public void setProductStoreCatalogs(List<ProductStoreCatalog> productStoreCatalogs) {
        this.productStoreCatalogs = productStoreCatalogs;
    }

    /**
     * Auto generated method that add item to collection.
     */
    public void addProdCatalogCategory(ProdCatalogCategory prodCatalogCategory) {
        if (this.prodCatalogCategorys == null) {
            this.prodCatalogCategorys = new ArrayList<ProdCatalogCategory>();
        }
        this.prodCatalogCategorys.add(prodCatalogCategory);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeProdCatalogCategory(ProdCatalogCategory prodCatalogCategory) {
        if (this.prodCatalogCategorys == null) {
            return;
        }
        this.prodCatalogCategorys.remove(prodCatalogCategory);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearProdCatalogCategory() {
        if (this.prodCatalogCategorys == null) {
            return;
        }
        this.prodCatalogCategorys.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addProdCatalogInvFacility(ProdCatalogInvFacility prodCatalogInvFacility) {
        if (this.prodCatalogInvFacilitys == null) {
            this.prodCatalogInvFacilitys = new ArrayList<ProdCatalogInvFacility>();
        }
        this.prodCatalogInvFacilitys.add(prodCatalogInvFacility);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeProdCatalogInvFacility(ProdCatalogInvFacility prodCatalogInvFacility) {
        if (this.prodCatalogInvFacilitys == null) {
            return;
        }
        this.prodCatalogInvFacilitys.remove(prodCatalogInvFacility);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearProdCatalogInvFacility() {
        if (this.prodCatalogInvFacilitys == null) {
            return;
        }
        this.prodCatalogInvFacilitys.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addProdCatalogRole(ProdCatalogRole prodCatalogRole) {
        if (this.prodCatalogRoles == null) {
            this.prodCatalogRoles = new ArrayList<ProdCatalogRole>();
        }
        this.prodCatalogRoles.add(prodCatalogRole);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeProdCatalogRole(ProdCatalogRole prodCatalogRole) {
        if (this.prodCatalogRoles == null) {
            return;
        }
        this.prodCatalogRoles.remove(prodCatalogRole);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearProdCatalogRole() {
        if (this.prodCatalogRoles == null) {
            return;
        }
        this.prodCatalogRoles.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addProductStoreCatalog(ProductStoreCatalog productStoreCatalog) {
        if (this.productStoreCatalogs == null) {
            this.productStoreCatalogs = new ArrayList<ProductStoreCatalog>();
        }
        this.productStoreCatalogs.add(productStoreCatalog);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeProductStoreCatalog(ProductStoreCatalog productStoreCatalog) {
        if (this.productStoreCatalogs == null) {
            return;
        }
        this.productStoreCatalogs.remove(productStoreCatalog);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearProductStoreCatalog() {
        if (this.productStoreCatalogs == null) {
            return;
        }
        this.productStoreCatalogs.clear();
    }

    /** {@inheritDoc} */
    @Override
    public void fromMap(Map<String, Object> mapValue) {
        preInit();
        setProdCatalogId((String) mapValue.get("prodCatalogId"));
        setCatalogName((String) mapValue.get("catalogName"));
        setUseQuickAdd((String) mapValue.get("useQuickAdd"));
        setStyleSheet((String) mapValue.get("styleSheet"));
        setHeaderLogo((String) mapValue.get("headerLogo"));
        setContentPathPrefix((String) mapValue.get("contentPathPrefix"));
        setTemplatePathPrefix((String) mapValue.get("templatePathPrefix"));
        setViewAllowPermReqd((String) mapValue.get("viewAllowPermReqd"));
        setPurchaseAllowPermReqd((String) mapValue.get("purchaseAllowPermReqd"));
        setLastUpdatedStamp((Timestamp) mapValue.get("lastUpdatedStamp"));
        setLastUpdatedTxStamp((Timestamp) mapValue.get("lastUpdatedTxStamp"));
        setCreatedStamp((Timestamp) mapValue.get("createdStamp"));
        setCreatedTxStamp((Timestamp) mapValue.get("createdTxStamp"));
        postInit();
    }

    /** {@inheritDoc} */
    @Override
    public Map<String, Object> toMap() {
        Map<String, Object> mapValue = new FastMap<String, Object>();
        mapValue.put("prodCatalogId", getProdCatalogId());
        mapValue.put("catalogName", getCatalogName());
        mapValue.put("useQuickAdd", getUseQuickAdd());
        mapValue.put("styleSheet", getStyleSheet());
        mapValue.put("headerLogo", getHeaderLogo());
        mapValue.put("contentPathPrefix", getContentPathPrefix());
        mapValue.put("templatePathPrefix", getTemplatePathPrefix());
        mapValue.put("viewAllowPermReqd", getViewAllowPermReqd());
        mapValue.put("purchaseAllowPermReqd", getPurchaseAllowPermReqd());
        mapValue.put("lastUpdatedStamp", getLastUpdatedStamp());
        mapValue.put("lastUpdatedTxStamp", getLastUpdatedTxStamp());
        mapValue.put("createdStamp", getCreatedStamp());
        mapValue.put("createdTxStamp", getCreatedTxStamp());
        return mapValue;
    }


}
