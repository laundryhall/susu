package org.opentaps.base.entities;

/*
 * Copyright (c) Open Source Strategies, Inc.
 *
 * Opentaps is free software: you can redistribute it and/or modify it
 * under the terms of the GNU Affero General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Opentaps is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with Opentaps.  If not, see <http://www.gnu.org/licenses/>.
 */

// DO NOT EDIT THIS FILE!  THIS IS AUTO GENERATED AND WILL GET WRITTEN OVER PERIODICALLY WHEN THE DATA MODEL CHANGES
// EXTEND THIS CLASS INSTEAD.

import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;

import javolution.util.FastMap;

import org.opentaps.foundation.entity.Entity;
import org.opentaps.foundation.entity.EntityFieldInterface;
import org.opentaps.foundation.repository.RepositoryException;
import org.opentaps.foundation.repository.RepositoryInterface;
import javax.persistence.*;
import org.hibernate.search.annotations.*;
import java.lang.String;
import java.sql.Timestamp;

/**
 * Auto generated base entity EmplPositionType.
 */
@javax.persistence.Entity
@Table(name="EMPL_POSITION_TYPE")
public class EmplPositionType extends Entity {
static {
java.util.Map<String, String> fields = new java.util.HashMap<String, String>();
        fields.put("emplPositionTypeId", "EMPL_POSITION_TYPE_ID");
        fields.put("parentTypeId", "PARENT_TYPE_ID");
        fields.put("hasTable", "HAS_TABLE");
        fields.put("description", "DESCRIPTION");
        fields.put("lastUpdatedStamp", "LAST_UPDATED_STAMP");
        fields.put("lastUpdatedTxStamp", "LAST_UPDATED_TX_STAMP");
        fields.put("createdStamp", "CREATED_STAMP");
        fields.put("createdTxStamp", "CREATED_TX_STAMP");
fieldMapColumns.put("EmplPositionType", fields);
}
  public static enum Fields implements EntityFieldInterface<EmplPositionType> {
    emplPositionTypeId("emplPositionTypeId"),
    parentTypeId("parentTypeId"),
    hasTable("hasTable"),
    description("description"),
    lastUpdatedStamp("lastUpdatedStamp"),
    lastUpdatedTxStamp("lastUpdatedTxStamp"),
    createdStamp("createdStamp"),
    createdTxStamp("createdTxStamp");
    private final String fieldName;
    private Fields(String name) { fieldName = name; }
    /** {@inheritDoc} */
    public String getName() { return fieldName; }
    /** {@inheritDoc} */
    public String asc() { return fieldName + " ASC"; }
    /** {@inheritDoc} */
    public String desc() { return fieldName + " DESC"; }
  }

   @org.hibernate.annotations.GenericGenerator(name="EmplPositionType_GEN",  strategy="org.opentaps.foundation.entity.hibernate.OpentapsIdentifierGenerator")
   @GeneratedValue(generator="EmplPositionType_GEN")
   @Id
   @Column(name="EMPL_POSITION_TYPE_ID")
   private String emplPositionTypeId;
   @Column(name="PARENT_TYPE_ID")
   private String parentTypeId;
   @Column(name="HAS_TABLE")
   private String hasTable;
   @Column(name="DESCRIPTION")
   private String description;
   @Column(name="LAST_UPDATED_STAMP")
   private Timestamp lastUpdatedStamp;
   @Column(name="LAST_UPDATED_TX_STAMP")
   private Timestamp lastUpdatedTxStamp;
   @Column(name="CREATED_STAMP")
   private Timestamp createdStamp;
   @Column(name="CREATED_TX_STAMP")
   private Timestamp createdTxStamp;
   @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="PARENT_TYPE_ID", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private EmplPositionType parentEmplPositionType = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="emplPositionType", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="EMPL_POSITION_TYPE_ID")
   
   private List<EmplPosition> emplPositions = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="parentEmplPositionType", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="PARENT_TYPE_ID")
   
   private List<EmplPositionType> childEmplPositionTypes = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="emplPositionType", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="EMPL_POSITION_TYPE_ID")
   
   private List<EmplPositionTypeClass> emplPositionTypeClasses = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="emplPositionType", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="EMPL_POSITION_TYPE_ID")
   
   private List<EmplPositionTypeRate> emplPositionTypeRates = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="emplPositionType", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="EMPL_POSITION_TYPE_ID")
   
   private List<OldEmplPositionTypeRate> oldEmplPositionTypeRates = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="emplPositionType", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="EMPL_POSITION_TYPE_ID")
   
   private List<RateAmount> rateAmounts = null;
   @OneToMany(fetch=FetchType.LAZY, mappedBy="emplPositionType", cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE})
   @JoinColumn(name="EMPL_POSITION_TYPE_ID")
   
   private List<ValidResponsibility> validResponsibilitys = null;

  /**
   * Default constructor.
   */
  public EmplPositionType() {
      super();
      this.baseEntityName = "EmplPositionType";
      this.isView = false;
      
      this.primaryKeyNames = new ArrayList<String>();
      this.primaryKeyNames.add("emplPositionTypeId");
      this.allFieldsNames = new ArrayList<String>();
      this.allFieldsNames.add("emplPositionTypeId");this.allFieldsNames.add("parentTypeId");this.allFieldsNames.add("hasTable");this.allFieldsNames.add("description");this.allFieldsNames.add("lastUpdatedStamp");this.allFieldsNames.add("lastUpdatedTxStamp");this.allFieldsNames.add("createdStamp");this.allFieldsNames.add("createdTxStamp");
      this.nonPrimaryKeyNames = new ArrayList<String>();
      this.nonPrimaryKeyNames.addAll(allFieldsNames);
      this.nonPrimaryKeyNames.removeAll(primaryKeyNames);
  }

  /**
   * Constructor with a repository.
   * @param repository a <code>RepositoryInterface</code> value
   */
  public EmplPositionType(RepositoryInterface repository) {
      this();
      initRepository(repository);
  }

    /**
     * Auto generated value setter.
     * @param emplPositionTypeId the emplPositionTypeId to set
     */
    public void setEmplPositionTypeId(String emplPositionTypeId) {
        this.emplPositionTypeId = emplPositionTypeId;
    }
    /**
     * Auto generated value setter.
     * @param parentTypeId the parentTypeId to set
     */
    public void setParentTypeId(String parentTypeId) {
        this.parentTypeId = parentTypeId;
    }
    /**
     * Auto generated value setter.
     * @param hasTable the hasTable to set
     */
    public void setHasTable(String hasTable) {
        this.hasTable = hasTable;
    }
    /**
     * Auto generated value setter.
     * @param description the description to set
     */
    public void setDescription(String description) {
        this.description = description;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedStamp the lastUpdatedStamp to set
     */
    public void setLastUpdatedStamp(Timestamp lastUpdatedStamp) {
        this.lastUpdatedStamp = lastUpdatedStamp;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedTxStamp the lastUpdatedTxStamp to set
     */
    public void setLastUpdatedTxStamp(Timestamp lastUpdatedTxStamp) {
        this.lastUpdatedTxStamp = lastUpdatedTxStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdStamp the createdStamp to set
     */
    public void setCreatedStamp(Timestamp createdStamp) {
        this.createdStamp = createdStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdTxStamp the createdTxStamp to set
     */
    public void setCreatedTxStamp(Timestamp createdTxStamp) {
        this.createdTxStamp = createdTxStamp;
    }

    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getEmplPositionTypeId() {
        return this.emplPositionTypeId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getParentTypeId() {
        return this.parentTypeId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getHasTable() {
        return this.hasTable;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getDescription() {
        return this.description;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedStamp() {
        return this.lastUpdatedStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedTxStamp() {
        return this.lastUpdatedTxStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedStamp() {
        return this.createdStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedTxStamp() {
        return this.createdTxStamp;
    }

    /**
     * Auto generated method that gets the related <code>EmplPositionType</code> by the relation named <code>ParentEmplPositionType</code>.
     * @return the <code>EmplPositionType</code>
     * @throws RepositoryException if an error occurs
     */
    public EmplPositionType getParentEmplPositionType() throws RepositoryException {
        if (this.parentEmplPositionType == null) {
            this.parentEmplPositionType = getRelatedOne(EmplPositionType.class, "ParentEmplPositionType");
        }
        return this.parentEmplPositionType;
    }
    /**
     * Auto generated method that gets the related <code>EmplPosition</code> by the relation named <code>EmplPosition</code>.
     * @return the list of <code>EmplPosition</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends EmplPosition> getEmplPositions() throws RepositoryException {
        if (this.emplPositions == null) {
            this.emplPositions = getRelated(EmplPosition.class, "EmplPosition");
        }
        return this.emplPositions;
    }
    /**
     * Auto generated method that gets the related <code>EmplPositionType</code> by the relation named <code>ChildEmplPositionType</code>.
     * @return the list of <code>EmplPositionType</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends EmplPositionType> getChildEmplPositionTypes() throws RepositoryException {
        if (this.childEmplPositionTypes == null) {
            this.childEmplPositionTypes = getRelated(EmplPositionType.class, "ChildEmplPositionType");
        }
        return this.childEmplPositionTypes;
    }
    /**
     * Auto generated method that gets the related <code>EmplPositionTypeClass</code> by the relation named <code>EmplPositionTypeClass</code>.
     * @return the list of <code>EmplPositionTypeClass</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends EmplPositionTypeClass> getEmplPositionTypeClasses() throws RepositoryException {
        if (this.emplPositionTypeClasses == null) {
            this.emplPositionTypeClasses = getRelated(EmplPositionTypeClass.class, "EmplPositionTypeClass");
        }
        return this.emplPositionTypeClasses;
    }
    /**
     * Auto generated method that gets the related <code>EmplPositionTypeRate</code> by the relation named <code>EmplPositionTypeRate</code>.
     * @return the list of <code>EmplPositionTypeRate</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends EmplPositionTypeRate> getEmplPositionTypeRates() throws RepositoryException {
        if (this.emplPositionTypeRates == null) {
            this.emplPositionTypeRates = getRelated(EmplPositionTypeRate.class, "EmplPositionTypeRate");
        }
        return this.emplPositionTypeRates;
    }
    /**
     * Auto generated method that gets the related <code>OldEmplPositionTypeRate</code> by the relation named <code>OldEmplPositionTypeRate</code>.
     * @return the list of <code>OldEmplPositionTypeRate</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends OldEmplPositionTypeRate> getOldEmplPositionTypeRates() throws RepositoryException {
        if (this.oldEmplPositionTypeRates == null) {
            this.oldEmplPositionTypeRates = getRelated(OldEmplPositionTypeRate.class, "OldEmplPositionTypeRate");
        }
        return this.oldEmplPositionTypeRates;
    }
    /**
     * Auto generated method that gets the related <code>RateAmount</code> by the relation named <code>RateAmount</code>.
     * @return the list of <code>RateAmount</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends RateAmount> getRateAmounts() throws RepositoryException {
        if (this.rateAmounts == null) {
            this.rateAmounts = getRelated(RateAmount.class, "RateAmount");
        }
        return this.rateAmounts;
    }
    /**
     * Auto generated method that gets the related <code>ValidResponsibility</code> by the relation named <code>ValidResponsibility</code>.
     * @return the list of <code>ValidResponsibility</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends ValidResponsibility> getValidResponsibilitys() throws RepositoryException {
        if (this.validResponsibilitys == null) {
            this.validResponsibilitys = getRelated(ValidResponsibility.class, "ValidResponsibility");
        }
        return this.validResponsibilitys;
    }

    /**
     * Auto generated value setter.
     * @param parentEmplPositionType the parentEmplPositionType to set
    */
    public void setParentEmplPositionType(EmplPositionType parentEmplPositionType) {
        this.parentEmplPositionType = parentEmplPositionType;
    }
    /**
     * Auto generated value setter.
     * @param emplPositions the emplPositions to set
    */
    public void setEmplPositions(List<EmplPosition> emplPositions) {
        this.emplPositions = emplPositions;
    }
    /**
     * Auto generated value setter.
     * @param childEmplPositionTypes the childEmplPositionTypes to set
    */
    public void setChildEmplPositionTypes(List<EmplPositionType> childEmplPositionTypes) {
        this.childEmplPositionTypes = childEmplPositionTypes;
    }
    /**
     * Auto generated value setter.
     * @param emplPositionTypeClasses the emplPositionTypeClasses to set
    */
    public void setEmplPositionTypeClasses(List<EmplPositionTypeClass> emplPositionTypeClasses) {
        this.emplPositionTypeClasses = emplPositionTypeClasses;
    }
    /**
     * Auto generated value setter.
     * @param emplPositionTypeRates the emplPositionTypeRates to set
    */
    public void setEmplPositionTypeRates(List<EmplPositionTypeRate> emplPositionTypeRates) {
        this.emplPositionTypeRates = emplPositionTypeRates;
    }
    /**
     * Auto generated value setter.
     * @param oldEmplPositionTypeRates the oldEmplPositionTypeRates to set
    */
    public void setOldEmplPositionTypeRates(List<OldEmplPositionTypeRate> oldEmplPositionTypeRates) {
        this.oldEmplPositionTypeRates = oldEmplPositionTypeRates;
    }
    /**
     * Auto generated value setter.
     * @param rateAmounts the rateAmounts to set
    */
    public void setRateAmounts(List<RateAmount> rateAmounts) {
        this.rateAmounts = rateAmounts;
    }
    /**
     * Auto generated value setter.
     * @param validResponsibilitys the validResponsibilitys to set
    */
    public void setValidResponsibilitys(List<ValidResponsibility> validResponsibilitys) {
        this.validResponsibilitys = validResponsibilitys;
    }

    /**
     * Auto generated method that add item to collection.
     */
    public void addEmplPositionTypeClasse(EmplPositionTypeClass emplPositionTypeClasse) {
        if (this.emplPositionTypeClasses == null) {
            this.emplPositionTypeClasses = new ArrayList<EmplPositionTypeClass>();
        }
        this.emplPositionTypeClasses.add(emplPositionTypeClasse);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeEmplPositionTypeClasse(EmplPositionTypeClass emplPositionTypeClasse) {
        if (this.emplPositionTypeClasses == null) {
            return;
        }
        this.emplPositionTypeClasses.remove(emplPositionTypeClasse);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearEmplPositionTypeClasse() {
        if (this.emplPositionTypeClasses == null) {
            return;
        }
        this.emplPositionTypeClasses.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addEmplPositionTypeRate(EmplPositionTypeRate emplPositionTypeRate) {
        if (this.emplPositionTypeRates == null) {
            this.emplPositionTypeRates = new ArrayList<EmplPositionTypeRate>();
        }
        this.emplPositionTypeRates.add(emplPositionTypeRate);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeEmplPositionTypeRate(EmplPositionTypeRate emplPositionTypeRate) {
        if (this.emplPositionTypeRates == null) {
            return;
        }
        this.emplPositionTypeRates.remove(emplPositionTypeRate);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearEmplPositionTypeRate() {
        if (this.emplPositionTypeRates == null) {
            return;
        }
        this.emplPositionTypeRates.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addOldEmplPositionTypeRate(OldEmplPositionTypeRate oldEmplPositionTypeRate) {
        if (this.oldEmplPositionTypeRates == null) {
            this.oldEmplPositionTypeRates = new ArrayList<OldEmplPositionTypeRate>();
        }
        this.oldEmplPositionTypeRates.add(oldEmplPositionTypeRate);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeOldEmplPositionTypeRate(OldEmplPositionTypeRate oldEmplPositionTypeRate) {
        if (this.oldEmplPositionTypeRates == null) {
            return;
        }
        this.oldEmplPositionTypeRates.remove(oldEmplPositionTypeRate);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearOldEmplPositionTypeRate() {
        if (this.oldEmplPositionTypeRates == null) {
            return;
        }
        this.oldEmplPositionTypeRates.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addRateAmount(RateAmount rateAmount) {
        if (this.rateAmounts == null) {
            this.rateAmounts = new ArrayList<RateAmount>();
        }
        this.rateAmounts.add(rateAmount);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeRateAmount(RateAmount rateAmount) {
        if (this.rateAmounts == null) {
            return;
        }
        this.rateAmounts.remove(rateAmount);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearRateAmount() {
        if (this.rateAmounts == null) {
            return;
        }
        this.rateAmounts.clear();
    }
    /**
     * Auto generated method that add item to collection.
     */
    public void addValidResponsibility(ValidResponsibility validResponsibility) {
        if (this.validResponsibilitys == null) {
            this.validResponsibilitys = new ArrayList<ValidResponsibility>();
        }
        this.validResponsibilitys.add(validResponsibility);
    }
    /**
     * Auto generated method that remove item from collection.
     */
    public void removeValidResponsibility(ValidResponsibility validResponsibility) {
        if (this.validResponsibilitys == null) {
            return;
        }
        this.validResponsibilitys.remove(validResponsibility);
    }
    /**
     * Auto generated method that clear items from collection.
     */
    public void clearValidResponsibility() {
        if (this.validResponsibilitys == null) {
            return;
        }
        this.validResponsibilitys.clear();
    }

    /** {@inheritDoc} */
    @Override
    public void fromMap(Map<String, Object> mapValue) {
        preInit();
        setEmplPositionTypeId((String) mapValue.get("emplPositionTypeId"));
        setParentTypeId((String) mapValue.get("parentTypeId"));
        setHasTable((String) mapValue.get("hasTable"));
        setDescription((String) mapValue.get("description"));
        setLastUpdatedStamp((Timestamp) mapValue.get("lastUpdatedStamp"));
        setLastUpdatedTxStamp((Timestamp) mapValue.get("lastUpdatedTxStamp"));
        setCreatedStamp((Timestamp) mapValue.get("createdStamp"));
        setCreatedTxStamp((Timestamp) mapValue.get("createdTxStamp"));
        postInit();
    }

    /** {@inheritDoc} */
    @Override
    public Map<String, Object> toMap() {
        Map<String, Object> mapValue = new FastMap<String, Object>();
        mapValue.put("emplPositionTypeId", getEmplPositionTypeId());
        mapValue.put("parentTypeId", getParentTypeId());
        mapValue.put("hasTable", getHasTable());
        mapValue.put("description", getDescription());
        mapValue.put("lastUpdatedStamp", getLastUpdatedStamp());
        mapValue.put("lastUpdatedTxStamp", getLastUpdatedTxStamp());
        mapValue.put("createdStamp", getCreatedStamp());
        mapValue.put("createdTxStamp", getCreatedTxStamp());
        return mapValue;
    }


}
