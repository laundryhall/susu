package org.opentaps.base.services;

/*
 * Copyright (c) Open Source Strategies, Inc.
 *
 * Opentaps is free software: you can redistribute it and/or modify it
 * under the terms of the GNU Affero General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Opentaps is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with Opentaps.  If not, see <http://www.gnu.org/licenses/>.
 */

// DO NOT EDIT THIS FILE!  THIS IS AUTO GENERATED AND WILL GET WRITTEN OVER PERIODICALLY WHEN THE SERVICE MODEL CHANGES
// EXTEND THIS CLASS INSTEAD.

import org.opentaps.foundation.service.ServiceWrapper;

import java.util.List;
import java.util.Locale;
import java.util.Map;
import java.util.Set;
import java.util.TimeZone;
import javolution.util.FastMap;
import javolution.util.FastSet;
import org.ofbiz.entity.GenericValue;
import org.opentaps.foundation.infrastructure.User;

/**
 * Takes an initial Map of GlAccount, sums and a List of AcctgTransAndEntries and adds them to the Map,
            based on debit/credit flag of transaction entry and whether the account is a debit or credit account.
            Useful for doing income statement and intra-time-period updating of balance sheets, etc.
            This is like {@link #addToAccountBalances} but returns three Map : glAccountBalancesSums, glAccountDebitsSums
            and glAccountCreditsSums.
        .
 * Auto generated base service entity addToAccountBalancesWithDetails.
 *
 * Engine: java
 * Location: com.opensourcestrategies.financials.financials.FinancialServices
 * Invoke: addToAccountBalancesWithDetails
 * Defined in: hot-deploy/financials/servicedef/services_financials.xml
 */
public class AddToAccountBalancesWithDetailsService extends ServiceWrapper {

    /** The service name as used by the service engine. */
    public static final String NAME = "addToAccountBalancesWithDetails";
    /** If the service requires authentication. */
    public static final Boolean REQUIRES_AUTHENTICATION = Boolean.TRUE;
    /** If the service requires a new transaction. */
    public static final Boolean REQUIRES_NEW_TRANSACTION = Boolean.FALSE;
    /** If the service uses a transaction. */
    public static final Boolean USES_TRANSACTION = Boolean.FALSE;

    /** The enumeration of input parameters. */
    public static enum In {
        glAccountBalancesSums("glAccountBalancesSums"),
        glAccountCreditsSums("glAccountCreditsSums"),
        glAccountDebitsSums("glAccountDebitsSums"),
        locale("locale"),
        timeZone("timeZone"),
        transactionEntries("transactionEntries"),
        userLogin("userLogin");
        private final String _fieldName;
        private In(String name) { this._fieldName = name; }
        public String getName() { return this._fieldName; }
    }

    public static enum Out {
        errorMessage("errorMessage"),
        errorMessageList("errorMessageList"),
        glAccountBalancesSums("glAccountBalancesSums"),
        glAccountCreditsSums("glAccountCreditsSums"),
        glAccountDebitsSums("glAccountDebitsSums"),
        locale("locale"),
        responseMessage("responseMessage"),
        successMessage("successMessage"),
        successMessageList("successMessageList"),
        timeZone("timeZone"),
        userLogin("userLogin");
        private final String _fieldName;
        private Out(String name) { this._fieldName = name; }
        public String getName() { return this._fieldName; }
    }

    /**
     * Creates a new <code>AddToAccountBalancesWithDetailsService</code> instance.
     */
    public AddToAccountBalancesWithDetailsService() {
        super();
    }

    /**
     * Creates a new <code>AddToAccountBalancesWithDetailsService</code> instance.
     * @param user an <code>User</code> value
     */
    public AddToAccountBalancesWithDetailsService(User user) {
        super(user);
    }

    private Map inGlAccountBalancesSums;
    private Map inGlAccountCreditsSums;
    private Map inGlAccountDebitsSums;
    private Locale inLocale;
    private TimeZone inTimeZone;
    private List inTransactionEntries;
    private GenericValue inUserLogin;
    private String outErrorMessage;
    private List outErrorMessageList;
    private Map outGlAccountBalancesSums;
    private Map outGlAccountCreditsSums;
    private Map outGlAccountDebitsSums;
    private Locale outLocale;
    private String outResponseMessage;
    private String outSuccessMessage;
    private List outSuccessMessageList;
    private TimeZone outTimeZone;
    private GenericValue outUserLogin;

    private Set<String> inParameters = FastSet.newInstance();
    private Set<String> outParameters = FastSet.newInstance();

    /**
     * Auto generated value accessor.
     * This parameter is required.
     * @return <code>Map</code>
     */
    public Map getInGlAccountBalancesSums() {
        return this.inGlAccountBalancesSums;
    }
    /**
     * Auto generated value accessor.
     * This parameter is required.
     * @return <code>Map</code>
     */
    public Map getInGlAccountCreditsSums() {
        return this.inGlAccountCreditsSums;
    }
    /**
     * Auto generated value accessor.
     * This parameter is required.
     * @return <code>Map</code>
     */
    public Map getInGlAccountDebitsSums() {
        return this.inGlAccountDebitsSums;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>Locale</code>
     */
    public Locale getInLocale() {
        return this.inLocale;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>TimeZone</code>
     */
    public TimeZone getInTimeZone() {
        return this.inTimeZone;
    }
    /**
     * Auto generated value accessor.
     * This parameter is required.
     * @return <code>List</code>
     */
    public List getInTransactionEntries() {
        return this.inTransactionEntries;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>GenericValue</code>
     */
    public GenericValue getInUserLogin() {
        return this.inUserLogin;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getOutErrorMessage() {
        return this.outErrorMessage;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>List</code>
     */
    public List getOutErrorMessageList() {
        return this.outErrorMessageList;
    }
    /**
     * Auto generated value accessor.
     * This parameter is required.
     * @return <code>Map</code>
     */
    public Map getOutGlAccountBalancesSums() {
        return this.outGlAccountBalancesSums;
    }
    /**
     * Auto generated value accessor.
     * This parameter is required.
     * @return <code>Map</code>
     */
    public Map getOutGlAccountCreditsSums() {
        return this.outGlAccountCreditsSums;
    }
    /**
     * Auto generated value accessor.
     * This parameter is required.
     * @return <code>Map</code>
     */
    public Map getOutGlAccountDebitsSums() {
        return this.outGlAccountDebitsSums;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>Locale</code>
     */
    public Locale getOutLocale() {
        return this.outLocale;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getOutResponseMessage() {
        return this.outResponseMessage;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getOutSuccessMessage() {
        return this.outSuccessMessage;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>List</code>
     */
    public List getOutSuccessMessageList() {
        return this.outSuccessMessageList;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>TimeZone</code>
     */
    public TimeZone getOutTimeZone() {
        return this.outTimeZone;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>GenericValue</code>
     */
    public GenericValue getOutUserLogin() {
        return this.outUserLogin;
    }

    /**
     * Auto generated value setter.
     * This parameter is required.
     * @param inGlAccountBalancesSums the inGlAccountBalancesSums to set
    */
    public void setInGlAccountBalancesSums(Map inGlAccountBalancesSums) {
        this.inParameters.add("glAccountBalancesSums");
        this.inGlAccountBalancesSums = inGlAccountBalancesSums;
    }
    /**
     * Auto generated value setter.
     * This parameter is required.
     * @param inGlAccountCreditsSums the inGlAccountCreditsSums to set
    */
    public void setInGlAccountCreditsSums(Map inGlAccountCreditsSums) {
        this.inParameters.add("glAccountCreditsSums");
        this.inGlAccountCreditsSums = inGlAccountCreditsSums;
    }
    /**
     * Auto generated value setter.
     * This parameter is required.
     * @param inGlAccountDebitsSums the inGlAccountDebitsSums to set
    */
    public void setInGlAccountDebitsSums(Map inGlAccountDebitsSums) {
        this.inParameters.add("glAccountDebitsSums");
        this.inGlAccountDebitsSums = inGlAccountDebitsSums;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inLocale the inLocale to set
    */
    public void setInLocale(Locale inLocale) {
        this.inParameters.add("locale");
        this.inLocale = inLocale;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inTimeZone the inTimeZone to set
    */
    public void setInTimeZone(TimeZone inTimeZone) {
        this.inParameters.add("timeZone");
        this.inTimeZone = inTimeZone;
    }
    /**
     * Auto generated value setter.
     * This parameter is required.
     * @param inTransactionEntries the inTransactionEntries to set
    */
    public void setInTransactionEntries(List inTransactionEntries) {
        this.inParameters.add("transactionEntries");
        this.inTransactionEntries = inTransactionEntries;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inUserLogin the inUserLogin to set
    */
    public void setInUserLogin(GenericValue inUserLogin) {
        this.inParameters.add("userLogin");
        this.inUserLogin = inUserLogin;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param outErrorMessage the outErrorMessage to set
    */
    public void setOutErrorMessage(String outErrorMessage) {
        this.outParameters.add("errorMessage");
        this.outErrorMessage = outErrorMessage;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param outErrorMessageList the outErrorMessageList to set
    */
    public void setOutErrorMessageList(List outErrorMessageList) {
        this.outParameters.add("errorMessageList");
        this.outErrorMessageList = outErrorMessageList;
    }
    /**
     * Auto generated value setter.
     * This parameter is required.
     * @param outGlAccountBalancesSums the outGlAccountBalancesSums to set
    */
    public void setOutGlAccountBalancesSums(Map outGlAccountBalancesSums) {
        this.outParameters.add("glAccountBalancesSums");
        this.outGlAccountBalancesSums = outGlAccountBalancesSums;
    }
    /**
     * Auto generated value setter.
     * This parameter is required.
     * @param outGlAccountCreditsSums the outGlAccountCreditsSums to set
    */
    public void setOutGlAccountCreditsSums(Map outGlAccountCreditsSums) {
        this.outParameters.add("glAccountCreditsSums");
        this.outGlAccountCreditsSums = outGlAccountCreditsSums;
    }
    /**
     * Auto generated value setter.
     * This parameter is required.
     * @param outGlAccountDebitsSums the outGlAccountDebitsSums to set
    */
    public void setOutGlAccountDebitsSums(Map outGlAccountDebitsSums) {
        this.outParameters.add("glAccountDebitsSums");
        this.outGlAccountDebitsSums = outGlAccountDebitsSums;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param outLocale the outLocale to set
    */
    public void setOutLocale(Locale outLocale) {
        this.outParameters.add("locale");
        this.outLocale = outLocale;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param outResponseMessage the outResponseMessage to set
    */
    public void setOutResponseMessage(String outResponseMessage) {
        this.outParameters.add("responseMessage");
        this.outResponseMessage = outResponseMessage;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param outSuccessMessage the outSuccessMessage to set
    */
    public void setOutSuccessMessage(String outSuccessMessage) {
        this.outParameters.add("successMessage");
        this.outSuccessMessage = outSuccessMessage;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param outSuccessMessageList the outSuccessMessageList to set
    */
    public void setOutSuccessMessageList(List outSuccessMessageList) {
        this.outParameters.add("successMessageList");
        this.outSuccessMessageList = outSuccessMessageList;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param outTimeZone the outTimeZone to set
    */
    public void setOutTimeZone(TimeZone outTimeZone) {
        this.outParameters.add("timeZone");
        this.outTimeZone = outTimeZone;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param outUserLogin the outUserLogin to set
    */
    public void setOutUserLogin(GenericValue outUserLogin) {
        this.outParameters.add("userLogin");
        this.outUserLogin = outUserLogin;
    }

    /** {@inheritDoc} */
    public String name() {
        return NAME;
    }

    /** {@inheritDoc} */
    public Boolean requiresAuthentication() {
        return REQUIRES_AUTHENTICATION;
    }

    /** {@inheritDoc} */
    public Boolean requiresNewTransaction() {
        return REQUIRES_NEW_TRANSACTION;
    }

    /** {@inheritDoc} */
    public Boolean usesTransaction() {
        return USES_TRANSACTION;
    }

    /** {@inheritDoc} */
    public Map<String, Object> inputMap() {
        Map<String, Object> mapValue = new FastMap<String, Object>();
        if (inParameters.contains("glAccountBalancesSums")) mapValue.put("glAccountBalancesSums", getInGlAccountBalancesSums());
        if (inParameters.contains("glAccountCreditsSums")) mapValue.put("glAccountCreditsSums", getInGlAccountCreditsSums());
        if (inParameters.contains("glAccountDebitsSums")) mapValue.put("glAccountDebitsSums", getInGlAccountDebitsSums());
        if (inParameters.contains("locale")) mapValue.put("locale", getInLocale());
        if (inParameters.contains("timeZone")) mapValue.put("timeZone", getInTimeZone());
        if (inParameters.contains("transactionEntries")) mapValue.put("transactionEntries", getInTransactionEntries());
        if (inParameters.contains("userLogin")) mapValue.put("userLogin", getInUserLogin());
        // allow the User set to override the userLogin
        if (getUser() != null) mapValue.put("userLogin", getUser().getOfbizUserLogin());
        return mapValue;
    }

    /** {@inheritDoc} */
    public Map<String, Object> outputMap() {
        Map<String, Object> mapValue = new FastMap<String, Object>();
        if (outParameters.contains("errorMessage")) mapValue.put("errorMessage", getOutErrorMessage());
        if (outParameters.contains("errorMessageList")) mapValue.put("errorMessageList", getOutErrorMessageList());
        if (outParameters.contains("glAccountBalancesSums")) mapValue.put("glAccountBalancesSums", getOutGlAccountBalancesSums());
        if (outParameters.contains("glAccountCreditsSums")) mapValue.put("glAccountCreditsSums", getOutGlAccountCreditsSums());
        if (outParameters.contains("glAccountDebitsSums")) mapValue.put("glAccountDebitsSums", getOutGlAccountDebitsSums());
        if (outParameters.contains("locale")) mapValue.put("locale", getOutLocale());
        if (outParameters.contains("responseMessage")) mapValue.put("responseMessage", getOutResponseMessage());
        if (outParameters.contains("successMessage")) mapValue.put("successMessage", getOutSuccessMessage());
        if (outParameters.contains("successMessageList")) mapValue.put("successMessageList", getOutSuccessMessageList());
        if (outParameters.contains("timeZone")) mapValue.put("timeZone", getOutTimeZone());
        if (outParameters.contains("userLogin")) mapValue.put("userLogin", getOutUserLogin());
        return mapValue;
    }

    /** {@inheritDoc} */
    public void putAllInput(Map<String, Object> mapValue) {
        if (mapValue.containsKey("glAccountBalancesSums")) setInGlAccountBalancesSums((Map) mapValue.get("glAccountBalancesSums"));
        if (mapValue.containsKey("glAccountCreditsSums")) setInGlAccountCreditsSums((Map) mapValue.get("glAccountCreditsSums"));
        if (mapValue.containsKey("glAccountDebitsSums")) setInGlAccountDebitsSums((Map) mapValue.get("glAccountDebitsSums"));
        if (mapValue.containsKey("locale")) setInLocale((Locale) mapValue.get("locale"));
        if (mapValue.containsKey("timeZone")) setInTimeZone((TimeZone) mapValue.get("timeZone"));
        if (mapValue.containsKey("transactionEntries")) setInTransactionEntries((List) mapValue.get("transactionEntries"));
        if (mapValue.containsKey("userLogin")) setInUserLogin((GenericValue) mapValue.get("userLogin"));
    }

    /** {@inheritDoc} */
    public void putAllOutput(Map<String, Object> mapValue) {
        if (mapValue.containsKey("errorMessage")) setOutErrorMessage((String) mapValue.get("errorMessage"));
        if (mapValue.containsKey("errorMessageList")) setOutErrorMessageList((List) mapValue.get("errorMessageList"));
        if (mapValue.containsKey("glAccountBalancesSums")) setOutGlAccountBalancesSums((Map) mapValue.get("glAccountBalancesSums"));
        if (mapValue.containsKey("glAccountCreditsSums")) setOutGlAccountCreditsSums((Map) mapValue.get("glAccountCreditsSums"));
        if (mapValue.containsKey("glAccountDebitsSums")) setOutGlAccountDebitsSums((Map) mapValue.get("glAccountDebitsSums"));
        if (mapValue.containsKey("locale")) setOutLocale((Locale) mapValue.get("locale"));
        if (mapValue.containsKey("responseMessage")) setOutResponseMessage((String) mapValue.get("responseMessage"));
        if (mapValue.containsKey("successMessage")) setOutSuccessMessage((String) mapValue.get("successMessage"));
        if (mapValue.containsKey("successMessageList")) setOutSuccessMessageList((List) mapValue.get("successMessageList"));
        if (mapValue.containsKey("timeZone")) setOutTimeZone((TimeZone) mapValue.get("timeZone"));
        if (mapValue.containsKey("userLogin")) setOutUserLogin((GenericValue) mapValue.get("userLogin"));
    }

    /**
     * Construct a <code>AddToAccountBalancesWithDetailsService</code> from the input values of the given <code>AddToAccountBalancesWithDetailsService</code>.
     * @param input a <code>AddToAccountBalancesWithDetailsService</code>
     */
    public static AddToAccountBalancesWithDetailsService fromInput(AddToAccountBalancesWithDetailsService input) {
        AddToAccountBalancesWithDetailsService service = new AddToAccountBalancesWithDetailsService();
        return fromInput(input.inputMap());
    }

    /**
     * Construct a <code>AddToAccountBalancesWithDetailsService</code> from the output values of the given <code>AddToAccountBalancesWithDetailsService</code>.
     * @param output a <code>AddToAccountBalancesWithDetailsService</code>
     */
    public static AddToAccountBalancesWithDetailsService fromOutput(AddToAccountBalancesWithDetailsService output) {
        AddToAccountBalancesWithDetailsService service = new AddToAccountBalancesWithDetailsService();
        service.putAllOutput(output.outputMap());
        return service;
    }

    /**
     * Construct a <code>AddToAccountBalancesWithDetailsService</code> from the given input <code>Map</code>.
     * @param mapValue the service input <code>Map</code>
     */
    public static AddToAccountBalancesWithDetailsService fromInput(Map<String, Object> mapValue) {
        AddToAccountBalancesWithDetailsService service = new AddToAccountBalancesWithDetailsService();
        service.putAllInput(mapValue);
        if (mapValue.containsKey("userLogin")) {
            GenericValue userGv = (GenericValue) mapValue.get("userLogin");
            if (userGv != null) {
                service.setUser(new User(userGv, userGv.getDelegator()));
            }
        }
        return service;
    }

    /**
     * Construct a <code>AddToAccountBalancesWithDetailsService</code> from the given output <code>Map</code>.
     * @param mapValue the service output <code>Map</code>
     */
    public static AddToAccountBalancesWithDetailsService fromOutput(Map<String, Object> mapValue) {
        AddToAccountBalancesWithDetailsService service = new AddToAccountBalancesWithDetailsService();
        service.putAllOutput(mapValue);
        return service;
    }
}
