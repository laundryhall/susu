package org.opentaps.base.services;

/*
 * Copyright (c) Open Source Strategies, Inc.
 *
 * Opentaps is free software: you can redistribute it and/or modify it
 * under the terms of the GNU Affero General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Opentaps is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with Opentaps.  If not, see <http://www.gnu.org/licenses/>.
 */

// DO NOT EDIT THIS FILE!  THIS IS AUTO GENERATED AND WILL GET WRITTEN OVER PERIODICALLY WHEN THE SERVICE MODEL CHANGES
// EXTEND THIS CLASS INSTEAD.

import org.opentaps.foundation.service.ServiceWrapper;

import java.math.BigDecimal;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import java.util.Set;
import java.util.TimeZone;
import javolution.util.FastMap;
import javolution.util.FastSet;
import org.ofbiz.entity.GenericValue;
import org.opentaps.foundation.infrastructure.User;

/**
 * Process the payment refund result(s).
 * Auto generated base service entity processRefundResult.
 *
 * Engine: java
 * Location: org.ofbiz.accounting.payment.PaymentGatewayServices
 * Invoke: processRefundResult
 * Defined in: applications/accounting/servicedef/services_paymentmethod.xml
 */
public class ProcessRefundResultService extends ServiceWrapper {

    /** The service name as used by the service engine. */
    public static final String NAME = "processRefundResult";
    /** If the service requires authentication. */
    public static final Boolean REQUIRES_AUTHENTICATION = Boolean.TRUE;
    /** If the service requires a new transaction. */
    public static final Boolean REQUIRES_NEW_TRANSACTION = Boolean.FALSE;
    /** If the service uses a transaction. */
    public static final Boolean USES_TRANSACTION = Boolean.TRUE;

    /** The enumeration of input parameters. */
    public static enum In {
        currencyUomId("currencyUomId"),
        internalRespMsgs("internalRespMsgs"),
        invoiceId("invoiceId"),
        locale("locale"),
        orderPaymentPreference("orderPaymentPreference"),
        payFromPartyId("payFromPartyId"),
        payToPartyId("payToPartyId"),
        refundAltRefNum("refundAltRefNum"),
        refundAmount("refundAmount"),
        refundCode("refundCode"),
        refundFlag("refundFlag"),
        refundMessage("refundMessage"),
        refundRefNum("refundRefNum"),
        refundResult("refundResult"),
        serviceTypeEnum("serviceTypeEnum"),
        timeZone("timeZone"),
        userLogin("userLogin");
        private final String _fieldName;
        private In(String name) { this._fieldName = name; }
        public String getName() { return this._fieldName; }
    }

    public static enum Out {
        errorMessage("errorMessage"),
        errorMessageList("errorMessageList"),
        locale("locale"),
        paymentId("paymentId"),
        responseMessage("responseMessage"),
        successMessage("successMessage"),
        successMessageList("successMessageList"),
        timeZone("timeZone"),
        userLogin("userLogin");
        private final String _fieldName;
        private Out(String name) { this._fieldName = name; }
        public String getName() { return this._fieldName; }
    }

    /**
     * Creates a new <code>ProcessRefundResultService</code> instance.
     */
    public ProcessRefundResultService() {
        super();
    }

    /**
     * Creates a new <code>ProcessRefundResultService</code> instance.
     * @param user an <code>User</code> value
     */
    public ProcessRefundResultService(User user) {
        super(user);
    }

    private String inCurrencyUomId;
    private List inInternalRespMsgs;
    private String inInvoiceId;
    private Locale inLocale;
    private GenericValue inOrderPaymentPreference;
    private String inPayFromPartyId;
    private String inPayToPartyId;
    private String inRefundAltRefNum;
    private BigDecimal inRefundAmount;
    private String inRefundCode;
    private String inRefundFlag;
    private String inRefundMessage;
    private String inRefundRefNum;
    private Boolean inRefundResult;
    private String inServiceTypeEnum;
    private TimeZone inTimeZone;
    private GenericValue inUserLogin;
    private String outErrorMessage;
    private List outErrorMessageList;
    private Locale outLocale;
    private String outPaymentId;
    private String outResponseMessage;
    private String outSuccessMessage;
    private List outSuccessMessageList;
    private TimeZone outTimeZone;
    private GenericValue outUserLogin;

    private Set<String> inParameters = FastSet.newInstance();
    private Set<String> outParameters = FastSet.newInstance();

    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInCurrencyUomId() {
        return this.inCurrencyUomId;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>List</code>
     */
    public List getInInternalRespMsgs() {
        return this.inInternalRespMsgs;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInInvoiceId() {
        return this.inInvoiceId;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>Locale</code>
     */
    public Locale getInLocale() {
        return this.inLocale;
    }
    /**
     * Auto generated value accessor.
     * This parameter is required.
     * @return <code>GenericValue</code>
     */
    public GenericValue getInOrderPaymentPreference() {
        return this.inOrderPaymentPreference;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInPayFromPartyId() {
        return this.inPayFromPartyId;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInPayToPartyId() {
        return this.inPayToPartyId;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInRefundAltRefNum() {
        return this.inRefundAltRefNum;
    }
    /**
     * Auto generated value accessor.
     * This parameter is required.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getInRefundAmount() {
        return this.inRefundAmount;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInRefundCode() {
        return this.inRefundCode;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInRefundFlag() {
        return this.inRefundFlag;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInRefundMessage() {
        return this.inRefundMessage;
    }
    /**
     * Auto generated value accessor.
     * This parameter is required.
     * @return <code>String</code>
     */
    public String getInRefundRefNum() {
        return this.inRefundRefNum;
    }
    /**
     * Auto generated value accessor.
     * This parameter is required.
     * @return <code>Boolean</code>
     */
    public Boolean getInRefundResult() {
        return this.inRefundResult;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInServiceTypeEnum() {
        return this.inServiceTypeEnum;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>TimeZone</code>
     */
    public TimeZone getInTimeZone() {
        return this.inTimeZone;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>GenericValue</code>
     */
    public GenericValue getInUserLogin() {
        return this.inUserLogin;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getOutErrorMessage() {
        return this.outErrorMessage;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>List</code>
     */
    public List getOutErrorMessageList() {
        return this.outErrorMessageList;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>Locale</code>
     */
    public Locale getOutLocale() {
        return this.outLocale;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getOutPaymentId() {
        return this.outPaymentId;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getOutResponseMessage() {
        return this.outResponseMessage;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getOutSuccessMessage() {
        return this.outSuccessMessage;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>List</code>
     */
    public List getOutSuccessMessageList() {
        return this.outSuccessMessageList;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>TimeZone</code>
     */
    public TimeZone getOutTimeZone() {
        return this.outTimeZone;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>GenericValue</code>
     */
    public GenericValue getOutUserLogin() {
        return this.outUserLogin;
    }

    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inCurrencyUomId the inCurrencyUomId to set
    */
    public void setInCurrencyUomId(String inCurrencyUomId) {
        this.inParameters.add("currencyUomId");
        this.inCurrencyUomId = inCurrencyUomId;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inInternalRespMsgs the inInternalRespMsgs to set
    */
    public void setInInternalRespMsgs(List inInternalRespMsgs) {
        this.inParameters.add("internalRespMsgs");
        this.inInternalRespMsgs = inInternalRespMsgs;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inInvoiceId the inInvoiceId to set
    */
    public void setInInvoiceId(String inInvoiceId) {
        this.inParameters.add("invoiceId");
        this.inInvoiceId = inInvoiceId;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inLocale the inLocale to set
    */
    public void setInLocale(Locale inLocale) {
        this.inParameters.add("locale");
        this.inLocale = inLocale;
    }
    /**
     * Auto generated value setter.
     * This parameter is required.
     * @param inOrderPaymentPreference the inOrderPaymentPreference to set
    */
    public void setInOrderPaymentPreference(GenericValue inOrderPaymentPreference) {
        this.inParameters.add("orderPaymentPreference");
        this.inOrderPaymentPreference = inOrderPaymentPreference;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inPayFromPartyId the inPayFromPartyId to set
    */
    public void setInPayFromPartyId(String inPayFromPartyId) {
        this.inParameters.add("payFromPartyId");
        this.inPayFromPartyId = inPayFromPartyId;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inPayToPartyId the inPayToPartyId to set
    */
    public void setInPayToPartyId(String inPayToPartyId) {
        this.inParameters.add("payToPartyId");
        this.inPayToPartyId = inPayToPartyId;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inRefundAltRefNum the inRefundAltRefNum to set
    */
    public void setInRefundAltRefNum(String inRefundAltRefNum) {
        this.inParameters.add("refundAltRefNum");
        this.inRefundAltRefNum = inRefundAltRefNum;
    }
    /**
     * Auto generated value setter.
     * This parameter is required.
     * @param inRefundAmount the inRefundAmount to set
    */
    public void setInRefundAmount(BigDecimal inRefundAmount) {
        this.inParameters.add("refundAmount");
        this.inRefundAmount = inRefundAmount;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inRefundCode the inRefundCode to set
    */
    public void setInRefundCode(String inRefundCode) {
        this.inParameters.add("refundCode");
        this.inRefundCode = inRefundCode;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inRefundFlag the inRefundFlag to set
    */
    public void setInRefundFlag(String inRefundFlag) {
        this.inParameters.add("refundFlag");
        this.inRefundFlag = inRefundFlag;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inRefundMessage the inRefundMessage to set
    */
    public void setInRefundMessage(String inRefundMessage) {
        this.inParameters.add("refundMessage");
        this.inRefundMessage = inRefundMessage;
    }
    /**
     * Auto generated value setter.
     * This parameter is required.
     * @param inRefundRefNum the inRefundRefNum to set
    */
    public void setInRefundRefNum(String inRefundRefNum) {
        this.inParameters.add("refundRefNum");
        this.inRefundRefNum = inRefundRefNum;
    }
    /**
     * Auto generated value setter.
     * This parameter is required.
     * @param inRefundResult the inRefundResult to set
    */
    public void setInRefundResult(Boolean inRefundResult) {
        this.inParameters.add("refundResult");
        this.inRefundResult = inRefundResult;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inServiceTypeEnum the inServiceTypeEnum to set
    */
    public void setInServiceTypeEnum(String inServiceTypeEnum) {
        this.inParameters.add("serviceTypeEnum");
        this.inServiceTypeEnum = inServiceTypeEnum;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inTimeZone the inTimeZone to set
    */
    public void setInTimeZone(TimeZone inTimeZone) {
        this.inParameters.add("timeZone");
        this.inTimeZone = inTimeZone;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inUserLogin the inUserLogin to set
    */
    public void setInUserLogin(GenericValue inUserLogin) {
        this.inParameters.add("userLogin");
        this.inUserLogin = inUserLogin;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param outErrorMessage the outErrorMessage to set
    */
    public void setOutErrorMessage(String outErrorMessage) {
        this.outParameters.add("errorMessage");
        this.outErrorMessage = outErrorMessage;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param outErrorMessageList the outErrorMessageList to set
    */
    public void setOutErrorMessageList(List outErrorMessageList) {
        this.outParameters.add("errorMessageList");
        this.outErrorMessageList = outErrorMessageList;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param outLocale the outLocale to set
    */
    public void setOutLocale(Locale outLocale) {
        this.outParameters.add("locale");
        this.outLocale = outLocale;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param outPaymentId the outPaymentId to set
    */
    public void setOutPaymentId(String outPaymentId) {
        this.outParameters.add("paymentId");
        this.outPaymentId = outPaymentId;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param outResponseMessage the outResponseMessage to set
    */
    public void setOutResponseMessage(String outResponseMessage) {
        this.outParameters.add("responseMessage");
        this.outResponseMessage = outResponseMessage;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param outSuccessMessage the outSuccessMessage to set
    */
    public void setOutSuccessMessage(String outSuccessMessage) {
        this.outParameters.add("successMessage");
        this.outSuccessMessage = outSuccessMessage;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param outSuccessMessageList the outSuccessMessageList to set
    */
    public void setOutSuccessMessageList(List outSuccessMessageList) {
        this.outParameters.add("successMessageList");
        this.outSuccessMessageList = outSuccessMessageList;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param outTimeZone the outTimeZone to set
    */
    public void setOutTimeZone(TimeZone outTimeZone) {
        this.outParameters.add("timeZone");
        this.outTimeZone = outTimeZone;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param outUserLogin the outUserLogin to set
    */
    public void setOutUserLogin(GenericValue outUserLogin) {
        this.outParameters.add("userLogin");
        this.outUserLogin = outUserLogin;
    }

    /** {@inheritDoc} */
    public String name() {
        return NAME;
    }

    /** {@inheritDoc} */
    public Boolean requiresAuthentication() {
        return REQUIRES_AUTHENTICATION;
    }

    /** {@inheritDoc} */
    public Boolean requiresNewTransaction() {
        return REQUIRES_NEW_TRANSACTION;
    }

    /** {@inheritDoc} */
    public Boolean usesTransaction() {
        return USES_TRANSACTION;
    }

    /** {@inheritDoc} */
    public Map<String, Object> inputMap() {
        Map<String, Object> mapValue = new FastMap<String, Object>();
        if (inParameters.contains("currencyUomId")) mapValue.put("currencyUomId", getInCurrencyUomId());
        if (inParameters.contains("internalRespMsgs")) mapValue.put("internalRespMsgs", getInInternalRespMsgs());
        if (inParameters.contains("invoiceId")) mapValue.put("invoiceId", getInInvoiceId());
        if (inParameters.contains("locale")) mapValue.put("locale", getInLocale());
        if (inParameters.contains("orderPaymentPreference")) mapValue.put("orderPaymentPreference", getInOrderPaymentPreference());
        if (inParameters.contains("payFromPartyId")) mapValue.put("payFromPartyId", getInPayFromPartyId());
        if (inParameters.contains("payToPartyId")) mapValue.put("payToPartyId", getInPayToPartyId());
        if (inParameters.contains("refundAltRefNum")) mapValue.put("refundAltRefNum", getInRefundAltRefNum());
        if (inParameters.contains("refundAmount")) mapValue.put("refundAmount", getInRefundAmount());
        if (inParameters.contains("refundCode")) mapValue.put("refundCode", getInRefundCode());
        if (inParameters.contains("refundFlag")) mapValue.put("refundFlag", getInRefundFlag());
        if (inParameters.contains("refundMessage")) mapValue.put("refundMessage", getInRefundMessage());
        if (inParameters.contains("refundRefNum")) mapValue.put("refundRefNum", getInRefundRefNum());
        if (inParameters.contains("refundResult")) mapValue.put("refundResult", getInRefundResult());
        if (inParameters.contains("serviceTypeEnum")) mapValue.put("serviceTypeEnum", getInServiceTypeEnum());
        if (inParameters.contains("timeZone")) mapValue.put("timeZone", getInTimeZone());
        if (inParameters.contains("userLogin")) mapValue.put("userLogin", getInUserLogin());
        // allow the User set to override the userLogin
        if (getUser() != null) mapValue.put("userLogin", getUser().getOfbizUserLogin());
        return mapValue;
    }

    /** {@inheritDoc} */
    public Map<String, Object> outputMap() {
        Map<String, Object> mapValue = new FastMap<String, Object>();
        if (outParameters.contains("errorMessage")) mapValue.put("errorMessage", getOutErrorMessage());
        if (outParameters.contains("errorMessageList")) mapValue.put("errorMessageList", getOutErrorMessageList());
        if (outParameters.contains("locale")) mapValue.put("locale", getOutLocale());
        if (outParameters.contains("paymentId")) mapValue.put("paymentId", getOutPaymentId());
        if (outParameters.contains("responseMessage")) mapValue.put("responseMessage", getOutResponseMessage());
        if (outParameters.contains("successMessage")) mapValue.put("successMessage", getOutSuccessMessage());
        if (outParameters.contains("successMessageList")) mapValue.put("successMessageList", getOutSuccessMessageList());
        if (outParameters.contains("timeZone")) mapValue.put("timeZone", getOutTimeZone());
        if (outParameters.contains("userLogin")) mapValue.put("userLogin", getOutUserLogin());
        return mapValue;
    }

    /** {@inheritDoc} */
    public void putAllInput(Map<String, Object> mapValue) {
        if (mapValue.containsKey("currencyUomId")) setInCurrencyUomId((String) mapValue.get("currencyUomId"));
        if (mapValue.containsKey("internalRespMsgs")) setInInternalRespMsgs((List) mapValue.get("internalRespMsgs"));
        if (mapValue.containsKey("invoiceId")) setInInvoiceId((String) mapValue.get("invoiceId"));
        if (mapValue.containsKey("locale")) setInLocale((Locale) mapValue.get("locale"));
        if (mapValue.containsKey("orderPaymentPreference")) setInOrderPaymentPreference((GenericValue) mapValue.get("orderPaymentPreference"));
        if (mapValue.containsKey("payFromPartyId")) setInPayFromPartyId((String) mapValue.get("payFromPartyId"));
        if (mapValue.containsKey("payToPartyId")) setInPayToPartyId((String) mapValue.get("payToPartyId"));
        if (mapValue.containsKey("refundAltRefNum")) setInRefundAltRefNum((String) mapValue.get("refundAltRefNum"));
        if (mapValue.containsKey("refundAmount")) setInRefundAmount((BigDecimal) mapValue.get("refundAmount"));
        if (mapValue.containsKey("refundCode")) setInRefundCode((String) mapValue.get("refundCode"));
        if (mapValue.containsKey("refundFlag")) setInRefundFlag((String) mapValue.get("refundFlag"));
        if (mapValue.containsKey("refundMessage")) setInRefundMessage((String) mapValue.get("refundMessage"));
        if (mapValue.containsKey("refundRefNum")) setInRefundRefNum((String) mapValue.get("refundRefNum"));
        if (mapValue.containsKey("refundResult")) setInRefundResult((Boolean) mapValue.get("refundResult"));
        if (mapValue.containsKey("serviceTypeEnum")) setInServiceTypeEnum((String) mapValue.get("serviceTypeEnum"));
        if (mapValue.containsKey("timeZone")) setInTimeZone((TimeZone) mapValue.get("timeZone"));
        if (mapValue.containsKey("userLogin")) setInUserLogin((GenericValue) mapValue.get("userLogin"));
    }

    /** {@inheritDoc} */
    public void putAllOutput(Map<String, Object> mapValue) {
        if (mapValue.containsKey("errorMessage")) setOutErrorMessage((String) mapValue.get("errorMessage"));
        if (mapValue.containsKey("errorMessageList")) setOutErrorMessageList((List) mapValue.get("errorMessageList"));
        if (mapValue.containsKey("locale")) setOutLocale((Locale) mapValue.get("locale"));
        if (mapValue.containsKey("paymentId")) setOutPaymentId((String) mapValue.get("paymentId"));
        if (mapValue.containsKey("responseMessage")) setOutResponseMessage((String) mapValue.get("responseMessage"));
        if (mapValue.containsKey("successMessage")) setOutSuccessMessage((String) mapValue.get("successMessage"));
        if (mapValue.containsKey("successMessageList")) setOutSuccessMessageList((List) mapValue.get("successMessageList"));
        if (mapValue.containsKey("timeZone")) setOutTimeZone((TimeZone) mapValue.get("timeZone"));
        if (mapValue.containsKey("userLogin")) setOutUserLogin((GenericValue) mapValue.get("userLogin"));
    }

    /**
     * Construct a <code>ProcessRefundResultService</code> from the input values of the given <code>ProcessRefundResultService</code>.
     * @param input a <code>ProcessRefundResultService</code>
     */
    public static ProcessRefundResultService fromInput(ProcessRefundResultService input) {
        ProcessRefundResultService service = new ProcessRefundResultService();
        return fromInput(input.inputMap());
    }

    /**
     * Construct a <code>ProcessRefundResultService</code> from the output values of the given <code>ProcessRefundResultService</code>.
     * @param output a <code>ProcessRefundResultService</code>
     */
    public static ProcessRefundResultService fromOutput(ProcessRefundResultService output) {
        ProcessRefundResultService service = new ProcessRefundResultService();
        service.putAllOutput(output.outputMap());
        return service;
    }

    /**
     * Construct a <code>ProcessRefundResultService</code> from the given input <code>Map</code>.
     * @param mapValue the service input <code>Map</code>
     */
    public static ProcessRefundResultService fromInput(Map<String, Object> mapValue) {
        ProcessRefundResultService service = new ProcessRefundResultService();
        service.putAllInput(mapValue);
        if (mapValue.containsKey("userLogin")) {
            GenericValue userGv = (GenericValue) mapValue.get("userLogin");
            if (userGv != null) {
                service.setUser(new User(userGv, userGv.getDelegator()));
            }
        }
        return service;
    }

    /**
     * Construct a <code>ProcessRefundResultService</code> from the given output <code>Map</code>.
     * @param mapValue the service output <code>Map</code>
     */
    public static ProcessRefundResultService fromOutput(Map<String, Object> mapValue) {
        ProcessRefundResultService service = new ProcessRefundResultService();
        service.putAllOutput(mapValue);
        return service;
    }
}
