package org.opentaps.base.services;

/*
 * Copyright (c) Open Source Strategies, Inc.
 *
 * Opentaps is free software: you can redistribute it and/or modify it
 * under the terms of the GNU Affero General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Opentaps is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with Opentaps.  If not, see <http://www.gnu.org/licenses/>.
 */

// DO NOT EDIT THIS FILE!  THIS IS AUTO GENERATED AND WILL GET WRITTEN OVER PERIODICALLY WHEN THE SERVICE MODEL CHANGES
// EXTEND THIS CLASS INSTEAD.

import org.opentaps.foundation.service.ServiceWrapper;

import java.util.List;
import java.util.Locale;
import java.util.Map;
import java.util.Set;
import java.util.TimeZone;
import javolution.util.FastMap;
import javolution.util.FastSet;
import org.ofbiz.entity.GenericValue;
import org.opentaps.foundation.infrastructure.User;

/**
 * 
            Import orders using DataImportOrderHeader and DataImportOrderItems.
            Note that this service is not wrapped in a transaction.  Each orderHeader/orderItems record set imported is in its
                own transaction, so it can store as many good records as possible. 
            companyPartyId is the ID of the billFromVendor for the orders.
            productStoreId is the productStore that the orders should be related to.
            prodCatalogId is the productCatalog that the orders should be related to (optional).
            importEmptyOrders controls whether orderHeaders
                with no corresponding orderItems should be imported or ignored.
            calculateGrandTotal controls whether the grand total for the order should be taken from the DataImportOrderHeader.grandTotal
                field or calculated from orderItems and orderAdjustments
        .
 * Auto generated base service entity importOrders.
 *
 * Engine: java
 * Location: org.opentaps.dataimport.OrderImportServices
 * Invoke: importOrders
 * Defined in: hot-deploy/dataimport/servicedef/services.xml
 */
public class ImportOrdersService extends ServiceWrapper {

    /** The service name as used by the service engine. */
    public static final String NAME = "importOrders";
    /** If the service requires authentication. */
    public static final Boolean REQUIRES_AUTHENTICATION = Boolean.FALSE;
    /** If the service requires a new transaction. */
    public static final Boolean REQUIRES_NEW_TRANSACTION = Boolean.FALSE;
    /** If the service uses a transaction. */
    public static final Boolean USES_TRANSACTION = Boolean.FALSE;

    /** The enumeration of input parameters. */
    public static enum In {
        calculateGrandTotal("calculateGrandTotal"),
        companyPartyId("companyPartyId"),
        importEmptyOrders("importEmptyOrders"),
        locale("locale"),
        prodCatalogId("prodCatalogId"),
        productStoreId("productStoreId"),
        purchaseOrderShipToContactMechId("purchaseOrderShipToContactMechId"),
        reserveInventory("reserveInventory"),
        timeZone("timeZone"),
        userLogin("userLogin");
        private final String _fieldName;
        private In(String name) { this._fieldName = name; }
        public String getName() { return this._fieldName; }
    }

    public static enum Out {
        errorMessage("errorMessage"),
        errorMessageList("errorMessageList"),
        locale("locale"),
        ordersImported("ordersImported"),
        responseMessage("responseMessage"),
        successMessage("successMessage"),
        successMessageList("successMessageList"),
        timeZone("timeZone"),
        userLogin("userLogin");
        private final String _fieldName;
        private Out(String name) { this._fieldName = name; }
        public String getName() { return this._fieldName; }
    }

    /**
     * Creates a new <code>ImportOrdersService</code> instance.
     */
    public ImportOrdersService() {
        super();
    }


    private Boolean inCalculateGrandTotal;
    private String inCompanyPartyId;
    private Boolean inImportEmptyOrders;
    private Locale inLocale;
    private String inProdCatalogId;
    private String inProductStoreId;
    private String inPurchaseOrderShipToContactMechId;
    private Boolean inReserveInventory;
    private TimeZone inTimeZone;
    private GenericValue inUserLogin;
    private String outErrorMessage;
    private List outErrorMessageList;
    private Locale outLocale;
    private Integer outOrdersImported;
    private String outResponseMessage;
    private String outSuccessMessage;
    private List outSuccessMessageList;
    private TimeZone outTimeZone;
    private GenericValue outUserLogin;

    private Set<String> inParameters = FastSet.newInstance();
    private Set<String> outParameters = FastSet.newInstance();

    /**
     * Auto generated value accessor.
     * This parameter is required.
     * @return <code>Boolean</code>
     */
    public Boolean getInCalculateGrandTotal() {
        return this.inCalculateGrandTotal;
    }
    /**
     * Auto generated value accessor.
     * This parameter is required.
     * @return <code>String</code>
     */
    public String getInCompanyPartyId() {
        return this.inCompanyPartyId;
    }
    /**
     * Auto generated value accessor.
     * This parameter is required.
     * @return <code>Boolean</code>
     */
    public Boolean getInImportEmptyOrders() {
        return this.inImportEmptyOrders;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>Locale</code>
     */
    public Locale getInLocale() {
        return this.inLocale;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInProdCatalogId() {
        return this.inProdCatalogId;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInProductStoreId() {
        return this.inProductStoreId;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInPurchaseOrderShipToContactMechId() {
        return this.inPurchaseOrderShipToContactMechId;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>Boolean</code>
     */
    public Boolean getInReserveInventory() {
        return this.inReserveInventory;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>TimeZone</code>
     */
    public TimeZone getInTimeZone() {
        return this.inTimeZone;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>GenericValue</code>
     */
    public GenericValue getInUserLogin() {
        return this.inUserLogin;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getOutErrorMessage() {
        return this.outErrorMessage;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>List</code>
     */
    public List getOutErrorMessageList() {
        return this.outErrorMessageList;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>Locale</code>
     */
    public Locale getOutLocale() {
        return this.outLocale;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>Integer</code>
     */
    public Integer getOutOrdersImported() {
        return this.outOrdersImported;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getOutResponseMessage() {
        return this.outResponseMessage;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getOutSuccessMessage() {
        return this.outSuccessMessage;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>List</code>
     */
    public List getOutSuccessMessageList() {
        return this.outSuccessMessageList;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>TimeZone</code>
     */
    public TimeZone getOutTimeZone() {
        return this.outTimeZone;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>GenericValue</code>
     */
    public GenericValue getOutUserLogin() {
        return this.outUserLogin;
    }

    /**
     * Auto generated value setter.
     * This parameter is required.
     * @param inCalculateGrandTotal the inCalculateGrandTotal to set
    */
    public void setInCalculateGrandTotal(Boolean inCalculateGrandTotal) {
        this.inParameters.add("calculateGrandTotal");
        this.inCalculateGrandTotal = inCalculateGrandTotal;
    }
    /**
     * Auto generated value setter.
     * This parameter is required.
     * @param inCompanyPartyId the inCompanyPartyId to set
    */
    public void setInCompanyPartyId(String inCompanyPartyId) {
        this.inParameters.add("companyPartyId");
        this.inCompanyPartyId = inCompanyPartyId;
    }
    /**
     * Auto generated value setter.
     * This parameter is required.
     * @param inImportEmptyOrders the inImportEmptyOrders to set
    */
    public void setInImportEmptyOrders(Boolean inImportEmptyOrders) {
        this.inParameters.add("importEmptyOrders");
        this.inImportEmptyOrders = inImportEmptyOrders;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inLocale the inLocale to set
    */
    public void setInLocale(Locale inLocale) {
        this.inParameters.add("locale");
        this.inLocale = inLocale;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inProdCatalogId the inProdCatalogId to set
    */
    public void setInProdCatalogId(String inProdCatalogId) {
        this.inParameters.add("prodCatalogId");
        this.inProdCatalogId = inProdCatalogId;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inProductStoreId the inProductStoreId to set
    */
    public void setInProductStoreId(String inProductStoreId) {
        this.inParameters.add("productStoreId");
        this.inProductStoreId = inProductStoreId;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inPurchaseOrderShipToContactMechId the inPurchaseOrderShipToContactMechId to set
    */
    public void setInPurchaseOrderShipToContactMechId(String inPurchaseOrderShipToContactMechId) {
        this.inParameters.add("purchaseOrderShipToContactMechId");
        this.inPurchaseOrderShipToContactMechId = inPurchaseOrderShipToContactMechId;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inReserveInventory the inReserveInventory to set
    */
    public void setInReserveInventory(Boolean inReserveInventory) {
        this.inParameters.add("reserveInventory");
        this.inReserveInventory = inReserveInventory;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inTimeZone the inTimeZone to set
    */
    public void setInTimeZone(TimeZone inTimeZone) {
        this.inParameters.add("timeZone");
        this.inTimeZone = inTimeZone;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inUserLogin the inUserLogin to set
    */
    public void setInUserLogin(GenericValue inUserLogin) {
        this.inParameters.add("userLogin");
        this.inUserLogin = inUserLogin;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param outErrorMessage the outErrorMessage to set
    */
    public void setOutErrorMessage(String outErrorMessage) {
        this.outParameters.add("errorMessage");
        this.outErrorMessage = outErrorMessage;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param outErrorMessageList the outErrorMessageList to set
    */
    public void setOutErrorMessageList(List outErrorMessageList) {
        this.outParameters.add("errorMessageList");
        this.outErrorMessageList = outErrorMessageList;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param outLocale the outLocale to set
    */
    public void setOutLocale(Locale outLocale) {
        this.outParameters.add("locale");
        this.outLocale = outLocale;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param outOrdersImported the outOrdersImported to set
    */
    public void setOutOrdersImported(Integer outOrdersImported) {
        this.outParameters.add("ordersImported");
        this.outOrdersImported = outOrdersImported;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param outResponseMessage the outResponseMessage to set
    */
    public void setOutResponseMessage(String outResponseMessage) {
        this.outParameters.add("responseMessage");
        this.outResponseMessage = outResponseMessage;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param outSuccessMessage the outSuccessMessage to set
    */
    public void setOutSuccessMessage(String outSuccessMessage) {
        this.outParameters.add("successMessage");
        this.outSuccessMessage = outSuccessMessage;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param outSuccessMessageList the outSuccessMessageList to set
    */
    public void setOutSuccessMessageList(List outSuccessMessageList) {
        this.outParameters.add("successMessageList");
        this.outSuccessMessageList = outSuccessMessageList;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param outTimeZone the outTimeZone to set
    */
    public void setOutTimeZone(TimeZone outTimeZone) {
        this.outParameters.add("timeZone");
        this.outTimeZone = outTimeZone;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param outUserLogin the outUserLogin to set
    */
    public void setOutUserLogin(GenericValue outUserLogin) {
        this.outParameters.add("userLogin");
        this.outUserLogin = outUserLogin;
    }

    /** {@inheritDoc} */
    public String name() {
        return NAME;
    }

    /** {@inheritDoc} */
    public Boolean requiresAuthentication() {
        return REQUIRES_AUTHENTICATION;
    }

    /** {@inheritDoc} */
    public Boolean requiresNewTransaction() {
        return REQUIRES_NEW_TRANSACTION;
    }

    /** {@inheritDoc} */
    public Boolean usesTransaction() {
        return USES_TRANSACTION;
    }

    /** {@inheritDoc} */
    public Map<String, Object> inputMap() {
        Map<String, Object> mapValue = new FastMap<String, Object>();
        if (inParameters.contains("calculateGrandTotal")) mapValue.put("calculateGrandTotal", getInCalculateGrandTotal());
        if (inParameters.contains("companyPartyId")) mapValue.put("companyPartyId", getInCompanyPartyId());
        if (inParameters.contains("importEmptyOrders")) mapValue.put("importEmptyOrders", getInImportEmptyOrders());
        if (inParameters.contains("locale")) mapValue.put("locale", getInLocale());
        if (inParameters.contains("prodCatalogId")) mapValue.put("prodCatalogId", getInProdCatalogId());
        if (inParameters.contains("productStoreId")) mapValue.put("productStoreId", getInProductStoreId());
        if (inParameters.contains("purchaseOrderShipToContactMechId")) mapValue.put("purchaseOrderShipToContactMechId", getInPurchaseOrderShipToContactMechId());
        if (inParameters.contains("reserveInventory")) mapValue.put("reserveInventory", getInReserveInventory());
        if (inParameters.contains("timeZone")) mapValue.put("timeZone", getInTimeZone());
        if (inParameters.contains("userLogin")) mapValue.put("userLogin", getInUserLogin());
        // allow the User set to override the userLogin
        if (getUser() != null) mapValue.put("userLogin", getUser().getOfbizUserLogin());
        return mapValue;
    }

    /** {@inheritDoc} */
    public Map<String, Object> outputMap() {
        Map<String, Object> mapValue = new FastMap<String, Object>();
        if (outParameters.contains("errorMessage")) mapValue.put("errorMessage", getOutErrorMessage());
        if (outParameters.contains("errorMessageList")) mapValue.put("errorMessageList", getOutErrorMessageList());
        if (outParameters.contains("locale")) mapValue.put("locale", getOutLocale());
        if (outParameters.contains("ordersImported")) mapValue.put("ordersImported", getOutOrdersImported());
        if (outParameters.contains("responseMessage")) mapValue.put("responseMessage", getOutResponseMessage());
        if (outParameters.contains("successMessage")) mapValue.put("successMessage", getOutSuccessMessage());
        if (outParameters.contains("successMessageList")) mapValue.put("successMessageList", getOutSuccessMessageList());
        if (outParameters.contains("timeZone")) mapValue.put("timeZone", getOutTimeZone());
        if (outParameters.contains("userLogin")) mapValue.put("userLogin", getOutUserLogin());
        return mapValue;
    }

    /** {@inheritDoc} */
    public void putAllInput(Map<String, Object> mapValue) {
        if (mapValue.containsKey("calculateGrandTotal")) setInCalculateGrandTotal((Boolean) mapValue.get("calculateGrandTotal"));
        if (mapValue.containsKey("companyPartyId")) setInCompanyPartyId((String) mapValue.get("companyPartyId"));
        if (mapValue.containsKey("importEmptyOrders")) setInImportEmptyOrders((Boolean) mapValue.get("importEmptyOrders"));
        if (mapValue.containsKey("locale")) setInLocale((Locale) mapValue.get("locale"));
        if (mapValue.containsKey("prodCatalogId")) setInProdCatalogId((String) mapValue.get("prodCatalogId"));
        if (mapValue.containsKey("productStoreId")) setInProductStoreId((String) mapValue.get("productStoreId"));
        if (mapValue.containsKey("purchaseOrderShipToContactMechId")) setInPurchaseOrderShipToContactMechId((String) mapValue.get("purchaseOrderShipToContactMechId"));
        if (mapValue.containsKey("reserveInventory")) setInReserveInventory((Boolean) mapValue.get("reserveInventory"));
        if (mapValue.containsKey("timeZone")) setInTimeZone((TimeZone) mapValue.get("timeZone"));
        if (mapValue.containsKey("userLogin")) setInUserLogin((GenericValue) mapValue.get("userLogin"));
    }

    /** {@inheritDoc} */
    public void putAllOutput(Map<String, Object> mapValue) {
        if (mapValue.containsKey("errorMessage")) setOutErrorMessage((String) mapValue.get("errorMessage"));
        if (mapValue.containsKey("errorMessageList")) setOutErrorMessageList((List) mapValue.get("errorMessageList"));
        if (mapValue.containsKey("locale")) setOutLocale((Locale) mapValue.get("locale"));
        if (mapValue.containsKey("ordersImported")) setOutOrdersImported((Integer) mapValue.get("ordersImported"));
        if (mapValue.containsKey("responseMessage")) setOutResponseMessage((String) mapValue.get("responseMessage"));
        if (mapValue.containsKey("successMessage")) setOutSuccessMessage((String) mapValue.get("successMessage"));
        if (mapValue.containsKey("successMessageList")) setOutSuccessMessageList((List) mapValue.get("successMessageList"));
        if (mapValue.containsKey("timeZone")) setOutTimeZone((TimeZone) mapValue.get("timeZone"));
        if (mapValue.containsKey("userLogin")) setOutUserLogin((GenericValue) mapValue.get("userLogin"));
    }

    /**
     * Construct a <code>ImportOrdersService</code> from the input values of the given <code>ImportOrdersService</code>.
     * @param input a <code>ImportOrdersService</code>
     */
    public static ImportOrdersService fromInput(ImportOrdersService input) {
        ImportOrdersService service = new ImportOrdersService();
        return fromInput(input.inputMap());
    }

    /**
     * Construct a <code>ImportOrdersService</code> from the output values of the given <code>ImportOrdersService</code>.
     * @param output a <code>ImportOrdersService</code>
     */
    public static ImportOrdersService fromOutput(ImportOrdersService output) {
        ImportOrdersService service = new ImportOrdersService();
        service.putAllOutput(output.outputMap());
        return service;
    }

    /**
     * Construct a <code>ImportOrdersService</code> from the given input <code>Map</code>.
     * @param mapValue the service input <code>Map</code>
     */
    public static ImportOrdersService fromInput(Map<String, Object> mapValue) {
        ImportOrdersService service = new ImportOrdersService();
        service.putAllInput(mapValue);
        if (mapValue.containsKey("userLogin")) {
            GenericValue userGv = (GenericValue) mapValue.get("userLogin");
            if (userGv != null) {
                service.setUser(new User(userGv, userGv.getDelegator()));
            }
        }
        return service;
    }

    /**
     * Construct a <code>ImportOrdersService</code> from the given output <code>Map</code>.
     * @param mapValue the service output <code>Map</code>
     */
    public static ImportOrdersService fromOutput(Map<String, Object> mapValue) {
        ImportOrdersService service = new ImportOrdersService();
        service.putAllOutput(mapValue);
        return service;
    }
}
