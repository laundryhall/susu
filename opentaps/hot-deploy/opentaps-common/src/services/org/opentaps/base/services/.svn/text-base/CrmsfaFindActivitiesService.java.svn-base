package org.opentaps.base.services;

/*
 * Copyright (c) Open Source Strategies, Inc.
 *
 * Opentaps is free software: you can redistribute it and/or modify it
 * under the terms of the GNU Affero General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Opentaps is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with Opentaps.  If not, see <http://www.gnu.org/licenses/>.
 */

// DO NOT EDIT THIS FILE!  THIS IS AUTO GENERATED AND WILL GET WRITTEN OVER PERIODICALLY WHEN THE SERVICE MODEL CHANGES
// EXTEND THIS CLASS INSTEAD.

import org.opentaps.foundation.service.ServiceWrapper;

import java.util.List;
import java.util.Locale;
import java.util.Map;
import java.util.Set;
import java.util.TimeZone;
import javolution.util.FastMap;
import javolution.util.FastSet;
import org.ofbiz.entity.GenericValue;
import org.opentaps.foundation.infrastructure.User;

/**
 * Finds activities based on parameters IN THIS ORDER: if partyId is provided, finds activities related to the party.  If salesOpportunityId is
            provided, finds activities for that opportunity.  If custRequestId is input, finds activities of that customer request.
            If none of the above is provided, returns an error.  Returns two Lists: completed and pending (not completed) activities, ordered by
            their respective _orderByFields.
        The _AddConditions are used to parametrize additional conditions for pending and completed activities finds.
        .
 * Auto generated base service entity crmsfa.findActivities.
 *
 * Engine: java
 * Location: com.opensourcestrategies.crmsfa.activities.ActivitiesServices
 * Invoke: findActivities
 * Defined in: hot-deploy/crmsfa/servicedef/services_activities.xml
 */
public class CrmsfaFindActivitiesService extends ServiceWrapper {

    /** The service name as used by the service engine. */
    public static final String NAME = "crmsfa.findActivities";
    /** If the service requires authentication. */
    public static final Boolean REQUIRES_AUTHENTICATION = Boolean.FALSE;
    /** If the service requires a new transaction. */
    public static final Boolean REQUIRES_NEW_TRANSACTION = Boolean.FALSE;
    /** If the service uses a transaction. */
    public static final Boolean USES_TRANSACTION = Boolean.TRUE;

    /** The enumeration of input parameters. */
    public static enum In {
        completedActsAddConditions("completedActsAddConditions"),
        completedOrderByFields("completedOrderByFields"),
        custRequestId("custRequestId"),
        locale("locale"),
        partyId("partyId"),
        pendingActsAddConditions("pendingActsAddConditions"),
        pendingOrderByFields("pendingOrderByFields"),
        salesOpportunityId("salesOpportunityId"),
        timeZone("timeZone"),
        userLogin("userLogin");
        private final String _fieldName;
        private In(String name) { this._fieldName = name; }
        public String getName() { return this._fieldName; }
    }

    public static enum Out {
        completedActivities("completedActivities"),
        errorMessage("errorMessage"),
        errorMessageList("errorMessageList"),
        locale("locale"),
        pendingActivities("pendingActivities"),
        responseMessage("responseMessage"),
        successMessage("successMessage"),
        successMessageList("successMessageList"),
        timeZone("timeZone"),
        userLogin("userLogin");
        private final String _fieldName;
        private Out(String name) { this._fieldName = name; }
        public String getName() { return this._fieldName; }
    }

    /**
     * Creates a new <code>CrmsfaFindActivitiesService</code> instance.
     */
    public CrmsfaFindActivitiesService() {
        super();
    }


    private List inCompletedActsAddConditions;
    private List inCompletedOrderByFields;
    private String inCustRequestId;
    private Locale inLocale;
    private String inPartyId;
    private List inPendingActsAddConditions;
    private List inPendingOrderByFields;
    private String inSalesOpportunityId;
    private TimeZone inTimeZone;
    private GenericValue inUserLogin;
    private List outCompletedActivities;
    private String outErrorMessage;
    private List outErrorMessageList;
    private Locale outLocale;
    private List outPendingActivities;
    private String outResponseMessage;
    private String outSuccessMessage;
    private List outSuccessMessageList;
    private TimeZone outTimeZone;
    private GenericValue outUserLogin;

    private Set<String> inParameters = FastSet.newInstance();
    private Set<String> outParameters = FastSet.newInstance();

    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>List</code>
     */
    public List getInCompletedActsAddConditions() {
        return this.inCompletedActsAddConditions;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>List</code>
     */
    public List getInCompletedOrderByFields() {
        return this.inCompletedOrderByFields;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInCustRequestId() {
        return this.inCustRequestId;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>Locale</code>
     */
    public Locale getInLocale() {
        return this.inLocale;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInPartyId() {
        return this.inPartyId;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>List</code>
     */
    public List getInPendingActsAddConditions() {
        return this.inPendingActsAddConditions;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>List</code>
     */
    public List getInPendingOrderByFields() {
        return this.inPendingOrderByFields;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInSalesOpportunityId() {
        return this.inSalesOpportunityId;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>TimeZone</code>
     */
    public TimeZone getInTimeZone() {
        return this.inTimeZone;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>GenericValue</code>
     */
    public GenericValue getInUserLogin() {
        return this.inUserLogin;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>List</code>
     */
    public List getOutCompletedActivities() {
        return this.outCompletedActivities;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getOutErrorMessage() {
        return this.outErrorMessage;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>List</code>
     */
    public List getOutErrorMessageList() {
        return this.outErrorMessageList;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>Locale</code>
     */
    public Locale getOutLocale() {
        return this.outLocale;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>List</code>
     */
    public List getOutPendingActivities() {
        return this.outPendingActivities;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getOutResponseMessage() {
        return this.outResponseMessage;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getOutSuccessMessage() {
        return this.outSuccessMessage;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>List</code>
     */
    public List getOutSuccessMessageList() {
        return this.outSuccessMessageList;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>TimeZone</code>
     */
    public TimeZone getOutTimeZone() {
        return this.outTimeZone;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>GenericValue</code>
     */
    public GenericValue getOutUserLogin() {
        return this.outUserLogin;
    }

    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inCompletedActsAddConditions the inCompletedActsAddConditions to set
    */
    public void setInCompletedActsAddConditions(List inCompletedActsAddConditions) {
        this.inParameters.add("completedActsAddConditions");
        this.inCompletedActsAddConditions = inCompletedActsAddConditions;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inCompletedOrderByFields the inCompletedOrderByFields to set
    */
    public void setInCompletedOrderByFields(List inCompletedOrderByFields) {
        this.inParameters.add("completedOrderByFields");
        this.inCompletedOrderByFields = inCompletedOrderByFields;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inCustRequestId the inCustRequestId to set
    */
    public void setInCustRequestId(String inCustRequestId) {
        this.inParameters.add("custRequestId");
        this.inCustRequestId = inCustRequestId;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inLocale the inLocale to set
    */
    public void setInLocale(Locale inLocale) {
        this.inParameters.add("locale");
        this.inLocale = inLocale;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inPartyId the inPartyId to set
    */
    public void setInPartyId(String inPartyId) {
        this.inParameters.add("partyId");
        this.inPartyId = inPartyId;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inPendingActsAddConditions the inPendingActsAddConditions to set
    */
    public void setInPendingActsAddConditions(List inPendingActsAddConditions) {
        this.inParameters.add("pendingActsAddConditions");
        this.inPendingActsAddConditions = inPendingActsAddConditions;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inPendingOrderByFields the inPendingOrderByFields to set
    */
    public void setInPendingOrderByFields(List inPendingOrderByFields) {
        this.inParameters.add("pendingOrderByFields");
        this.inPendingOrderByFields = inPendingOrderByFields;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inSalesOpportunityId the inSalesOpportunityId to set
    */
    public void setInSalesOpportunityId(String inSalesOpportunityId) {
        this.inParameters.add("salesOpportunityId");
        this.inSalesOpportunityId = inSalesOpportunityId;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inTimeZone the inTimeZone to set
    */
    public void setInTimeZone(TimeZone inTimeZone) {
        this.inParameters.add("timeZone");
        this.inTimeZone = inTimeZone;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inUserLogin the inUserLogin to set
    */
    public void setInUserLogin(GenericValue inUserLogin) {
        this.inParameters.add("userLogin");
        this.inUserLogin = inUserLogin;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param outCompletedActivities the outCompletedActivities to set
    */
    public void setOutCompletedActivities(List outCompletedActivities) {
        this.outParameters.add("completedActivities");
        this.outCompletedActivities = outCompletedActivities;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param outErrorMessage the outErrorMessage to set
    */
    public void setOutErrorMessage(String outErrorMessage) {
        this.outParameters.add("errorMessage");
        this.outErrorMessage = outErrorMessage;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param outErrorMessageList the outErrorMessageList to set
    */
    public void setOutErrorMessageList(List outErrorMessageList) {
        this.outParameters.add("errorMessageList");
        this.outErrorMessageList = outErrorMessageList;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param outLocale the outLocale to set
    */
    public void setOutLocale(Locale outLocale) {
        this.outParameters.add("locale");
        this.outLocale = outLocale;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param outPendingActivities the outPendingActivities to set
    */
    public void setOutPendingActivities(List outPendingActivities) {
        this.outParameters.add("pendingActivities");
        this.outPendingActivities = outPendingActivities;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param outResponseMessage the outResponseMessage to set
    */
    public void setOutResponseMessage(String outResponseMessage) {
        this.outParameters.add("responseMessage");
        this.outResponseMessage = outResponseMessage;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param outSuccessMessage the outSuccessMessage to set
    */
    public void setOutSuccessMessage(String outSuccessMessage) {
        this.outParameters.add("successMessage");
        this.outSuccessMessage = outSuccessMessage;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param outSuccessMessageList the outSuccessMessageList to set
    */
    public void setOutSuccessMessageList(List outSuccessMessageList) {
        this.outParameters.add("successMessageList");
        this.outSuccessMessageList = outSuccessMessageList;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param outTimeZone the outTimeZone to set
    */
    public void setOutTimeZone(TimeZone outTimeZone) {
        this.outParameters.add("timeZone");
        this.outTimeZone = outTimeZone;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param outUserLogin the outUserLogin to set
    */
    public void setOutUserLogin(GenericValue outUserLogin) {
        this.outParameters.add("userLogin");
        this.outUserLogin = outUserLogin;
    }

    /** {@inheritDoc} */
    public String name() {
        return NAME;
    }

    /** {@inheritDoc} */
    public Boolean requiresAuthentication() {
        return REQUIRES_AUTHENTICATION;
    }

    /** {@inheritDoc} */
    public Boolean requiresNewTransaction() {
        return REQUIRES_NEW_TRANSACTION;
    }

    /** {@inheritDoc} */
    public Boolean usesTransaction() {
        return USES_TRANSACTION;
    }

    /** {@inheritDoc} */
    public Map<String, Object> inputMap() {
        Map<String, Object> mapValue = new FastMap<String, Object>();
        if (inParameters.contains("completedActsAddConditions")) mapValue.put("completedActsAddConditions", getInCompletedActsAddConditions());
        if (inParameters.contains("completedOrderByFields")) mapValue.put("completedOrderByFields", getInCompletedOrderByFields());
        if (inParameters.contains("custRequestId")) mapValue.put("custRequestId", getInCustRequestId());
        if (inParameters.contains("locale")) mapValue.put("locale", getInLocale());
        if (inParameters.contains("partyId")) mapValue.put("partyId", getInPartyId());
        if (inParameters.contains("pendingActsAddConditions")) mapValue.put("pendingActsAddConditions", getInPendingActsAddConditions());
        if (inParameters.contains("pendingOrderByFields")) mapValue.put("pendingOrderByFields", getInPendingOrderByFields());
        if (inParameters.contains("salesOpportunityId")) mapValue.put("salesOpportunityId", getInSalesOpportunityId());
        if (inParameters.contains("timeZone")) mapValue.put("timeZone", getInTimeZone());
        if (inParameters.contains("userLogin")) mapValue.put("userLogin", getInUserLogin());
        // allow the User set to override the userLogin
        if (getUser() != null) mapValue.put("userLogin", getUser().getOfbizUserLogin());
        return mapValue;
    }

    /** {@inheritDoc} */
    public Map<String, Object> outputMap() {
        Map<String, Object> mapValue = new FastMap<String, Object>();
        if (outParameters.contains("completedActivities")) mapValue.put("completedActivities", getOutCompletedActivities());
        if (outParameters.contains("errorMessage")) mapValue.put("errorMessage", getOutErrorMessage());
        if (outParameters.contains("errorMessageList")) mapValue.put("errorMessageList", getOutErrorMessageList());
        if (outParameters.contains("locale")) mapValue.put("locale", getOutLocale());
        if (outParameters.contains("pendingActivities")) mapValue.put("pendingActivities", getOutPendingActivities());
        if (outParameters.contains("responseMessage")) mapValue.put("responseMessage", getOutResponseMessage());
        if (outParameters.contains("successMessage")) mapValue.put("successMessage", getOutSuccessMessage());
        if (outParameters.contains("successMessageList")) mapValue.put("successMessageList", getOutSuccessMessageList());
        if (outParameters.contains("timeZone")) mapValue.put("timeZone", getOutTimeZone());
        if (outParameters.contains("userLogin")) mapValue.put("userLogin", getOutUserLogin());
        return mapValue;
    }

    /** {@inheritDoc} */
    public void putAllInput(Map<String, Object> mapValue) {
        if (mapValue.containsKey("completedActsAddConditions")) setInCompletedActsAddConditions((List) mapValue.get("completedActsAddConditions"));
        if (mapValue.containsKey("completedOrderByFields")) setInCompletedOrderByFields((List) mapValue.get("completedOrderByFields"));
        if (mapValue.containsKey("custRequestId")) setInCustRequestId((String) mapValue.get("custRequestId"));
        if (mapValue.containsKey("locale")) setInLocale((Locale) mapValue.get("locale"));
        if (mapValue.containsKey("partyId")) setInPartyId((String) mapValue.get("partyId"));
        if (mapValue.containsKey("pendingActsAddConditions")) setInPendingActsAddConditions((List) mapValue.get("pendingActsAddConditions"));
        if (mapValue.containsKey("pendingOrderByFields")) setInPendingOrderByFields((List) mapValue.get("pendingOrderByFields"));
        if (mapValue.containsKey("salesOpportunityId")) setInSalesOpportunityId((String) mapValue.get("salesOpportunityId"));
        if (mapValue.containsKey("timeZone")) setInTimeZone((TimeZone) mapValue.get("timeZone"));
        if (mapValue.containsKey("userLogin")) setInUserLogin((GenericValue) mapValue.get("userLogin"));
    }

    /** {@inheritDoc} */
    public void putAllOutput(Map<String, Object> mapValue) {
        if (mapValue.containsKey("completedActivities")) setOutCompletedActivities((List) mapValue.get("completedActivities"));
        if (mapValue.containsKey("errorMessage")) setOutErrorMessage((String) mapValue.get("errorMessage"));
        if (mapValue.containsKey("errorMessageList")) setOutErrorMessageList((List) mapValue.get("errorMessageList"));
        if (mapValue.containsKey("locale")) setOutLocale((Locale) mapValue.get("locale"));
        if (mapValue.containsKey("pendingActivities")) setOutPendingActivities((List) mapValue.get("pendingActivities"));
        if (mapValue.containsKey("responseMessage")) setOutResponseMessage((String) mapValue.get("responseMessage"));
        if (mapValue.containsKey("successMessage")) setOutSuccessMessage((String) mapValue.get("successMessage"));
        if (mapValue.containsKey("successMessageList")) setOutSuccessMessageList((List) mapValue.get("successMessageList"));
        if (mapValue.containsKey("timeZone")) setOutTimeZone((TimeZone) mapValue.get("timeZone"));
        if (mapValue.containsKey("userLogin")) setOutUserLogin((GenericValue) mapValue.get("userLogin"));
    }

    /**
     * Construct a <code>CrmsfaFindActivitiesService</code> from the input values of the given <code>CrmsfaFindActivitiesService</code>.
     * @param input a <code>CrmsfaFindActivitiesService</code>
     */
    public static CrmsfaFindActivitiesService fromInput(CrmsfaFindActivitiesService input) {
        CrmsfaFindActivitiesService service = new CrmsfaFindActivitiesService();
        return fromInput(input.inputMap());
    }

    /**
     * Construct a <code>CrmsfaFindActivitiesService</code> from the output values of the given <code>CrmsfaFindActivitiesService</code>.
     * @param output a <code>CrmsfaFindActivitiesService</code>
     */
    public static CrmsfaFindActivitiesService fromOutput(CrmsfaFindActivitiesService output) {
        CrmsfaFindActivitiesService service = new CrmsfaFindActivitiesService();
        service.putAllOutput(output.outputMap());
        return service;
    }

    /**
     * Construct a <code>CrmsfaFindActivitiesService</code> from the given input <code>Map</code>.
     * @param mapValue the service input <code>Map</code>
     */
    public static CrmsfaFindActivitiesService fromInput(Map<String, Object> mapValue) {
        CrmsfaFindActivitiesService service = new CrmsfaFindActivitiesService();
        service.putAllInput(mapValue);
        if (mapValue.containsKey("userLogin")) {
            GenericValue userGv = (GenericValue) mapValue.get("userLogin");
            if (userGv != null) {
                service.setUser(new User(userGv, userGv.getDelegator()));
            }
        }
        return service;
    }

    /**
     * Construct a <code>CrmsfaFindActivitiesService</code> from the given output <code>Map</code>.
     * @param mapValue the service output <code>Map</code>
     */
    public static CrmsfaFindActivitiesService fromOutput(Map<String, Object> mapValue) {
        CrmsfaFindActivitiesService service = new CrmsfaFindActivitiesService();
        service.putAllOutput(mapValue);
        return service;
    }
}
