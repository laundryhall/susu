package org.opentaps.base.services;

/*
 * Copyright (c) Open Source Strategies, Inc.
 *
 * Opentaps is free software: you can redistribute it and/or modify it
 * under the terms of the GNU Affero General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Opentaps is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with Opentaps.  If not, see <http://www.gnu.org/licenses/>.
 */

// DO NOT EDIT THIS FILE!  THIS IS AUTO GENERATED AND WILL GET WRITTEN OVER PERIODICALLY WHEN THE SERVICE MODEL CHANGES
// EXTEND THIS CLASS INSTEAD.

import org.opentaps.foundation.service.ServiceWrapper;

import java.nio.ByteBuffer;
import java.sql.Timestamp;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import java.util.Set;
import java.util.TimeZone;
import javolution.util.FastMap;
import javolution.util.FastSet;
import org.ofbiz.entity.GenericValue;
import org.opentaps.foundation.infrastructure.User;

/**
 * Upload and attach a file to a party.
 * Auto generated base service entity uploadPartyContentFile.
 *
 * Engine: group
 * Location: 
 * Invoke: _uploadPartyContentFile.group
 * Defined in: applications/party/servicedef/services.xml
 */
public class UploadPartyContentFileService extends ServiceWrapper {

    /** The service name as used by the service engine. */
    public static final String NAME = "uploadPartyContentFile";
    /** If the service requires authentication. */
    public static final Boolean REQUIRES_AUTHENTICATION = Boolean.FALSE;
    /** If the service requires a new transaction. */
    public static final Boolean REQUIRES_NEW_TRANSACTION = Boolean.FALSE;
    /** If the service uses a transaction. */
    public static final Boolean USES_TRANSACTION = Boolean.TRUE;

    /** The enumeration of input parameters. */
    public static enum In {
        uploadedFileContentType("_uploadedFile_contentType"),
        uploadedFileFileName("_uploadedFile_fileName"),
        characterSetId("characterSetId"),
        childBranchCount("childBranchCount"),
        childLeafCount("childLeafCount"),
        classificationEnumId("classificationEnumId"),
        contentAssocTypeId("contentAssocTypeId"),
        contentId("contentId"),
        contentIdFrom("contentIdFrom"),
        contentIdTo("contentIdTo"),
        contentName("contentName"),
        contentPurposeEnumId("contentPurposeEnumId"),
        contentPurposeList("contentPurposeList"),
        contentPurposeString("contentPurposeString"),
        contentPurposeTypeId("contentPurposeTypeId"),
        contentTypeId("contentTypeId"),
        createdByUserLogin("createdByUserLogin"),
        createdDate("createdDate"),
        dataCategoryId("dataCategoryId"),
        dataResourceId("dataResourceId"),
        dataResourceName("dataResourceName"),
        dataResourceTypeId("dataResourceTypeId"),
        dataSourceId("dataSourceId"),
        dataTemplateTypeId("dataTemplateTypeId"),
        decoratorContentId("decoratorContentId"),
        description("description"),
        displayFailCond("displayFailCond"),
        fromDate("fromDate"),
        instanceOfContentId("instanceOfContentId"),
        isPublic("isPublic"),
        lastModifiedByUserLogin("lastModifiedByUserLogin"),
        lastModifiedDate("lastModifiedDate"),
        locale("locale"),
        localeString("localeString"),
        mapKey("mapKey"),
        mimeTypeId("mimeTypeId"),
        objectInfo("objectInfo"),
        ownerContentId("ownerContentId"),
        partyContentTypeId("partyContentTypeId"),
        partyId("partyId"),
        privilegeEnumId("privilegeEnumId"),
        relatedDetailId("relatedDetailId"),
        roleTypeId("roleTypeId"),
        roleTypeList("roleTypeList"),
        serviceName("serviceName"),
        skipPermissionCheck("skipPermissionCheck"),
        statusId("statusId"),
        surveyId("surveyId"),
        surveyResponseId("surveyResponseId"),
        targetOperationList("targetOperationList"),
        targetOperationString("targetOperationString"),
        templateDataResourceId("templateDataResourceId"),
        thruDate("thruDate"),
        timeZone("timeZone"),
        uploadedFile("uploadedFile"),
        userLogin("userLogin");
        private final String _fieldName;
        private In(String name) { this._fieldName = name; }
        public String getName() { return this._fieldName; }
    }

    public static enum Out {
        contentId("contentId"),
        dataResource("dataResource"),
        dataResourceId("dataResourceId"),
        errorMessage("errorMessage"),
        errorMessageList("errorMessageList"),
        locale("locale"),
        mimeTypeId("mimeTypeId"),
        responseMessage("responseMessage"),
        roleTypeList("roleTypeList"),
        successMessage("successMessage"),
        successMessageList("successMessageList"),
        timeZone("timeZone"),
        userLogin("userLogin");
        private final String _fieldName;
        private Out(String name) { this._fieldName = name; }
        public String getName() { return this._fieldName; }
    }

    /**
     * Creates a new <code>UploadPartyContentFileService</code> instance.
     */
    public UploadPartyContentFileService() {
        super();
    }


    private String inUploadedFileContentType;
    private String inUploadedFileFileName;
    private String inCharacterSetId;
    private Long inChildBranchCount;
    private Long inChildLeafCount;
    private String inClassificationEnumId;
    private String inContentAssocTypeId;
    private String inContentId;
    private String inContentIdFrom;
    private String inContentIdTo;
    private String inContentName;
    private String inContentPurposeEnumId;
    private List inContentPurposeList;
    private String inContentPurposeString;
    private String inContentPurposeTypeId;
    private String inContentTypeId;
    private String inCreatedByUserLogin;
    private Timestamp inCreatedDate;
    private String inDataCategoryId;
    private String inDataResourceId;
    private String inDataResourceName;
    private String inDataResourceTypeId;
    private String inDataSourceId;
    private String inDataTemplateTypeId;
    private String inDecoratorContentId;
    private String inDescription;
    private Boolean inDisplayFailCond;
    private Timestamp inFromDate;
    private String inInstanceOfContentId;
    private String inIsPublic;
    private String inLastModifiedByUserLogin;
    private Timestamp inLastModifiedDate;
    private Locale inLocale;
    private String inLocaleString;
    private String inMapKey;
    private String inMimeTypeId;
    private String inObjectInfo;
    private String inOwnerContentId;
    private String inPartyContentTypeId;
    private String inPartyId;
    private String inPrivilegeEnumId;
    private String inRelatedDetailId;
    private String inRoleTypeId;
    private List inRoleTypeList;
    private String inServiceName;
    private String inSkipPermissionCheck;
    private String inStatusId;
    private String inSurveyId;
    private String inSurveyResponseId;
    private List inTargetOperationList;
    private String inTargetOperationString;
    private String inTemplateDataResourceId;
    private Timestamp inThruDate;
    private TimeZone inTimeZone;
    private ByteBuffer inUploadedFile;
    private GenericValue inUserLogin;
    private String outContentId;
    private GenericValue outDataResource;
    private String outDataResourceId;
    private String outErrorMessage;
    private List outErrorMessageList;
    private Locale outLocale;
    private String outMimeTypeId;
    private String outResponseMessage;
    private List outRoleTypeList;
    private String outSuccessMessage;
    private List outSuccessMessageList;
    private TimeZone outTimeZone;
    private GenericValue outUserLogin;

    private Set<String> inParameters = FastSet.newInstance();
    private Set<String> outParameters = FastSet.newInstance();

    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInUploadedFileContentType() {
        return this.inUploadedFileContentType;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInUploadedFileFileName() {
        return this.inUploadedFileFileName;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInCharacterSetId() {
        return this.inCharacterSetId;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>Long</code>
     */
    public Long getInChildBranchCount() {
        return this.inChildBranchCount;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>Long</code>
     */
    public Long getInChildLeafCount() {
        return this.inChildLeafCount;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInClassificationEnumId() {
        return this.inClassificationEnumId;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInContentAssocTypeId() {
        return this.inContentAssocTypeId;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInContentId() {
        return this.inContentId;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInContentIdFrom() {
        return this.inContentIdFrom;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInContentIdTo() {
        return this.inContentIdTo;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInContentName() {
        return this.inContentName;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInContentPurposeEnumId() {
        return this.inContentPurposeEnumId;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>List</code>
     */
    public List getInContentPurposeList() {
        return this.inContentPurposeList;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInContentPurposeString() {
        return this.inContentPurposeString;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInContentPurposeTypeId() {
        return this.inContentPurposeTypeId;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInContentTypeId() {
        return this.inContentTypeId;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInCreatedByUserLogin() {
        return this.inCreatedByUserLogin;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>Timestamp</code>
     */
    public Timestamp getInCreatedDate() {
        return this.inCreatedDate;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInDataCategoryId() {
        return this.inDataCategoryId;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInDataResourceId() {
        return this.inDataResourceId;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInDataResourceName() {
        return this.inDataResourceName;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInDataResourceTypeId() {
        return this.inDataResourceTypeId;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInDataSourceId() {
        return this.inDataSourceId;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInDataTemplateTypeId() {
        return this.inDataTemplateTypeId;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInDecoratorContentId() {
        return this.inDecoratorContentId;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInDescription() {
        return this.inDescription;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>Boolean</code>
     */
    public Boolean getInDisplayFailCond() {
        return this.inDisplayFailCond;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>Timestamp</code>
     */
    public Timestamp getInFromDate() {
        return this.inFromDate;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInInstanceOfContentId() {
        return this.inInstanceOfContentId;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInIsPublic() {
        return this.inIsPublic;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInLastModifiedByUserLogin() {
        return this.inLastModifiedByUserLogin;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>Timestamp</code>
     */
    public Timestamp getInLastModifiedDate() {
        return this.inLastModifiedDate;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>Locale</code>
     */
    public Locale getInLocale() {
        return this.inLocale;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInLocaleString() {
        return this.inLocaleString;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInMapKey() {
        return this.inMapKey;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInMimeTypeId() {
        return this.inMimeTypeId;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInObjectInfo() {
        return this.inObjectInfo;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInOwnerContentId() {
        return this.inOwnerContentId;
    }
    /**
     * Auto generated value accessor.
     * This parameter is required.
     * @return <code>String</code>
     */
    public String getInPartyContentTypeId() {
        return this.inPartyContentTypeId;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInPartyId() {
        return this.inPartyId;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInPrivilegeEnumId() {
        return this.inPrivilegeEnumId;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInRelatedDetailId() {
        return this.inRelatedDetailId;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInRoleTypeId() {
        return this.inRoleTypeId;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>List</code>
     */
    public List getInRoleTypeList() {
        return this.inRoleTypeList;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInServiceName() {
        return this.inServiceName;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInSkipPermissionCheck() {
        return this.inSkipPermissionCheck;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInStatusId() {
        return this.inStatusId;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInSurveyId() {
        return this.inSurveyId;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInSurveyResponseId() {
        return this.inSurveyResponseId;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>List</code>
     */
    public List getInTargetOperationList() {
        return this.inTargetOperationList;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInTargetOperationString() {
        return this.inTargetOperationString;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInTemplateDataResourceId() {
        return this.inTemplateDataResourceId;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>Timestamp</code>
     */
    public Timestamp getInThruDate() {
        return this.inThruDate;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>TimeZone</code>
     */
    public TimeZone getInTimeZone() {
        return this.inTimeZone;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>ByteBuffer</code>
     */
    public ByteBuffer getInUploadedFile() {
        return this.inUploadedFile;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>GenericValue</code>
     */
    public GenericValue getInUserLogin() {
        return this.inUserLogin;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getOutContentId() {
        return this.outContentId;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>GenericValue</code>
     */
    public GenericValue getOutDataResource() {
        return this.outDataResource;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getOutDataResourceId() {
        return this.outDataResourceId;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getOutErrorMessage() {
        return this.outErrorMessage;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>List</code>
     */
    public List getOutErrorMessageList() {
        return this.outErrorMessageList;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>Locale</code>
     */
    public Locale getOutLocale() {
        return this.outLocale;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getOutMimeTypeId() {
        return this.outMimeTypeId;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getOutResponseMessage() {
        return this.outResponseMessage;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>List</code>
     */
    public List getOutRoleTypeList() {
        return this.outRoleTypeList;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getOutSuccessMessage() {
        return this.outSuccessMessage;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>List</code>
     */
    public List getOutSuccessMessageList() {
        return this.outSuccessMessageList;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>TimeZone</code>
     */
    public TimeZone getOutTimeZone() {
        return this.outTimeZone;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>GenericValue</code>
     */
    public GenericValue getOutUserLogin() {
        return this.outUserLogin;
    }

    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inUploadedFileContentType the inUploadedFileContentType to set
    */
    public void setInUploadedFileContentType(String inUploadedFileContentType) {
        this.inParameters.add("_uploadedFile_contentType");
        this.inUploadedFileContentType = inUploadedFileContentType;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inUploadedFileFileName the inUploadedFileFileName to set
    */
    public void setInUploadedFileFileName(String inUploadedFileFileName) {
        this.inParameters.add("_uploadedFile_fileName");
        this.inUploadedFileFileName = inUploadedFileFileName;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inCharacterSetId the inCharacterSetId to set
    */
    public void setInCharacterSetId(String inCharacterSetId) {
        this.inParameters.add("characterSetId");
        this.inCharacterSetId = inCharacterSetId;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inChildBranchCount the inChildBranchCount to set
    */
    public void setInChildBranchCount(Long inChildBranchCount) {
        this.inParameters.add("childBranchCount");
        this.inChildBranchCount = inChildBranchCount;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inChildLeafCount the inChildLeafCount to set
    */
    public void setInChildLeafCount(Long inChildLeafCount) {
        this.inParameters.add("childLeafCount");
        this.inChildLeafCount = inChildLeafCount;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inClassificationEnumId the inClassificationEnumId to set
    */
    public void setInClassificationEnumId(String inClassificationEnumId) {
        this.inParameters.add("classificationEnumId");
        this.inClassificationEnumId = inClassificationEnumId;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inContentAssocTypeId the inContentAssocTypeId to set
    */
    public void setInContentAssocTypeId(String inContentAssocTypeId) {
        this.inParameters.add("contentAssocTypeId");
        this.inContentAssocTypeId = inContentAssocTypeId;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inContentId the inContentId to set
    */
    public void setInContentId(String inContentId) {
        this.inParameters.add("contentId");
        this.inContentId = inContentId;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inContentIdFrom the inContentIdFrom to set
    */
    public void setInContentIdFrom(String inContentIdFrom) {
        this.inParameters.add("contentIdFrom");
        this.inContentIdFrom = inContentIdFrom;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inContentIdTo the inContentIdTo to set
    */
    public void setInContentIdTo(String inContentIdTo) {
        this.inParameters.add("contentIdTo");
        this.inContentIdTo = inContentIdTo;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inContentName the inContentName to set
    */
    public void setInContentName(String inContentName) {
        this.inParameters.add("contentName");
        this.inContentName = inContentName;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inContentPurposeEnumId the inContentPurposeEnumId to set
    */
    public void setInContentPurposeEnumId(String inContentPurposeEnumId) {
        this.inParameters.add("contentPurposeEnumId");
        this.inContentPurposeEnumId = inContentPurposeEnumId;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inContentPurposeList the inContentPurposeList to set
    */
    public void setInContentPurposeList(List inContentPurposeList) {
        this.inParameters.add("contentPurposeList");
        this.inContentPurposeList = inContentPurposeList;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inContentPurposeString the inContentPurposeString to set
    */
    public void setInContentPurposeString(String inContentPurposeString) {
        this.inParameters.add("contentPurposeString");
        this.inContentPurposeString = inContentPurposeString;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inContentPurposeTypeId the inContentPurposeTypeId to set
    */
    public void setInContentPurposeTypeId(String inContentPurposeTypeId) {
        this.inParameters.add("contentPurposeTypeId");
        this.inContentPurposeTypeId = inContentPurposeTypeId;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inContentTypeId the inContentTypeId to set
    */
    public void setInContentTypeId(String inContentTypeId) {
        this.inParameters.add("contentTypeId");
        this.inContentTypeId = inContentTypeId;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inCreatedByUserLogin the inCreatedByUserLogin to set
    */
    public void setInCreatedByUserLogin(String inCreatedByUserLogin) {
        this.inParameters.add("createdByUserLogin");
        this.inCreatedByUserLogin = inCreatedByUserLogin;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inCreatedDate the inCreatedDate to set
    */
    public void setInCreatedDate(Timestamp inCreatedDate) {
        this.inParameters.add("createdDate");
        this.inCreatedDate = inCreatedDate;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inDataCategoryId the inDataCategoryId to set
    */
    public void setInDataCategoryId(String inDataCategoryId) {
        this.inParameters.add("dataCategoryId");
        this.inDataCategoryId = inDataCategoryId;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inDataResourceId the inDataResourceId to set
    */
    public void setInDataResourceId(String inDataResourceId) {
        this.inParameters.add("dataResourceId");
        this.inDataResourceId = inDataResourceId;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inDataResourceName the inDataResourceName to set
    */
    public void setInDataResourceName(String inDataResourceName) {
        this.inParameters.add("dataResourceName");
        this.inDataResourceName = inDataResourceName;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inDataResourceTypeId the inDataResourceTypeId to set
    */
    public void setInDataResourceTypeId(String inDataResourceTypeId) {
        this.inParameters.add("dataResourceTypeId");
        this.inDataResourceTypeId = inDataResourceTypeId;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inDataSourceId the inDataSourceId to set
    */
    public void setInDataSourceId(String inDataSourceId) {
        this.inParameters.add("dataSourceId");
        this.inDataSourceId = inDataSourceId;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inDataTemplateTypeId the inDataTemplateTypeId to set
    */
    public void setInDataTemplateTypeId(String inDataTemplateTypeId) {
        this.inParameters.add("dataTemplateTypeId");
        this.inDataTemplateTypeId = inDataTemplateTypeId;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inDecoratorContentId the inDecoratorContentId to set
    */
    public void setInDecoratorContentId(String inDecoratorContentId) {
        this.inParameters.add("decoratorContentId");
        this.inDecoratorContentId = inDecoratorContentId;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inDescription the inDescription to set
    */
    public void setInDescription(String inDescription) {
        this.inParameters.add("description");
        this.inDescription = inDescription;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inDisplayFailCond the inDisplayFailCond to set
    */
    public void setInDisplayFailCond(Boolean inDisplayFailCond) {
        this.inParameters.add("displayFailCond");
        this.inDisplayFailCond = inDisplayFailCond;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inFromDate the inFromDate to set
    */
    public void setInFromDate(Timestamp inFromDate) {
        this.inParameters.add("fromDate");
        this.inFromDate = inFromDate;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inInstanceOfContentId the inInstanceOfContentId to set
    */
    public void setInInstanceOfContentId(String inInstanceOfContentId) {
        this.inParameters.add("instanceOfContentId");
        this.inInstanceOfContentId = inInstanceOfContentId;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inIsPublic the inIsPublic to set
    */
    public void setInIsPublic(String inIsPublic) {
        this.inParameters.add("isPublic");
        this.inIsPublic = inIsPublic;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inLastModifiedByUserLogin the inLastModifiedByUserLogin to set
    */
    public void setInLastModifiedByUserLogin(String inLastModifiedByUserLogin) {
        this.inParameters.add("lastModifiedByUserLogin");
        this.inLastModifiedByUserLogin = inLastModifiedByUserLogin;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inLastModifiedDate the inLastModifiedDate to set
    */
    public void setInLastModifiedDate(Timestamp inLastModifiedDate) {
        this.inParameters.add("lastModifiedDate");
        this.inLastModifiedDate = inLastModifiedDate;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inLocale the inLocale to set
    */
    public void setInLocale(Locale inLocale) {
        this.inParameters.add("locale");
        this.inLocale = inLocale;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inLocaleString the inLocaleString to set
    */
    public void setInLocaleString(String inLocaleString) {
        this.inParameters.add("localeString");
        this.inLocaleString = inLocaleString;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inMapKey the inMapKey to set
    */
    public void setInMapKey(String inMapKey) {
        this.inParameters.add("mapKey");
        this.inMapKey = inMapKey;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inMimeTypeId the inMimeTypeId to set
    */
    public void setInMimeTypeId(String inMimeTypeId) {
        this.inParameters.add("mimeTypeId");
        this.inMimeTypeId = inMimeTypeId;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inObjectInfo the inObjectInfo to set
    */
    public void setInObjectInfo(String inObjectInfo) {
        this.inParameters.add("objectInfo");
        this.inObjectInfo = inObjectInfo;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inOwnerContentId the inOwnerContentId to set
    */
    public void setInOwnerContentId(String inOwnerContentId) {
        this.inParameters.add("ownerContentId");
        this.inOwnerContentId = inOwnerContentId;
    }
    /**
     * Auto generated value setter.
     * This parameter is required.
     * @param inPartyContentTypeId the inPartyContentTypeId to set
    */
    public void setInPartyContentTypeId(String inPartyContentTypeId) {
        this.inParameters.add("partyContentTypeId");
        this.inPartyContentTypeId = inPartyContentTypeId;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inPartyId the inPartyId to set
    */
    public void setInPartyId(String inPartyId) {
        this.inParameters.add("partyId");
        this.inPartyId = inPartyId;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inPrivilegeEnumId the inPrivilegeEnumId to set
    */
    public void setInPrivilegeEnumId(String inPrivilegeEnumId) {
        this.inParameters.add("privilegeEnumId");
        this.inPrivilegeEnumId = inPrivilegeEnumId;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inRelatedDetailId the inRelatedDetailId to set
    */
    public void setInRelatedDetailId(String inRelatedDetailId) {
        this.inParameters.add("relatedDetailId");
        this.inRelatedDetailId = inRelatedDetailId;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inRoleTypeId the inRoleTypeId to set
    */
    public void setInRoleTypeId(String inRoleTypeId) {
        this.inParameters.add("roleTypeId");
        this.inRoleTypeId = inRoleTypeId;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inRoleTypeList the inRoleTypeList to set
    */
    public void setInRoleTypeList(List inRoleTypeList) {
        this.inParameters.add("roleTypeList");
        this.inRoleTypeList = inRoleTypeList;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inServiceName the inServiceName to set
    */
    public void setInServiceName(String inServiceName) {
        this.inParameters.add("serviceName");
        this.inServiceName = inServiceName;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inSkipPermissionCheck the inSkipPermissionCheck to set
    */
    public void setInSkipPermissionCheck(String inSkipPermissionCheck) {
        this.inParameters.add("skipPermissionCheck");
        this.inSkipPermissionCheck = inSkipPermissionCheck;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inStatusId the inStatusId to set
    */
    public void setInStatusId(String inStatusId) {
        this.inParameters.add("statusId");
        this.inStatusId = inStatusId;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inSurveyId the inSurveyId to set
    */
    public void setInSurveyId(String inSurveyId) {
        this.inParameters.add("surveyId");
        this.inSurveyId = inSurveyId;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inSurveyResponseId the inSurveyResponseId to set
    */
    public void setInSurveyResponseId(String inSurveyResponseId) {
        this.inParameters.add("surveyResponseId");
        this.inSurveyResponseId = inSurveyResponseId;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inTargetOperationList the inTargetOperationList to set
    */
    public void setInTargetOperationList(List inTargetOperationList) {
        this.inParameters.add("targetOperationList");
        this.inTargetOperationList = inTargetOperationList;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inTargetOperationString the inTargetOperationString to set
    */
    public void setInTargetOperationString(String inTargetOperationString) {
        this.inParameters.add("targetOperationString");
        this.inTargetOperationString = inTargetOperationString;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inTemplateDataResourceId the inTemplateDataResourceId to set
    */
    public void setInTemplateDataResourceId(String inTemplateDataResourceId) {
        this.inParameters.add("templateDataResourceId");
        this.inTemplateDataResourceId = inTemplateDataResourceId;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inThruDate the inThruDate to set
    */
    public void setInThruDate(Timestamp inThruDate) {
        this.inParameters.add("thruDate");
        this.inThruDate = inThruDate;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inTimeZone the inTimeZone to set
    */
    public void setInTimeZone(TimeZone inTimeZone) {
        this.inParameters.add("timeZone");
        this.inTimeZone = inTimeZone;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inUploadedFile the inUploadedFile to set
    */
    public void setInUploadedFile(ByteBuffer inUploadedFile) {
        this.inParameters.add("uploadedFile");
        this.inUploadedFile = inUploadedFile;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inUserLogin the inUserLogin to set
    */
    public void setInUserLogin(GenericValue inUserLogin) {
        this.inParameters.add("userLogin");
        this.inUserLogin = inUserLogin;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param outContentId the outContentId to set
    */
    public void setOutContentId(String outContentId) {
        this.outParameters.add("contentId");
        this.outContentId = outContentId;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param outDataResource the outDataResource to set
    */
    public void setOutDataResource(GenericValue outDataResource) {
        this.outParameters.add("dataResource");
        this.outDataResource = outDataResource;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param outDataResourceId the outDataResourceId to set
    */
    public void setOutDataResourceId(String outDataResourceId) {
        this.outParameters.add("dataResourceId");
        this.outDataResourceId = outDataResourceId;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param outErrorMessage the outErrorMessage to set
    */
    public void setOutErrorMessage(String outErrorMessage) {
        this.outParameters.add("errorMessage");
        this.outErrorMessage = outErrorMessage;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param outErrorMessageList the outErrorMessageList to set
    */
    public void setOutErrorMessageList(List outErrorMessageList) {
        this.outParameters.add("errorMessageList");
        this.outErrorMessageList = outErrorMessageList;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param outLocale the outLocale to set
    */
    public void setOutLocale(Locale outLocale) {
        this.outParameters.add("locale");
        this.outLocale = outLocale;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param outMimeTypeId the outMimeTypeId to set
    */
    public void setOutMimeTypeId(String outMimeTypeId) {
        this.outParameters.add("mimeTypeId");
        this.outMimeTypeId = outMimeTypeId;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param outResponseMessage the outResponseMessage to set
    */
    public void setOutResponseMessage(String outResponseMessage) {
        this.outParameters.add("responseMessage");
        this.outResponseMessage = outResponseMessage;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param outRoleTypeList the outRoleTypeList to set
    */
    public void setOutRoleTypeList(List outRoleTypeList) {
        this.outParameters.add("roleTypeList");
        this.outRoleTypeList = outRoleTypeList;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param outSuccessMessage the outSuccessMessage to set
    */
    public void setOutSuccessMessage(String outSuccessMessage) {
        this.outParameters.add("successMessage");
        this.outSuccessMessage = outSuccessMessage;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param outSuccessMessageList the outSuccessMessageList to set
    */
    public void setOutSuccessMessageList(List outSuccessMessageList) {
        this.outParameters.add("successMessageList");
        this.outSuccessMessageList = outSuccessMessageList;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param outTimeZone the outTimeZone to set
    */
    public void setOutTimeZone(TimeZone outTimeZone) {
        this.outParameters.add("timeZone");
        this.outTimeZone = outTimeZone;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param outUserLogin the outUserLogin to set
    */
    public void setOutUserLogin(GenericValue outUserLogin) {
        this.outParameters.add("userLogin");
        this.outUserLogin = outUserLogin;
    }

    /** {@inheritDoc} */
    public String name() {
        return NAME;
    }

    /** {@inheritDoc} */
    public Boolean requiresAuthentication() {
        return REQUIRES_AUTHENTICATION;
    }

    /** {@inheritDoc} */
    public Boolean requiresNewTransaction() {
        return REQUIRES_NEW_TRANSACTION;
    }

    /** {@inheritDoc} */
    public Boolean usesTransaction() {
        return USES_TRANSACTION;
    }

    /** {@inheritDoc} */
    public Map<String, Object> inputMap() {
        Map<String, Object> mapValue = new FastMap<String, Object>();
        if (inParameters.contains("_uploadedFile_contentType")) mapValue.put("_uploadedFile_contentType", getInUploadedFileContentType());
        if (inParameters.contains("_uploadedFile_fileName")) mapValue.put("_uploadedFile_fileName", getInUploadedFileFileName());
        if (inParameters.contains("characterSetId")) mapValue.put("characterSetId", getInCharacterSetId());
        if (inParameters.contains("childBranchCount")) mapValue.put("childBranchCount", getInChildBranchCount());
        if (inParameters.contains("childLeafCount")) mapValue.put("childLeafCount", getInChildLeafCount());
        if (inParameters.contains("classificationEnumId")) mapValue.put("classificationEnumId", getInClassificationEnumId());
        if (inParameters.contains("contentAssocTypeId")) mapValue.put("contentAssocTypeId", getInContentAssocTypeId());
        if (inParameters.contains("contentId")) mapValue.put("contentId", getInContentId());
        if (inParameters.contains("contentIdFrom")) mapValue.put("contentIdFrom", getInContentIdFrom());
        if (inParameters.contains("contentIdTo")) mapValue.put("contentIdTo", getInContentIdTo());
        if (inParameters.contains("contentName")) mapValue.put("contentName", getInContentName());
        if (inParameters.contains("contentPurposeEnumId")) mapValue.put("contentPurposeEnumId", getInContentPurposeEnumId());
        if (inParameters.contains("contentPurposeList")) mapValue.put("contentPurposeList", getInContentPurposeList());
        if (inParameters.contains("contentPurposeString")) mapValue.put("contentPurposeString", getInContentPurposeString());
        if (inParameters.contains("contentPurposeTypeId")) mapValue.put("contentPurposeTypeId", getInContentPurposeTypeId());
        if (inParameters.contains("contentTypeId")) mapValue.put("contentTypeId", getInContentTypeId());
        if (inParameters.contains("createdByUserLogin")) mapValue.put("createdByUserLogin", getInCreatedByUserLogin());
        if (inParameters.contains("createdDate")) mapValue.put("createdDate", getInCreatedDate());
        if (inParameters.contains("dataCategoryId")) mapValue.put("dataCategoryId", getInDataCategoryId());
        if (inParameters.contains("dataResourceId")) mapValue.put("dataResourceId", getInDataResourceId());
        if (inParameters.contains("dataResourceName")) mapValue.put("dataResourceName", getInDataResourceName());
        if (inParameters.contains("dataResourceTypeId")) mapValue.put("dataResourceTypeId", getInDataResourceTypeId());
        if (inParameters.contains("dataSourceId")) mapValue.put("dataSourceId", getInDataSourceId());
        if (inParameters.contains("dataTemplateTypeId")) mapValue.put("dataTemplateTypeId", getInDataTemplateTypeId());
        if (inParameters.contains("decoratorContentId")) mapValue.put("decoratorContentId", getInDecoratorContentId());
        if (inParameters.contains("description")) mapValue.put("description", getInDescription());
        if (inParameters.contains("displayFailCond")) mapValue.put("displayFailCond", getInDisplayFailCond());
        if (inParameters.contains("fromDate")) mapValue.put("fromDate", getInFromDate());
        if (inParameters.contains("instanceOfContentId")) mapValue.put("instanceOfContentId", getInInstanceOfContentId());
        if (inParameters.contains("isPublic")) mapValue.put("isPublic", getInIsPublic());
        if (inParameters.contains("lastModifiedByUserLogin")) mapValue.put("lastModifiedByUserLogin", getInLastModifiedByUserLogin());
        if (inParameters.contains("lastModifiedDate")) mapValue.put("lastModifiedDate", getInLastModifiedDate());
        if (inParameters.contains("locale")) mapValue.put("locale", getInLocale());
        if (inParameters.contains("localeString")) mapValue.put("localeString", getInLocaleString());
        if (inParameters.contains("mapKey")) mapValue.put("mapKey", getInMapKey());
        if (inParameters.contains("mimeTypeId")) mapValue.put("mimeTypeId", getInMimeTypeId());
        if (inParameters.contains("objectInfo")) mapValue.put("objectInfo", getInObjectInfo());
        if (inParameters.contains("ownerContentId")) mapValue.put("ownerContentId", getInOwnerContentId());
        if (inParameters.contains("partyContentTypeId")) mapValue.put("partyContentTypeId", getInPartyContentTypeId());
        if (inParameters.contains("partyId")) mapValue.put("partyId", getInPartyId());
        if (inParameters.contains("privilegeEnumId")) mapValue.put("privilegeEnumId", getInPrivilegeEnumId());
        if (inParameters.contains("relatedDetailId")) mapValue.put("relatedDetailId", getInRelatedDetailId());
        if (inParameters.contains("roleTypeId")) mapValue.put("roleTypeId", getInRoleTypeId());
        if (inParameters.contains("roleTypeList")) mapValue.put("roleTypeList", getInRoleTypeList());
        if (inParameters.contains("serviceName")) mapValue.put("serviceName", getInServiceName());
        if (inParameters.contains("skipPermissionCheck")) mapValue.put("skipPermissionCheck", getInSkipPermissionCheck());
        if (inParameters.contains("statusId")) mapValue.put("statusId", getInStatusId());
        if (inParameters.contains("surveyId")) mapValue.put("surveyId", getInSurveyId());
        if (inParameters.contains("surveyResponseId")) mapValue.put("surveyResponseId", getInSurveyResponseId());
        if (inParameters.contains("targetOperationList")) mapValue.put("targetOperationList", getInTargetOperationList());
        if (inParameters.contains("targetOperationString")) mapValue.put("targetOperationString", getInTargetOperationString());
        if (inParameters.contains("templateDataResourceId")) mapValue.put("templateDataResourceId", getInTemplateDataResourceId());
        if (inParameters.contains("thruDate")) mapValue.put("thruDate", getInThruDate());
        if (inParameters.contains("timeZone")) mapValue.put("timeZone", getInTimeZone());
        if (inParameters.contains("uploadedFile")) mapValue.put("uploadedFile", getInUploadedFile());
        if (inParameters.contains("userLogin")) mapValue.put("userLogin", getInUserLogin());
        // allow the User set to override the userLogin
        if (getUser() != null) mapValue.put("userLogin", getUser().getOfbizUserLogin());
        return mapValue;
    }

    /** {@inheritDoc} */
    public Map<String, Object> outputMap() {
        Map<String, Object> mapValue = new FastMap<String, Object>();
        if (outParameters.contains("contentId")) mapValue.put("contentId", getOutContentId());
        if (outParameters.contains("dataResource")) mapValue.put("dataResource", getOutDataResource());
        if (outParameters.contains("dataResourceId")) mapValue.put("dataResourceId", getOutDataResourceId());
        if (outParameters.contains("errorMessage")) mapValue.put("errorMessage", getOutErrorMessage());
        if (outParameters.contains("errorMessageList")) mapValue.put("errorMessageList", getOutErrorMessageList());
        if (outParameters.contains("locale")) mapValue.put("locale", getOutLocale());
        if (outParameters.contains("mimeTypeId")) mapValue.put("mimeTypeId", getOutMimeTypeId());
        if (outParameters.contains("responseMessage")) mapValue.put("responseMessage", getOutResponseMessage());
        if (outParameters.contains("roleTypeList")) mapValue.put("roleTypeList", getOutRoleTypeList());
        if (outParameters.contains("successMessage")) mapValue.put("successMessage", getOutSuccessMessage());
        if (outParameters.contains("successMessageList")) mapValue.put("successMessageList", getOutSuccessMessageList());
        if (outParameters.contains("timeZone")) mapValue.put("timeZone", getOutTimeZone());
        if (outParameters.contains("userLogin")) mapValue.put("userLogin", getOutUserLogin());
        return mapValue;
    }

    /** {@inheritDoc} */
    public void putAllInput(Map<String, Object> mapValue) {
        if (mapValue.containsKey("_uploadedFile_contentType")) setInUploadedFileContentType((String) mapValue.get("_uploadedFile_contentType"));
        if (mapValue.containsKey("_uploadedFile_fileName")) setInUploadedFileFileName((String) mapValue.get("_uploadedFile_fileName"));
        if (mapValue.containsKey("characterSetId")) setInCharacterSetId((String) mapValue.get("characterSetId"));
        if (mapValue.containsKey("childBranchCount")) setInChildBranchCount((Long) mapValue.get("childBranchCount"));
        if (mapValue.containsKey("childLeafCount")) setInChildLeafCount((Long) mapValue.get("childLeafCount"));
        if (mapValue.containsKey("classificationEnumId")) setInClassificationEnumId((String) mapValue.get("classificationEnumId"));
        if (mapValue.containsKey("contentAssocTypeId")) setInContentAssocTypeId((String) mapValue.get("contentAssocTypeId"));
        if (mapValue.containsKey("contentId")) setInContentId((String) mapValue.get("contentId"));
        if (mapValue.containsKey("contentIdFrom")) setInContentIdFrom((String) mapValue.get("contentIdFrom"));
        if (mapValue.containsKey("contentIdTo")) setInContentIdTo((String) mapValue.get("contentIdTo"));
        if (mapValue.containsKey("contentName")) setInContentName((String) mapValue.get("contentName"));
        if (mapValue.containsKey("contentPurposeEnumId")) setInContentPurposeEnumId((String) mapValue.get("contentPurposeEnumId"));
        if (mapValue.containsKey("contentPurposeList")) setInContentPurposeList((List) mapValue.get("contentPurposeList"));
        if (mapValue.containsKey("contentPurposeString")) setInContentPurposeString((String) mapValue.get("contentPurposeString"));
        if (mapValue.containsKey("contentPurposeTypeId")) setInContentPurposeTypeId((String) mapValue.get("contentPurposeTypeId"));
        if (mapValue.containsKey("contentTypeId")) setInContentTypeId((String) mapValue.get("contentTypeId"));
        if (mapValue.containsKey("createdByUserLogin")) setInCreatedByUserLogin((String) mapValue.get("createdByUserLogin"));
        if (mapValue.containsKey("createdDate")) setInCreatedDate((Timestamp) mapValue.get("createdDate"));
        if (mapValue.containsKey("dataCategoryId")) setInDataCategoryId((String) mapValue.get("dataCategoryId"));
        if (mapValue.containsKey("dataResourceId")) setInDataResourceId((String) mapValue.get("dataResourceId"));
        if (mapValue.containsKey("dataResourceName")) setInDataResourceName((String) mapValue.get("dataResourceName"));
        if (mapValue.containsKey("dataResourceTypeId")) setInDataResourceTypeId((String) mapValue.get("dataResourceTypeId"));
        if (mapValue.containsKey("dataSourceId")) setInDataSourceId((String) mapValue.get("dataSourceId"));
        if (mapValue.containsKey("dataTemplateTypeId")) setInDataTemplateTypeId((String) mapValue.get("dataTemplateTypeId"));
        if (mapValue.containsKey("decoratorContentId")) setInDecoratorContentId((String) mapValue.get("decoratorContentId"));
        if (mapValue.containsKey("description")) setInDescription((String) mapValue.get("description"));
        if (mapValue.containsKey("displayFailCond")) setInDisplayFailCond((Boolean) mapValue.get("displayFailCond"));
        if (mapValue.containsKey("fromDate")) setInFromDate((Timestamp) mapValue.get("fromDate"));
        if (mapValue.containsKey("instanceOfContentId")) setInInstanceOfContentId((String) mapValue.get("instanceOfContentId"));
        if (mapValue.containsKey("isPublic")) setInIsPublic((String) mapValue.get("isPublic"));
        if (mapValue.containsKey("lastModifiedByUserLogin")) setInLastModifiedByUserLogin((String) mapValue.get("lastModifiedByUserLogin"));
        if (mapValue.containsKey("lastModifiedDate")) setInLastModifiedDate((Timestamp) mapValue.get("lastModifiedDate"));
        if (mapValue.containsKey("locale")) setInLocale((Locale) mapValue.get("locale"));
        if (mapValue.containsKey("localeString")) setInLocaleString((String) mapValue.get("localeString"));
        if (mapValue.containsKey("mapKey")) setInMapKey((String) mapValue.get("mapKey"));
        if (mapValue.containsKey("mimeTypeId")) setInMimeTypeId((String) mapValue.get("mimeTypeId"));
        if (mapValue.containsKey("objectInfo")) setInObjectInfo((String) mapValue.get("objectInfo"));
        if (mapValue.containsKey("ownerContentId")) setInOwnerContentId((String) mapValue.get("ownerContentId"));
        if (mapValue.containsKey("partyContentTypeId")) setInPartyContentTypeId((String) mapValue.get("partyContentTypeId"));
        if (mapValue.containsKey("partyId")) setInPartyId((String) mapValue.get("partyId"));
        if (mapValue.containsKey("privilegeEnumId")) setInPrivilegeEnumId((String) mapValue.get("privilegeEnumId"));
        if (mapValue.containsKey("relatedDetailId")) setInRelatedDetailId((String) mapValue.get("relatedDetailId"));
        if (mapValue.containsKey("roleTypeId")) setInRoleTypeId((String) mapValue.get("roleTypeId"));
        if (mapValue.containsKey("roleTypeList")) setInRoleTypeList((List) mapValue.get("roleTypeList"));
        if (mapValue.containsKey("serviceName")) setInServiceName((String) mapValue.get("serviceName"));
        if (mapValue.containsKey("skipPermissionCheck")) setInSkipPermissionCheck((String) mapValue.get("skipPermissionCheck"));
        if (mapValue.containsKey("statusId")) setInStatusId((String) mapValue.get("statusId"));
        if (mapValue.containsKey("surveyId")) setInSurveyId((String) mapValue.get("surveyId"));
        if (mapValue.containsKey("surveyResponseId")) setInSurveyResponseId((String) mapValue.get("surveyResponseId"));
        if (mapValue.containsKey("targetOperationList")) setInTargetOperationList((List) mapValue.get("targetOperationList"));
        if (mapValue.containsKey("targetOperationString")) setInTargetOperationString((String) mapValue.get("targetOperationString"));
        if (mapValue.containsKey("templateDataResourceId")) setInTemplateDataResourceId((String) mapValue.get("templateDataResourceId"));
        if (mapValue.containsKey("thruDate")) setInThruDate((Timestamp) mapValue.get("thruDate"));
        if (mapValue.containsKey("timeZone")) setInTimeZone((TimeZone) mapValue.get("timeZone"));
        if (mapValue.containsKey("uploadedFile")) setInUploadedFile((ByteBuffer) mapValue.get("uploadedFile"));
        if (mapValue.containsKey("userLogin")) setInUserLogin((GenericValue) mapValue.get("userLogin"));
    }

    /** {@inheritDoc} */
    public void putAllOutput(Map<String, Object> mapValue) {
        if (mapValue.containsKey("contentId")) setOutContentId((String) mapValue.get("contentId"));
        if (mapValue.containsKey("dataResource")) setOutDataResource((GenericValue) mapValue.get("dataResource"));
        if (mapValue.containsKey("dataResourceId")) setOutDataResourceId((String) mapValue.get("dataResourceId"));
        if (mapValue.containsKey("errorMessage")) setOutErrorMessage((String) mapValue.get("errorMessage"));
        if (mapValue.containsKey("errorMessageList")) setOutErrorMessageList((List) mapValue.get("errorMessageList"));
        if (mapValue.containsKey("locale")) setOutLocale((Locale) mapValue.get("locale"));
        if (mapValue.containsKey("mimeTypeId")) setOutMimeTypeId((String) mapValue.get("mimeTypeId"));
        if (mapValue.containsKey("responseMessage")) setOutResponseMessage((String) mapValue.get("responseMessage"));
        if (mapValue.containsKey("roleTypeList")) setOutRoleTypeList((List) mapValue.get("roleTypeList"));
        if (mapValue.containsKey("successMessage")) setOutSuccessMessage((String) mapValue.get("successMessage"));
        if (mapValue.containsKey("successMessageList")) setOutSuccessMessageList((List) mapValue.get("successMessageList"));
        if (mapValue.containsKey("timeZone")) setOutTimeZone((TimeZone) mapValue.get("timeZone"));
        if (mapValue.containsKey("userLogin")) setOutUserLogin((GenericValue) mapValue.get("userLogin"));
    }

    /**
     * Construct a <code>UploadPartyContentFileService</code> from the input values of the given <code>UploadPartyContentFileService</code>.
     * @param input a <code>UploadPartyContentFileService</code>
     */
    public static UploadPartyContentFileService fromInput(UploadPartyContentFileService input) {
        UploadPartyContentFileService service = new UploadPartyContentFileService();
        return fromInput(input.inputMap());
    }

    /**
     * Construct a <code>UploadPartyContentFileService</code> from the output values of the given <code>UploadPartyContentFileService</code>.
     * @param output a <code>UploadPartyContentFileService</code>
     */
    public static UploadPartyContentFileService fromOutput(UploadPartyContentFileService output) {
        UploadPartyContentFileService service = new UploadPartyContentFileService();
        service.putAllOutput(output.outputMap());
        return service;
    }

    /**
     * Construct a <code>UploadPartyContentFileService</code> from the given input <code>Map</code>.
     * @param mapValue the service input <code>Map</code>
     */
    public static UploadPartyContentFileService fromInput(Map<String, Object> mapValue) {
        UploadPartyContentFileService service = new UploadPartyContentFileService();
        service.putAllInput(mapValue);
        if (mapValue.containsKey("userLogin")) {
            GenericValue userGv = (GenericValue) mapValue.get("userLogin");
            if (userGv != null) {
                service.setUser(new User(userGv, userGv.getDelegator()));
            }
        }
        return service;
    }

    /**
     * Construct a <code>UploadPartyContentFileService</code> from the given output <code>Map</code>.
     * @param mapValue the service output <code>Map</code>
     */
    public static UploadPartyContentFileService fromOutput(Map<String, Object> mapValue) {
        UploadPartyContentFileService service = new UploadPartyContentFileService();
        service.putAllOutput(mapValue);
        return service;
    }
}
