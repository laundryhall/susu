package org.opentaps.base.services;

/*
 * Copyright (c) Open Source Strategies, Inc.
 *
 * Opentaps is free software: you can redistribute it and/or modify it
 * under the terms of the GNU Affero General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Opentaps is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with Opentaps.  If not, see <http://www.gnu.org/licenses/>.
 */

// DO NOT EDIT THIS FILE!  THIS IS AUTO GENERATED AND WILL GET WRITTEN OVER PERIODICALLY WHEN THE SERVICE MODEL CHANGES
// EXTEND THIS CLASS INSTEAD.

import org.opentaps.foundation.service.ServiceWrapper;

import java.nio.ByteBuffer;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import java.util.Set;
import java.util.TimeZone;
import javolution.util.FastMap;
import javolution.util.FastSet;
import org.ofbiz.entity.GenericValue;
import org.opentaps.foundation.infrastructure.User;

/**
 * Creates uploadable or simple content for Cases..
 * Auto generated base service entity crmsfa.createContentForCase.
 *
 * Engine: java
 * Location: com.opensourcestrategies.crmsfa.content.ContentServices
 * Invoke: createContentForCase
 * Defined in: hot-deploy/crmsfa/servicedef/services_content.xml
 */
public class CrmsfaCreateContentForCaseService extends ServiceWrapper {

    /** The service name as used by the service engine. */
    public static final String NAME = "crmsfa.createContentForCase";
    /** If the service requires authentication. */
    public static final Boolean REQUIRES_AUTHENTICATION = Boolean.TRUE;
    /** If the service requires a new transaction. */
    public static final Boolean REQUIRES_NEW_TRANSACTION = Boolean.FALSE;
    /** If the service uses a transaction. */
    public static final Boolean USES_TRANSACTION = Boolean.TRUE;

    /** The enumeration of input parameters. */
    public static enum In {
        uploadedFileContentType("_uploadedFile_contentType"),
        uploadedFileFileName("_uploadedFile_fileName"),
        classificationEnumId("classificationEnumId"),
        contentName("contentName"),
        contentPurposeEnumId("contentPurposeEnumId"),
        contentTypeId("contentTypeId"),
        custRequestId("custRequestId"),
        description("description"),
        locale("locale"),
        timeZone("timeZone"),
        uploadedFile("uploadedFile"),
        url("url"),
        userLogin("userLogin");
        private final String _fieldName;
        private In(String name) { this._fieldName = name; }
        public String getName() { return this._fieldName; }
    }

    public static enum Out {
        custRequestId("custRequestId"),
        errorMessage("errorMessage"),
        errorMessageList("errorMessageList"),
        locale("locale"),
        responseMessage("responseMessage"),
        successMessage("successMessage"),
        successMessageList("successMessageList"),
        timeZone("timeZone"),
        userLogin("userLogin");
        private final String _fieldName;
        private Out(String name) { this._fieldName = name; }
        public String getName() { return this._fieldName; }
    }

    /**
     * Creates a new <code>CrmsfaCreateContentForCaseService</code> instance.
     */
    public CrmsfaCreateContentForCaseService() {
        super();
    }

    /**
     * Creates a new <code>CrmsfaCreateContentForCaseService</code> instance.
     * @param user an <code>User</code> value
     */
    public CrmsfaCreateContentForCaseService(User user) {
        super(user);
    }

    private String inUploadedFileContentType;
    private String inUploadedFileFileName;
    private String inClassificationEnumId;
    private String inContentName;
    private String inContentPurposeEnumId;
    private String inContentTypeId;
    private String inCustRequestId;
    private String inDescription;
    private Locale inLocale;
    private TimeZone inTimeZone;
    private ByteBuffer inUploadedFile;
    private String inUrl;
    private GenericValue inUserLogin;
    private String outCustRequestId;
    private String outErrorMessage;
    private List outErrorMessageList;
    private Locale outLocale;
    private String outResponseMessage;
    private String outSuccessMessage;
    private List outSuccessMessageList;
    private TimeZone outTimeZone;
    private GenericValue outUserLogin;

    private Set<String> inParameters = FastSet.newInstance();
    private Set<String> outParameters = FastSet.newInstance();

    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInUploadedFileContentType() {
        return this.inUploadedFileContentType;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInUploadedFileFileName() {
        return this.inUploadedFileFileName;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInClassificationEnumId() {
        return this.inClassificationEnumId;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInContentName() {
        return this.inContentName;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInContentPurposeEnumId() {
        return this.inContentPurposeEnumId;
    }
    /**
     * Auto generated value accessor.
     * This parameter is required.
     * @return <code>String</code>
     */
    public String getInContentTypeId() {
        return this.inContentTypeId;
    }
    /**
     * Auto generated value accessor.
     * This parameter is required.
     * @return <code>String</code>
     */
    public String getInCustRequestId() {
        return this.inCustRequestId;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInDescription() {
        return this.inDescription;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>Locale</code>
     */
    public Locale getInLocale() {
        return this.inLocale;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>TimeZone</code>
     */
    public TimeZone getInTimeZone() {
        return this.inTimeZone;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>ByteBuffer</code>
     */
    public ByteBuffer getInUploadedFile() {
        return this.inUploadedFile;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInUrl() {
        return this.inUrl;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>GenericValue</code>
     */
    public GenericValue getInUserLogin() {
        return this.inUserLogin;
    }
    /**
     * Auto generated value accessor.
     * This parameter is required.
     * @return <code>String</code>
     */
    public String getOutCustRequestId() {
        return this.outCustRequestId;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getOutErrorMessage() {
        return this.outErrorMessage;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>List</code>
     */
    public List getOutErrorMessageList() {
        return this.outErrorMessageList;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>Locale</code>
     */
    public Locale getOutLocale() {
        return this.outLocale;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getOutResponseMessage() {
        return this.outResponseMessage;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getOutSuccessMessage() {
        return this.outSuccessMessage;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>List</code>
     */
    public List getOutSuccessMessageList() {
        return this.outSuccessMessageList;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>TimeZone</code>
     */
    public TimeZone getOutTimeZone() {
        return this.outTimeZone;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>GenericValue</code>
     */
    public GenericValue getOutUserLogin() {
        return this.outUserLogin;
    }

    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inUploadedFileContentType the inUploadedFileContentType to set
    */
    public void setInUploadedFileContentType(String inUploadedFileContentType) {
        this.inParameters.add("_uploadedFile_contentType");
        this.inUploadedFileContentType = inUploadedFileContentType;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inUploadedFileFileName the inUploadedFileFileName to set
    */
    public void setInUploadedFileFileName(String inUploadedFileFileName) {
        this.inParameters.add("_uploadedFile_fileName");
        this.inUploadedFileFileName = inUploadedFileFileName;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inClassificationEnumId the inClassificationEnumId to set
    */
    public void setInClassificationEnumId(String inClassificationEnumId) {
        this.inParameters.add("classificationEnumId");
        this.inClassificationEnumId = inClassificationEnumId;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inContentName the inContentName to set
    */
    public void setInContentName(String inContentName) {
        this.inParameters.add("contentName");
        this.inContentName = inContentName;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inContentPurposeEnumId the inContentPurposeEnumId to set
    */
    public void setInContentPurposeEnumId(String inContentPurposeEnumId) {
        this.inParameters.add("contentPurposeEnumId");
        this.inContentPurposeEnumId = inContentPurposeEnumId;
    }
    /**
     * Auto generated value setter.
     * This parameter is required.
     * @param inContentTypeId the inContentTypeId to set
    */
    public void setInContentTypeId(String inContentTypeId) {
        this.inParameters.add("contentTypeId");
        this.inContentTypeId = inContentTypeId;
    }
    /**
     * Auto generated value setter.
     * This parameter is required.
     * @param inCustRequestId the inCustRequestId to set
    */
    public void setInCustRequestId(String inCustRequestId) {
        this.inParameters.add("custRequestId");
        this.inCustRequestId = inCustRequestId;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inDescription the inDescription to set
    */
    public void setInDescription(String inDescription) {
        this.inParameters.add("description");
        this.inDescription = inDescription;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inLocale the inLocale to set
    */
    public void setInLocale(Locale inLocale) {
        this.inParameters.add("locale");
        this.inLocale = inLocale;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inTimeZone the inTimeZone to set
    */
    public void setInTimeZone(TimeZone inTimeZone) {
        this.inParameters.add("timeZone");
        this.inTimeZone = inTimeZone;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inUploadedFile the inUploadedFile to set
    */
    public void setInUploadedFile(ByteBuffer inUploadedFile) {
        this.inParameters.add("uploadedFile");
        this.inUploadedFile = inUploadedFile;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inUrl the inUrl to set
    */
    public void setInUrl(String inUrl) {
        this.inParameters.add("url");
        this.inUrl = inUrl;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inUserLogin the inUserLogin to set
    */
    public void setInUserLogin(GenericValue inUserLogin) {
        this.inParameters.add("userLogin");
        this.inUserLogin = inUserLogin;
    }
    /**
     * Auto generated value setter.
     * This parameter is required.
     * @param outCustRequestId the outCustRequestId to set
    */
    public void setOutCustRequestId(String outCustRequestId) {
        this.outParameters.add("custRequestId");
        this.outCustRequestId = outCustRequestId;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param outErrorMessage the outErrorMessage to set
    */
    public void setOutErrorMessage(String outErrorMessage) {
        this.outParameters.add("errorMessage");
        this.outErrorMessage = outErrorMessage;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param outErrorMessageList the outErrorMessageList to set
    */
    public void setOutErrorMessageList(List outErrorMessageList) {
        this.outParameters.add("errorMessageList");
        this.outErrorMessageList = outErrorMessageList;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param outLocale the outLocale to set
    */
    public void setOutLocale(Locale outLocale) {
        this.outParameters.add("locale");
        this.outLocale = outLocale;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param outResponseMessage the outResponseMessage to set
    */
    public void setOutResponseMessage(String outResponseMessage) {
        this.outParameters.add("responseMessage");
        this.outResponseMessage = outResponseMessage;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param outSuccessMessage the outSuccessMessage to set
    */
    public void setOutSuccessMessage(String outSuccessMessage) {
        this.outParameters.add("successMessage");
        this.outSuccessMessage = outSuccessMessage;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param outSuccessMessageList the outSuccessMessageList to set
    */
    public void setOutSuccessMessageList(List outSuccessMessageList) {
        this.outParameters.add("successMessageList");
        this.outSuccessMessageList = outSuccessMessageList;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param outTimeZone the outTimeZone to set
    */
    public void setOutTimeZone(TimeZone outTimeZone) {
        this.outParameters.add("timeZone");
        this.outTimeZone = outTimeZone;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param outUserLogin the outUserLogin to set
    */
    public void setOutUserLogin(GenericValue outUserLogin) {
        this.outParameters.add("userLogin");
        this.outUserLogin = outUserLogin;
    }

    /** {@inheritDoc} */
    public String name() {
        return NAME;
    }

    /** {@inheritDoc} */
    public Boolean requiresAuthentication() {
        return REQUIRES_AUTHENTICATION;
    }

    /** {@inheritDoc} */
    public Boolean requiresNewTransaction() {
        return REQUIRES_NEW_TRANSACTION;
    }

    /** {@inheritDoc} */
    public Boolean usesTransaction() {
        return USES_TRANSACTION;
    }

    /** {@inheritDoc} */
    public Map<String, Object> inputMap() {
        Map<String, Object> mapValue = new FastMap<String, Object>();
        if (inParameters.contains("_uploadedFile_contentType")) mapValue.put("_uploadedFile_contentType", getInUploadedFileContentType());
        if (inParameters.contains("_uploadedFile_fileName")) mapValue.put("_uploadedFile_fileName", getInUploadedFileFileName());
        if (inParameters.contains("classificationEnumId")) mapValue.put("classificationEnumId", getInClassificationEnumId());
        if (inParameters.contains("contentName")) mapValue.put("contentName", getInContentName());
        if (inParameters.contains("contentPurposeEnumId")) mapValue.put("contentPurposeEnumId", getInContentPurposeEnumId());
        if (inParameters.contains("contentTypeId")) mapValue.put("contentTypeId", getInContentTypeId());
        if (inParameters.contains("custRequestId")) mapValue.put("custRequestId", getInCustRequestId());
        if (inParameters.contains("description")) mapValue.put("description", getInDescription());
        if (inParameters.contains("locale")) mapValue.put("locale", getInLocale());
        if (inParameters.contains("timeZone")) mapValue.put("timeZone", getInTimeZone());
        if (inParameters.contains("uploadedFile")) mapValue.put("uploadedFile", getInUploadedFile());
        if (inParameters.contains("url")) mapValue.put("url", getInUrl());
        if (inParameters.contains("userLogin")) mapValue.put("userLogin", getInUserLogin());
        // allow the User set to override the userLogin
        if (getUser() != null) mapValue.put("userLogin", getUser().getOfbizUserLogin());
        return mapValue;
    }

    /** {@inheritDoc} */
    public Map<String, Object> outputMap() {
        Map<String, Object> mapValue = new FastMap<String, Object>();
        if (outParameters.contains("custRequestId")) mapValue.put("custRequestId", getOutCustRequestId());
        if (outParameters.contains("errorMessage")) mapValue.put("errorMessage", getOutErrorMessage());
        if (outParameters.contains("errorMessageList")) mapValue.put("errorMessageList", getOutErrorMessageList());
        if (outParameters.contains("locale")) mapValue.put("locale", getOutLocale());
        if (outParameters.contains("responseMessage")) mapValue.put("responseMessage", getOutResponseMessage());
        if (outParameters.contains("successMessage")) mapValue.put("successMessage", getOutSuccessMessage());
        if (outParameters.contains("successMessageList")) mapValue.put("successMessageList", getOutSuccessMessageList());
        if (outParameters.contains("timeZone")) mapValue.put("timeZone", getOutTimeZone());
        if (outParameters.contains("userLogin")) mapValue.put("userLogin", getOutUserLogin());
        return mapValue;
    }

    /** {@inheritDoc} */
    public void putAllInput(Map<String, Object> mapValue) {
        if (mapValue.containsKey("_uploadedFile_contentType")) setInUploadedFileContentType((String) mapValue.get("_uploadedFile_contentType"));
        if (mapValue.containsKey("_uploadedFile_fileName")) setInUploadedFileFileName((String) mapValue.get("_uploadedFile_fileName"));
        if (mapValue.containsKey("classificationEnumId")) setInClassificationEnumId((String) mapValue.get("classificationEnumId"));
        if (mapValue.containsKey("contentName")) setInContentName((String) mapValue.get("contentName"));
        if (mapValue.containsKey("contentPurposeEnumId")) setInContentPurposeEnumId((String) mapValue.get("contentPurposeEnumId"));
        if (mapValue.containsKey("contentTypeId")) setInContentTypeId((String) mapValue.get("contentTypeId"));
        if (mapValue.containsKey("custRequestId")) setInCustRequestId((String) mapValue.get("custRequestId"));
        if (mapValue.containsKey("description")) setInDescription((String) mapValue.get("description"));
        if (mapValue.containsKey("locale")) setInLocale((Locale) mapValue.get("locale"));
        if (mapValue.containsKey("timeZone")) setInTimeZone((TimeZone) mapValue.get("timeZone"));
        if (mapValue.containsKey("uploadedFile")) setInUploadedFile((ByteBuffer) mapValue.get("uploadedFile"));
        if (mapValue.containsKey("url")) setInUrl((String) mapValue.get("url"));
        if (mapValue.containsKey("userLogin")) setInUserLogin((GenericValue) mapValue.get("userLogin"));
    }

    /** {@inheritDoc} */
    public void putAllOutput(Map<String, Object> mapValue) {
        if (mapValue.containsKey("custRequestId")) setOutCustRequestId((String) mapValue.get("custRequestId"));
        if (mapValue.containsKey("errorMessage")) setOutErrorMessage((String) mapValue.get("errorMessage"));
        if (mapValue.containsKey("errorMessageList")) setOutErrorMessageList((List) mapValue.get("errorMessageList"));
        if (mapValue.containsKey("locale")) setOutLocale((Locale) mapValue.get("locale"));
        if (mapValue.containsKey("responseMessage")) setOutResponseMessage((String) mapValue.get("responseMessage"));
        if (mapValue.containsKey("successMessage")) setOutSuccessMessage((String) mapValue.get("successMessage"));
        if (mapValue.containsKey("successMessageList")) setOutSuccessMessageList((List) mapValue.get("successMessageList"));
        if (mapValue.containsKey("timeZone")) setOutTimeZone((TimeZone) mapValue.get("timeZone"));
        if (mapValue.containsKey("userLogin")) setOutUserLogin((GenericValue) mapValue.get("userLogin"));
    }

    /**
     * Construct a <code>CrmsfaCreateContentForCaseService</code> from the input values of the given <code>CrmsfaCreateContentForCaseService</code>.
     * @param input a <code>CrmsfaCreateContentForCaseService</code>
     */
    public static CrmsfaCreateContentForCaseService fromInput(CrmsfaCreateContentForCaseService input) {
        CrmsfaCreateContentForCaseService service = new CrmsfaCreateContentForCaseService();
        return fromInput(input.inputMap());
    }

    /**
     * Construct a <code>CrmsfaCreateContentForCaseService</code> from the output values of the given <code>CrmsfaCreateContentForCaseService</code>.
     * @param output a <code>CrmsfaCreateContentForCaseService</code>
     */
    public static CrmsfaCreateContentForCaseService fromOutput(CrmsfaCreateContentForCaseService output) {
        CrmsfaCreateContentForCaseService service = new CrmsfaCreateContentForCaseService();
        service.putAllOutput(output.outputMap());
        return service;
    }

    /**
     * Construct a <code>CrmsfaCreateContentForCaseService</code> from the given input <code>Map</code>.
     * @param mapValue the service input <code>Map</code>
     */
    public static CrmsfaCreateContentForCaseService fromInput(Map<String, Object> mapValue) {
        CrmsfaCreateContentForCaseService service = new CrmsfaCreateContentForCaseService();
        service.putAllInput(mapValue);
        if (mapValue.containsKey("userLogin")) {
            GenericValue userGv = (GenericValue) mapValue.get("userLogin");
            if (userGv != null) {
                service.setUser(new User(userGv, userGv.getDelegator()));
            }
        }
        return service;
    }

    /**
     * Construct a <code>CrmsfaCreateContentForCaseService</code> from the given output <code>Map</code>.
     * @param mapValue the service output <code>Map</code>
     */
    public static CrmsfaCreateContentForCaseService fromOutput(Map<String, Object> mapValue) {
        CrmsfaCreateContentForCaseService service = new CrmsfaCreateContentForCaseService();
        service.putAllOutput(mapValue);
        return service;
    }
}
