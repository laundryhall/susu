package org.opentaps.base.services;

/*
 * Copyright (c) Open Source Strategies, Inc.
 *
 * Opentaps is free software: you can redistribute it and/or modify it
 * under the terms of the GNU Affero General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Opentaps is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with Opentaps.  If not, see <http://www.gnu.org/licenses/>.
 */

// DO NOT EDIT THIS FILE!  THIS IS AUTO GENERATED AND WILL GET WRITTEN OVER PERIODICALLY WHEN THE SERVICE MODEL CHANGES
// EXTEND THIS CLASS INSTEAD.

import org.opentaps.foundation.service.ServiceWrapper;

import java.util.List;
import java.util.Locale;
import java.util.Map;
import java.util.Set;
import java.util.TimeZone;
import javolution.util.FastMap;
import javolution.util.FastSet;
import org.ofbiz.entity.GenericValue;
import org.opentaps.foundation.infrastructure.User;

/**
 * Imports an entity xml file or text string.
 * Auto generated base service entity entityImportReaders.
 *
 * Engine: java
 * Location: org.ofbiz.webtools.WebToolsServices
 * Invoke: entityImportReaders
 * Defined in: framework/webtools/servicedef/services.xml
 */
public class EntityImportReadersService extends ServiceWrapper {

    /** The service name as used by the service engine. */
    public static final String NAME = "entityImportReaders";
    /** If the service requires authentication. */
    public static final Boolean REQUIRES_AUTHENTICATION = Boolean.TRUE;
    /** If the service requires a new transaction. */
    public static final Boolean REQUIRES_NEW_TRANSACTION = Boolean.FALSE;
    /** If the service uses a transaction. */
    public static final Boolean USES_TRANSACTION = Boolean.FALSE;

    /** The enumeration of input parameters. */
    public static enum In {
        checkDataOnly("checkDataOnly"),
        createDummyFks("createDummyFks"),
        locale("locale"),
        maintainTimeStamps("maintainTimeStamps"),
        mostlyInserts("mostlyInserts"),
        overrideDelegator("overrideDelegator"),
        overrideGroup("overrideGroup"),
        readers("readers"),
        timeZone("timeZone"),
        txTimeout("txTimeout"),
        userLogin("userLogin");
        private final String _fieldName;
        private In(String name) { this._fieldName = name; }
        public String getName() { return this._fieldName; }
    }

    public static enum Out {
        errorMessage("errorMessage"),
        errorMessageList("errorMessageList"),
        locale("locale"),
        messages("messages"),
        responseMessage("responseMessage"),
        successMessage("successMessage"),
        successMessageList("successMessageList"),
        timeZone("timeZone"),
        userLogin("userLogin");
        private final String _fieldName;
        private Out(String name) { this._fieldName = name; }
        public String getName() { return this._fieldName; }
    }

    /**
     * Creates a new <code>EntityImportReadersService</code> instance.
     */
    public EntityImportReadersService() {
        super();
    }

    /**
     * Creates a new <code>EntityImportReadersService</code> instance.
     * @param user an <code>User</code> value
     */
    public EntityImportReadersService(User user) {
        super(user);
    }

    private String inCheckDataOnly;
    private String inCreateDummyFks;
    private Locale inLocale;
    private String inMaintainTimeStamps;
    private String inMostlyInserts;
    private String inOverrideDelegator;
    private String inOverrideGroup;
    private String inReaders;
    private TimeZone inTimeZone;
    private Integer inTxTimeout;
    private GenericValue inUserLogin;
    private String outErrorMessage;
    private List outErrorMessageList;
    private Locale outLocale;
    private List outMessages;
    private String outResponseMessage;
    private String outSuccessMessage;
    private List outSuccessMessageList;
    private TimeZone outTimeZone;
    private GenericValue outUserLogin;

    private Set<String> inParameters = FastSet.newInstance();
    private Set<String> outParameters = FastSet.newInstance();

    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInCheckDataOnly() {
        return this.inCheckDataOnly;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInCreateDummyFks() {
        return this.inCreateDummyFks;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>Locale</code>
     */
    public Locale getInLocale() {
        return this.inLocale;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInMaintainTimeStamps() {
        return this.inMaintainTimeStamps;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInMostlyInserts() {
        return this.inMostlyInserts;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInOverrideDelegator() {
        return this.inOverrideDelegator;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInOverrideGroup() {
        return this.inOverrideGroup;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInReaders() {
        return this.inReaders;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>TimeZone</code>
     */
    public TimeZone getInTimeZone() {
        return this.inTimeZone;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>Integer</code>
     */
    public Integer getInTxTimeout() {
        return this.inTxTimeout;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>GenericValue</code>
     */
    public GenericValue getInUserLogin() {
        return this.inUserLogin;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getOutErrorMessage() {
        return this.outErrorMessage;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>List</code>
     */
    public List getOutErrorMessageList() {
        return this.outErrorMessageList;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>Locale</code>
     */
    public Locale getOutLocale() {
        return this.outLocale;
    }
    /**
     * Auto generated value accessor.
     * This parameter is required.
     * @return <code>List</code>
     */
    public List getOutMessages() {
        return this.outMessages;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getOutResponseMessage() {
        return this.outResponseMessage;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getOutSuccessMessage() {
        return this.outSuccessMessage;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>List</code>
     */
    public List getOutSuccessMessageList() {
        return this.outSuccessMessageList;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>TimeZone</code>
     */
    public TimeZone getOutTimeZone() {
        return this.outTimeZone;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>GenericValue</code>
     */
    public GenericValue getOutUserLogin() {
        return this.outUserLogin;
    }

    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inCheckDataOnly the inCheckDataOnly to set
    */
    public void setInCheckDataOnly(String inCheckDataOnly) {
        this.inParameters.add("checkDataOnly");
        this.inCheckDataOnly = inCheckDataOnly;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inCreateDummyFks the inCreateDummyFks to set
    */
    public void setInCreateDummyFks(String inCreateDummyFks) {
        this.inParameters.add("createDummyFks");
        this.inCreateDummyFks = inCreateDummyFks;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inLocale the inLocale to set
    */
    public void setInLocale(Locale inLocale) {
        this.inParameters.add("locale");
        this.inLocale = inLocale;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inMaintainTimeStamps the inMaintainTimeStamps to set
    */
    public void setInMaintainTimeStamps(String inMaintainTimeStamps) {
        this.inParameters.add("maintainTimeStamps");
        this.inMaintainTimeStamps = inMaintainTimeStamps;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inMostlyInserts the inMostlyInserts to set
    */
    public void setInMostlyInserts(String inMostlyInserts) {
        this.inParameters.add("mostlyInserts");
        this.inMostlyInserts = inMostlyInserts;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inOverrideDelegator the inOverrideDelegator to set
    */
    public void setInOverrideDelegator(String inOverrideDelegator) {
        this.inParameters.add("overrideDelegator");
        this.inOverrideDelegator = inOverrideDelegator;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inOverrideGroup the inOverrideGroup to set
    */
    public void setInOverrideGroup(String inOverrideGroup) {
        this.inParameters.add("overrideGroup");
        this.inOverrideGroup = inOverrideGroup;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inReaders the inReaders to set
    */
    public void setInReaders(String inReaders) {
        this.inParameters.add("readers");
        this.inReaders = inReaders;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inTimeZone the inTimeZone to set
    */
    public void setInTimeZone(TimeZone inTimeZone) {
        this.inParameters.add("timeZone");
        this.inTimeZone = inTimeZone;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inTxTimeout the inTxTimeout to set
    */
    public void setInTxTimeout(Integer inTxTimeout) {
        this.inParameters.add("txTimeout");
        this.inTxTimeout = inTxTimeout;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inUserLogin the inUserLogin to set
    */
    public void setInUserLogin(GenericValue inUserLogin) {
        this.inParameters.add("userLogin");
        this.inUserLogin = inUserLogin;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param outErrorMessage the outErrorMessage to set
    */
    public void setOutErrorMessage(String outErrorMessage) {
        this.outParameters.add("errorMessage");
        this.outErrorMessage = outErrorMessage;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param outErrorMessageList the outErrorMessageList to set
    */
    public void setOutErrorMessageList(List outErrorMessageList) {
        this.outParameters.add("errorMessageList");
        this.outErrorMessageList = outErrorMessageList;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param outLocale the outLocale to set
    */
    public void setOutLocale(Locale outLocale) {
        this.outParameters.add("locale");
        this.outLocale = outLocale;
    }
    /**
     * Auto generated value setter.
     * This parameter is required.
     * @param outMessages the outMessages to set
    */
    public void setOutMessages(List outMessages) {
        this.outParameters.add("messages");
        this.outMessages = outMessages;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param outResponseMessage the outResponseMessage to set
    */
    public void setOutResponseMessage(String outResponseMessage) {
        this.outParameters.add("responseMessage");
        this.outResponseMessage = outResponseMessage;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param outSuccessMessage the outSuccessMessage to set
    */
    public void setOutSuccessMessage(String outSuccessMessage) {
        this.outParameters.add("successMessage");
        this.outSuccessMessage = outSuccessMessage;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param outSuccessMessageList the outSuccessMessageList to set
    */
    public void setOutSuccessMessageList(List outSuccessMessageList) {
        this.outParameters.add("successMessageList");
        this.outSuccessMessageList = outSuccessMessageList;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param outTimeZone the outTimeZone to set
    */
    public void setOutTimeZone(TimeZone outTimeZone) {
        this.outParameters.add("timeZone");
        this.outTimeZone = outTimeZone;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param outUserLogin the outUserLogin to set
    */
    public void setOutUserLogin(GenericValue outUserLogin) {
        this.outParameters.add("userLogin");
        this.outUserLogin = outUserLogin;
    }

    /** {@inheritDoc} */
    public String name() {
        return NAME;
    }

    /** {@inheritDoc} */
    public Boolean requiresAuthentication() {
        return REQUIRES_AUTHENTICATION;
    }

    /** {@inheritDoc} */
    public Boolean requiresNewTransaction() {
        return REQUIRES_NEW_TRANSACTION;
    }

    /** {@inheritDoc} */
    public Boolean usesTransaction() {
        return USES_TRANSACTION;
    }

    /** {@inheritDoc} */
    public Map<String, Object> inputMap() {
        Map<String, Object> mapValue = new FastMap<String, Object>();
        if (inParameters.contains("checkDataOnly")) mapValue.put("checkDataOnly", getInCheckDataOnly());
        if (inParameters.contains("createDummyFks")) mapValue.put("createDummyFks", getInCreateDummyFks());
        if (inParameters.contains("locale")) mapValue.put("locale", getInLocale());
        if (inParameters.contains("maintainTimeStamps")) mapValue.put("maintainTimeStamps", getInMaintainTimeStamps());
        if (inParameters.contains("mostlyInserts")) mapValue.put("mostlyInserts", getInMostlyInserts());
        if (inParameters.contains("overrideDelegator")) mapValue.put("overrideDelegator", getInOverrideDelegator());
        if (inParameters.contains("overrideGroup")) mapValue.put("overrideGroup", getInOverrideGroup());
        if (inParameters.contains("readers")) mapValue.put("readers", getInReaders());
        if (inParameters.contains("timeZone")) mapValue.put("timeZone", getInTimeZone());
        if (inParameters.contains("txTimeout")) mapValue.put("txTimeout", getInTxTimeout());
        if (inParameters.contains("userLogin")) mapValue.put("userLogin", getInUserLogin());
        // allow the User set to override the userLogin
        if (getUser() != null) mapValue.put("userLogin", getUser().getOfbizUserLogin());
        return mapValue;
    }

    /** {@inheritDoc} */
    public Map<String, Object> outputMap() {
        Map<String, Object> mapValue = new FastMap<String, Object>();
        if (outParameters.contains("errorMessage")) mapValue.put("errorMessage", getOutErrorMessage());
        if (outParameters.contains("errorMessageList")) mapValue.put("errorMessageList", getOutErrorMessageList());
        if (outParameters.contains("locale")) mapValue.put("locale", getOutLocale());
        if (outParameters.contains("messages")) mapValue.put("messages", getOutMessages());
        if (outParameters.contains("responseMessage")) mapValue.put("responseMessage", getOutResponseMessage());
        if (outParameters.contains("successMessage")) mapValue.put("successMessage", getOutSuccessMessage());
        if (outParameters.contains("successMessageList")) mapValue.put("successMessageList", getOutSuccessMessageList());
        if (outParameters.contains("timeZone")) mapValue.put("timeZone", getOutTimeZone());
        if (outParameters.contains("userLogin")) mapValue.put("userLogin", getOutUserLogin());
        return mapValue;
    }

    /** {@inheritDoc} */
    public void putAllInput(Map<String, Object> mapValue) {
        if (mapValue.containsKey("checkDataOnly")) setInCheckDataOnly((String) mapValue.get("checkDataOnly"));
        if (mapValue.containsKey("createDummyFks")) setInCreateDummyFks((String) mapValue.get("createDummyFks"));
        if (mapValue.containsKey("locale")) setInLocale((Locale) mapValue.get("locale"));
        if (mapValue.containsKey("maintainTimeStamps")) setInMaintainTimeStamps((String) mapValue.get("maintainTimeStamps"));
        if (mapValue.containsKey("mostlyInserts")) setInMostlyInserts((String) mapValue.get("mostlyInserts"));
        if (mapValue.containsKey("overrideDelegator")) setInOverrideDelegator((String) mapValue.get("overrideDelegator"));
        if (mapValue.containsKey("overrideGroup")) setInOverrideGroup((String) mapValue.get("overrideGroup"));
        if (mapValue.containsKey("readers")) setInReaders((String) mapValue.get("readers"));
        if (mapValue.containsKey("timeZone")) setInTimeZone((TimeZone) mapValue.get("timeZone"));
        if (mapValue.containsKey("txTimeout")) setInTxTimeout((Integer) mapValue.get("txTimeout"));
        if (mapValue.containsKey("userLogin")) setInUserLogin((GenericValue) mapValue.get("userLogin"));
    }

    /** {@inheritDoc} */
    public void putAllOutput(Map<String, Object> mapValue) {
        if (mapValue.containsKey("errorMessage")) setOutErrorMessage((String) mapValue.get("errorMessage"));
        if (mapValue.containsKey("errorMessageList")) setOutErrorMessageList((List) mapValue.get("errorMessageList"));
        if (mapValue.containsKey("locale")) setOutLocale((Locale) mapValue.get("locale"));
        if (mapValue.containsKey("messages")) setOutMessages((List) mapValue.get("messages"));
        if (mapValue.containsKey("responseMessage")) setOutResponseMessage((String) mapValue.get("responseMessage"));
        if (mapValue.containsKey("successMessage")) setOutSuccessMessage((String) mapValue.get("successMessage"));
        if (mapValue.containsKey("successMessageList")) setOutSuccessMessageList((List) mapValue.get("successMessageList"));
        if (mapValue.containsKey("timeZone")) setOutTimeZone((TimeZone) mapValue.get("timeZone"));
        if (mapValue.containsKey("userLogin")) setOutUserLogin((GenericValue) mapValue.get("userLogin"));
    }

    /**
     * Construct a <code>EntityImportReadersService</code> from the input values of the given <code>EntityImportReadersService</code>.
     * @param input a <code>EntityImportReadersService</code>
     */
    public static EntityImportReadersService fromInput(EntityImportReadersService input) {
        EntityImportReadersService service = new EntityImportReadersService();
        return fromInput(input.inputMap());
    }

    /**
     * Construct a <code>EntityImportReadersService</code> from the output values of the given <code>EntityImportReadersService</code>.
     * @param output a <code>EntityImportReadersService</code>
     */
    public static EntityImportReadersService fromOutput(EntityImportReadersService output) {
        EntityImportReadersService service = new EntityImportReadersService();
        service.putAllOutput(output.outputMap());
        return service;
    }

    /**
     * Construct a <code>EntityImportReadersService</code> from the given input <code>Map</code>.
     * @param mapValue the service input <code>Map</code>
     */
    public static EntityImportReadersService fromInput(Map<String, Object> mapValue) {
        EntityImportReadersService service = new EntityImportReadersService();
        service.putAllInput(mapValue);
        if (mapValue.containsKey("userLogin")) {
            GenericValue userGv = (GenericValue) mapValue.get("userLogin");
            if (userGv != null) {
                service.setUser(new User(userGv, userGv.getDelegator()));
            }
        }
        return service;
    }

    /**
     * Construct a <code>EntityImportReadersService</code> from the given output <code>Map</code>.
     * @param mapValue the service output <code>Map</code>
     */
    public static EntityImportReadersService fromOutput(Map<String, Object> mapValue) {
        EntityImportReadersService service = new EntityImportReadersService();
        service.putAllOutput(mapValue);
        return service;
    }
}
