package org.opentaps.base.services;

/*
 * Copyright (c) Open Source Strategies, Inc.
 *
 * Opentaps is free software: you can redistribute it and/or modify it
 * under the terms of the GNU Affero General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Opentaps is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with Opentaps.  If not, see <http://www.gnu.org/licenses/>.
 */

// DO NOT EDIT THIS FILE!  THIS IS AUTO GENERATED AND WILL GET WRITTEN OVER PERIODICALLY WHEN THE SERVICE MODEL CHANGES
// EXTEND THIS CLASS INSTEAD.

import org.opentaps.foundation.service.ServiceWrapper;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import java.util.Set;
import java.util.TimeZone;
import javolution.util.FastMap;
import javolution.util.FastSet;
import org.ofbiz.entity.GenericValue;
import org.opentaps.foundation.infrastructure.User;

/**
 * Generates a trial balance for a company based as of the specified date.
 * Auto generated base service entity getTrialBalanceForDate.
 *
 * Engine: java
 * Location: com.opensourcestrategies.financials.financials.FinancialServices
 * Invoke: getTrialBalanceForDate
 * Defined in: hot-deploy/financials/servicedef/services_financials.xml
 */
public class GetTrialBalanceForDateService extends ServiceWrapper {

    /** The service name as used by the service engine. */
    public static final String NAME = "getTrialBalanceForDate";
    /** If the service requires authentication. */
    public static final Boolean REQUIRES_AUTHENTICATION = Boolean.TRUE;
    /** If the service requires a new transaction. */
    public static final Boolean REQUIRES_NEW_TRANSACTION = Boolean.FALSE;
    /** If the service uses a transaction. */
    public static final Boolean USES_TRANSACTION = Boolean.FALSE;

    /** The enumeration of input parameters. */
    public static enum In {
        asOfDate("asOfDate"),
        glFiscalTypeId("glFiscalTypeId"),
        locale("locale"),
        organizationPartyId("organizationPartyId"),
        tag1("tag1"),
        tag10("tag10"),
        tag2("tag2"),
        tag3("tag3"),
        tag4("tag4"),
        tag5("tag5"),
        tag6("tag6"),
        tag7("tag7"),
        tag8("tag8"),
        tag9("tag9"),
        timeZone("timeZone"),
        userLogin("userLogin");
        private final String _fieldName;
        private In(String name) { this._fieldName = name; }
        public String getName() { return this._fieldName; }
    }

    public static enum Out {
        assetAccountBalances("assetAccountBalances"),
        assetAccountCredits("assetAccountCredits"),
        assetAccountDebits("assetAccountDebits"),
        equityAccountBalances("equityAccountBalances"),
        equityAccountCredits("equityAccountCredits"),
        equityAccountDebits("equityAccountDebits"),
        errorMessage("errorMessage"),
        errorMessageList("errorMessageList"),
        expenseAccountBalances("expenseAccountBalances"),
        expenseAccountCredits("expenseAccountCredits"),
        expenseAccountDebits("expenseAccountDebits"),
        incomeAccountBalances("incomeAccountBalances"),
        incomeAccountCredits("incomeAccountCredits"),
        incomeAccountDebits("incomeAccountDebits"),
        liabilityAccountBalances("liabilityAccountBalances"),
        liabilityAccountCredits("liabilityAccountCredits"),
        liabilityAccountDebits("liabilityAccountDebits"),
        locale("locale"),
        otherAccountBalances("otherAccountBalances"),
        otherAccountCredits("otherAccountCredits"),
        otherAccountDebits("otherAccountDebits"),
        responseMessage("responseMessage"),
        revenueAccountBalances("revenueAccountBalances"),
        revenueAccountCredits("revenueAccountCredits"),
        revenueAccountDebits("revenueAccountDebits"),
        successMessage("successMessage"),
        successMessageList("successMessageList"),
        timeZone("timeZone"),
        totalBalances("totalBalances"),
        totalCredits("totalCredits"),
        totalDebits("totalDebits"),
        userLogin("userLogin");
        private final String _fieldName;
        private Out(String name) { this._fieldName = name; }
        public String getName() { return this._fieldName; }
    }

    /**
     * Creates a new <code>GetTrialBalanceForDateService</code> instance.
     */
    public GetTrialBalanceForDateService() {
        super();
    }

    /**
     * Creates a new <code>GetTrialBalanceForDateService</code> instance.
     * @param user an <code>User</code> value
     */
    public GetTrialBalanceForDateService(User user) {
        super(user);
    }

    private Timestamp inAsOfDate;
    private String inGlFiscalTypeId;
    private Locale inLocale;
    private String inOrganizationPartyId;
    private String inTag1;
    private String inTag10;
    private String inTag2;
    private String inTag3;
    private String inTag4;
    private String inTag5;
    private String inTag6;
    private String inTag7;
    private String inTag8;
    private String inTag9;
    private TimeZone inTimeZone;
    private GenericValue inUserLogin;
    private Map outAssetAccountBalances;
    private Map outAssetAccountCredits;
    private Map outAssetAccountDebits;
    private Map outEquityAccountBalances;
    private Map outEquityAccountCredits;
    private Map outEquityAccountDebits;
    private String outErrorMessage;
    private List outErrorMessageList;
    private Map outExpenseAccountBalances;
    private Map outExpenseAccountCredits;
    private Map outExpenseAccountDebits;
    private Map outIncomeAccountBalances;
    private Map outIncomeAccountCredits;
    private Map outIncomeAccountDebits;
    private Map outLiabilityAccountBalances;
    private Map outLiabilityAccountCredits;
    private Map outLiabilityAccountDebits;
    private Locale outLocale;
    private Map outOtherAccountBalances;
    private Map outOtherAccountCredits;
    private Map outOtherAccountDebits;
    private String outResponseMessage;
    private Map outRevenueAccountBalances;
    private Map outRevenueAccountCredits;
    private Map outRevenueAccountDebits;
    private String outSuccessMessage;
    private List outSuccessMessageList;
    private TimeZone outTimeZone;
    private BigDecimal outTotalBalances;
    private BigDecimal outTotalCredits;
    private BigDecimal outTotalDebits;
    private GenericValue outUserLogin;

    private Set<String> inParameters = FastSet.newInstance();
    private Set<String> outParameters = FastSet.newInstance();

    /**
     * Auto generated value accessor.
     * This parameter is required.
     * @return <code>Timestamp</code>
     */
    public Timestamp getInAsOfDate() {
        return this.inAsOfDate;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInGlFiscalTypeId() {
        return this.inGlFiscalTypeId;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>Locale</code>
     */
    public Locale getInLocale() {
        return this.inLocale;
    }
    /**
     * Auto generated value accessor.
     * This parameter is required.
     * @return <code>String</code>
     */
    public String getInOrganizationPartyId() {
        return this.inOrganizationPartyId;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInTag1() {
        return this.inTag1;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInTag10() {
        return this.inTag10;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInTag2() {
        return this.inTag2;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInTag3() {
        return this.inTag3;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInTag4() {
        return this.inTag4;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInTag5() {
        return this.inTag5;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInTag6() {
        return this.inTag6;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInTag7() {
        return this.inTag7;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInTag8() {
        return this.inTag8;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInTag9() {
        return this.inTag9;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>TimeZone</code>
     */
    public TimeZone getInTimeZone() {
        return this.inTimeZone;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>GenericValue</code>
     */
    public GenericValue getInUserLogin() {
        return this.inUserLogin;
    }
    /**
     * Auto generated value accessor.
     * This parameter is required.
     * @return <code>Map</code>
     */
    public Map getOutAssetAccountBalances() {
        return this.outAssetAccountBalances;
    }
    /**
     * Auto generated value accessor.
     * This parameter is required.
     * @return <code>Map</code>
     */
    public Map getOutAssetAccountCredits() {
        return this.outAssetAccountCredits;
    }
    /**
     * Auto generated value accessor.
     * This parameter is required.
     * @return <code>Map</code>
     */
    public Map getOutAssetAccountDebits() {
        return this.outAssetAccountDebits;
    }
    /**
     * Auto generated value accessor.
     * This parameter is required.
     * @return <code>Map</code>
     */
    public Map getOutEquityAccountBalances() {
        return this.outEquityAccountBalances;
    }
    /**
     * Auto generated value accessor.
     * This parameter is required.
     * @return <code>Map</code>
     */
    public Map getOutEquityAccountCredits() {
        return this.outEquityAccountCredits;
    }
    /**
     * Auto generated value accessor.
     * This parameter is required.
     * @return <code>Map</code>
     */
    public Map getOutEquityAccountDebits() {
        return this.outEquityAccountDebits;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getOutErrorMessage() {
        return this.outErrorMessage;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>List</code>
     */
    public List getOutErrorMessageList() {
        return this.outErrorMessageList;
    }
    /**
     * Auto generated value accessor.
     * This parameter is required.
     * @return <code>Map</code>
     */
    public Map getOutExpenseAccountBalances() {
        return this.outExpenseAccountBalances;
    }
    /**
     * Auto generated value accessor.
     * This parameter is required.
     * @return <code>Map</code>
     */
    public Map getOutExpenseAccountCredits() {
        return this.outExpenseAccountCredits;
    }
    /**
     * Auto generated value accessor.
     * This parameter is required.
     * @return <code>Map</code>
     */
    public Map getOutExpenseAccountDebits() {
        return this.outExpenseAccountDebits;
    }
    /**
     * Auto generated value accessor.
     * This parameter is required.
     * @return <code>Map</code>
     */
    public Map getOutIncomeAccountBalances() {
        return this.outIncomeAccountBalances;
    }
    /**
     * Auto generated value accessor.
     * This parameter is required.
     * @return <code>Map</code>
     */
    public Map getOutIncomeAccountCredits() {
        return this.outIncomeAccountCredits;
    }
    /**
     * Auto generated value accessor.
     * This parameter is required.
     * @return <code>Map</code>
     */
    public Map getOutIncomeAccountDebits() {
        return this.outIncomeAccountDebits;
    }
    /**
     * Auto generated value accessor.
     * This parameter is required.
     * @return <code>Map</code>
     */
    public Map getOutLiabilityAccountBalances() {
        return this.outLiabilityAccountBalances;
    }
    /**
     * Auto generated value accessor.
     * This parameter is required.
     * @return <code>Map</code>
     */
    public Map getOutLiabilityAccountCredits() {
        return this.outLiabilityAccountCredits;
    }
    /**
     * Auto generated value accessor.
     * This parameter is required.
     * @return <code>Map</code>
     */
    public Map getOutLiabilityAccountDebits() {
        return this.outLiabilityAccountDebits;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>Locale</code>
     */
    public Locale getOutLocale() {
        return this.outLocale;
    }
    /**
     * Auto generated value accessor.
     * This parameter is required.
     * @return <code>Map</code>
     */
    public Map getOutOtherAccountBalances() {
        return this.outOtherAccountBalances;
    }
    /**
     * Auto generated value accessor.
     * This parameter is required.
     * @return <code>Map</code>
     */
    public Map getOutOtherAccountCredits() {
        return this.outOtherAccountCredits;
    }
    /**
     * Auto generated value accessor.
     * This parameter is required.
     * @return <code>Map</code>
     */
    public Map getOutOtherAccountDebits() {
        return this.outOtherAccountDebits;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getOutResponseMessage() {
        return this.outResponseMessage;
    }
    /**
     * Auto generated value accessor.
     * This parameter is required.
     * @return <code>Map</code>
     */
    public Map getOutRevenueAccountBalances() {
        return this.outRevenueAccountBalances;
    }
    /**
     * Auto generated value accessor.
     * This parameter is required.
     * @return <code>Map</code>
     */
    public Map getOutRevenueAccountCredits() {
        return this.outRevenueAccountCredits;
    }
    /**
     * Auto generated value accessor.
     * This parameter is required.
     * @return <code>Map</code>
     */
    public Map getOutRevenueAccountDebits() {
        return this.outRevenueAccountDebits;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getOutSuccessMessage() {
        return this.outSuccessMessage;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>List</code>
     */
    public List getOutSuccessMessageList() {
        return this.outSuccessMessageList;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>TimeZone</code>
     */
    public TimeZone getOutTimeZone() {
        return this.outTimeZone;
    }
    /**
     * Auto generated value accessor.
     * This parameter is required.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getOutTotalBalances() {
        return this.outTotalBalances;
    }
    /**
     * Auto generated value accessor.
     * This parameter is required.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getOutTotalCredits() {
        return this.outTotalCredits;
    }
    /**
     * Auto generated value accessor.
     * This parameter is required.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getOutTotalDebits() {
        return this.outTotalDebits;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>GenericValue</code>
     */
    public GenericValue getOutUserLogin() {
        return this.outUserLogin;
    }

    /**
     * Auto generated value setter.
     * This parameter is required.
     * @param inAsOfDate the inAsOfDate to set
    */
    public void setInAsOfDate(Timestamp inAsOfDate) {
        this.inParameters.add("asOfDate");
        this.inAsOfDate = inAsOfDate;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inGlFiscalTypeId the inGlFiscalTypeId to set
    */
    public void setInGlFiscalTypeId(String inGlFiscalTypeId) {
        this.inParameters.add("glFiscalTypeId");
        this.inGlFiscalTypeId = inGlFiscalTypeId;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inLocale the inLocale to set
    */
    public void setInLocale(Locale inLocale) {
        this.inParameters.add("locale");
        this.inLocale = inLocale;
    }
    /**
     * Auto generated value setter.
     * This parameter is required.
     * @param inOrganizationPartyId the inOrganizationPartyId to set
    */
    public void setInOrganizationPartyId(String inOrganizationPartyId) {
        this.inParameters.add("organizationPartyId");
        this.inOrganizationPartyId = inOrganizationPartyId;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inTag1 the inTag1 to set
    */
    public void setInTag1(String inTag1) {
        this.inParameters.add("tag1");
        this.inTag1 = inTag1;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inTag10 the inTag10 to set
    */
    public void setInTag10(String inTag10) {
        this.inParameters.add("tag10");
        this.inTag10 = inTag10;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inTag2 the inTag2 to set
    */
    public void setInTag2(String inTag2) {
        this.inParameters.add("tag2");
        this.inTag2 = inTag2;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inTag3 the inTag3 to set
    */
    public void setInTag3(String inTag3) {
        this.inParameters.add("tag3");
        this.inTag3 = inTag3;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inTag4 the inTag4 to set
    */
    public void setInTag4(String inTag4) {
        this.inParameters.add("tag4");
        this.inTag4 = inTag4;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inTag5 the inTag5 to set
    */
    public void setInTag5(String inTag5) {
        this.inParameters.add("tag5");
        this.inTag5 = inTag5;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inTag6 the inTag6 to set
    */
    public void setInTag6(String inTag6) {
        this.inParameters.add("tag6");
        this.inTag6 = inTag6;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inTag7 the inTag7 to set
    */
    public void setInTag7(String inTag7) {
        this.inParameters.add("tag7");
        this.inTag7 = inTag7;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inTag8 the inTag8 to set
    */
    public void setInTag8(String inTag8) {
        this.inParameters.add("tag8");
        this.inTag8 = inTag8;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inTag9 the inTag9 to set
    */
    public void setInTag9(String inTag9) {
        this.inParameters.add("tag9");
        this.inTag9 = inTag9;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inTimeZone the inTimeZone to set
    */
    public void setInTimeZone(TimeZone inTimeZone) {
        this.inParameters.add("timeZone");
        this.inTimeZone = inTimeZone;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inUserLogin the inUserLogin to set
    */
    public void setInUserLogin(GenericValue inUserLogin) {
        this.inParameters.add("userLogin");
        this.inUserLogin = inUserLogin;
    }
    /**
     * Auto generated value setter.
     * This parameter is required.
     * @param outAssetAccountBalances the outAssetAccountBalances to set
    */
    public void setOutAssetAccountBalances(Map outAssetAccountBalances) {
        this.outParameters.add("assetAccountBalances");
        this.outAssetAccountBalances = outAssetAccountBalances;
    }
    /**
     * Auto generated value setter.
     * This parameter is required.
     * @param outAssetAccountCredits the outAssetAccountCredits to set
    */
    public void setOutAssetAccountCredits(Map outAssetAccountCredits) {
        this.outParameters.add("assetAccountCredits");
        this.outAssetAccountCredits = outAssetAccountCredits;
    }
    /**
     * Auto generated value setter.
     * This parameter is required.
     * @param outAssetAccountDebits the outAssetAccountDebits to set
    */
    public void setOutAssetAccountDebits(Map outAssetAccountDebits) {
        this.outParameters.add("assetAccountDebits");
        this.outAssetAccountDebits = outAssetAccountDebits;
    }
    /**
     * Auto generated value setter.
     * This parameter is required.
     * @param outEquityAccountBalances the outEquityAccountBalances to set
    */
    public void setOutEquityAccountBalances(Map outEquityAccountBalances) {
        this.outParameters.add("equityAccountBalances");
        this.outEquityAccountBalances = outEquityAccountBalances;
    }
    /**
     * Auto generated value setter.
     * This parameter is required.
     * @param outEquityAccountCredits the outEquityAccountCredits to set
    */
    public void setOutEquityAccountCredits(Map outEquityAccountCredits) {
        this.outParameters.add("equityAccountCredits");
        this.outEquityAccountCredits = outEquityAccountCredits;
    }
    /**
     * Auto generated value setter.
     * This parameter is required.
     * @param outEquityAccountDebits the outEquityAccountDebits to set
    */
    public void setOutEquityAccountDebits(Map outEquityAccountDebits) {
        this.outParameters.add("equityAccountDebits");
        this.outEquityAccountDebits = outEquityAccountDebits;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param outErrorMessage the outErrorMessage to set
    */
    public void setOutErrorMessage(String outErrorMessage) {
        this.outParameters.add("errorMessage");
        this.outErrorMessage = outErrorMessage;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param outErrorMessageList the outErrorMessageList to set
    */
    public void setOutErrorMessageList(List outErrorMessageList) {
        this.outParameters.add("errorMessageList");
        this.outErrorMessageList = outErrorMessageList;
    }
    /**
     * Auto generated value setter.
     * This parameter is required.
     * @param outExpenseAccountBalances the outExpenseAccountBalances to set
    */
    public void setOutExpenseAccountBalances(Map outExpenseAccountBalances) {
        this.outParameters.add("expenseAccountBalances");
        this.outExpenseAccountBalances = outExpenseAccountBalances;
    }
    /**
     * Auto generated value setter.
     * This parameter is required.
     * @param outExpenseAccountCredits the outExpenseAccountCredits to set
    */
    public void setOutExpenseAccountCredits(Map outExpenseAccountCredits) {
        this.outParameters.add("expenseAccountCredits");
        this.outExpenseAccountCredits = outExpenseAccountCredits;
    }
    /**
     * Auto generated value setter.
     * This parameter is required.
     * @param outExpenseAccountDebits the outExpenseAccountDebits to set
    */
    public void setOutExpenseAccountDebits(Map outExpenseAccountDebits) {
        this.outParameters.add("expenseAccountDebits");
        this.outExpenseAccountDebits = outExpenseAccountDebits;
    }
    /**
     * Auto generated value setter.
     * This parameter is required.
     * @param outIncomeAccountBalances the outIncomeAccountBalances to set
    */
    public void setOutIncomeAccountBalances(Map outIncomeAccountBalances) {
        this.outParameters.add("incomeAccountBalances");
        this.outIncomeAccountBalances = outIncomeAccountBalances;
    }
    /**
     * Auto generated value setter.
     * This parameter is required.
     * @param outIncomeAccountCredits the outIncomeAccountCredits to set
    */
    public void setOutIncomeAccountCredits(Map outIncomeAccountCredits) {
        this.outParameters.add("incomeAccountCredits");
        this.outIncomeAccountCredits = outIncomeAccountCredits;
    }
    /**
     * Auto generated value setter.
     * This parameter is required.
     * @param outIncomeAccountDebits the outIncomeAccountDebits to set
    */
    public void setOutIncomeAccountDebits(Map outIncomeAccountDebits) {
        this.outParameters.add("incomeAccountDebits");
        this.outIncomeAccountDebits = outIncomeAccountDebits;
    }
    /**
     * Auto generated value setter.
     * This parameter is required.
     * @param outLiabilityAccountBalances the outLiabilityAccountBalances to set
    */
    public void setOutLiabilityAccountBalances(Map outLiabilityAccountBalances) {
        this.outParameters.add("liabilityAccountBalances");
        this.outLiabilityAccountBalances = outLiabilityAccountBalances;
    }
    /**
     * Auto generated value setter.
     * This parameter is required.
     * @param outLiabilityAccountCredits the outLiabilityAccountCredits to set
    */
    public void setOutLiabilityAccountCredits(Map outLiabilityAccountCredits) {
        this.outParameters.add("liabilityAccountCredits");
        this.outLiabilityAccountCredits = outLiabilityAccountCredits;
    }
    /**
     * Auto generated value setter.
     * This parameter is required.
     * @param outLiabilityAccountDebits the outLiabilityAccountDebits to set
    */
    public void setOutLiabilityAccountDebits(Map outLiabilityAccountDebits) {
        this.outParameters.add("liabilityAccountDebits");
        this.outLiabilityAccountDebits = outLiabilityAccountDebits;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param outLocale the outLocale to set
    */
    public void setOutLocale(Locale outLocale) {
        this.outParameters.add("locale");
        this.outLocale = outLocale;
    }
    /**
     * Auto generated value setter.
     * This parameter is required.
     * @param outOtherAccountBalances the outOtherAccountBalances to set
    */
    public void setOutOtherAccountBalances(Map outOtherAccountBalances) {
        this.outParameters.add("otherAccountBalances");
        this.outOtherAccountBalances = outOtherAccountBalances;
    }
    /**
     * Auto generated value setter.
     * This parameter is required.
     * @param outOtherAccountCredits the outOtherAccountCredits to set
    */
    public void setOutOtherAccountCredits(Map outOtherAccountCredits) {
        this.outParameters.add("otherAccountCredits");
        this.outOtherAccountCredits = outOtherAccountCredits;
    }
    /**
     * Auto generated value setter.
     * This parameter is required.
     * @param outOtherAccountDebits the outOtherAccountDebits to set
    */
    public void setOutOtherAccountDebits(Map outOtherAccountDebits) {
        this.outParameters.add("otherAccountDebits");
        this.outOtherAccountDebits = outOtherAccountDebits;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param outResponseMessage the outResponseMessage to set
    */
    public void setOutResponseMessage(String outResponseMessage) {
        this.outParameters.add("responseMessage");
        this.outResponseMessage = outResponseMessage;
    }
    /**
     * Auto generated value setter.
     * This parameter is required.
     * @param outRevenueAccountBalances the outRevenueAccountBalances to set
    */
    public void setOutRevenueAccountBalances(Map outRevenueAccountBalances) {
        this.outParameters.add("revenueAccountBalances");
        this.outRevenueAccountBalances = outRevenueAccountBalances;
    }
    /**
     * Auto generated value setter.
     * This parameter is required.
     * @param outRevenueAccountCredits the outRevenueAccountCredits to set
    */
    public void setOutRevenueAccountCredits(Map outRevenueAccountCredits) {
        this.outParameters.add("revenueAccountCredits");
        this.outRevenueAccountCredits = outRevenueAccountCredits;
    }
    /**
     * Auto generated value setter.
     * This parameter is required.
     * @param outRevenueAccountDebits the outRevenueAccountDebits to set
    */
    public void setOutRevenueAccountDebits(Map outRevenueAccountDebits) {
        this.outParameters.add("revenueAccountDebits");
        this.outRevenueAccountDebits = outRevenueAccountDebits;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param outSuccessMessage the outSuccessMessage to set
    */
    public void setOutSuccessMessage(String outSuccessMessage) {
        this.outParameters.add("successMessage");
        this.outSuccessMessage = outSuccessMessage;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param outSuccessMessageList the outSuccessMessageList to set
    */
    public void setOutSuccessMessageList(List outSuccessMessageList) {
        this.outParameters.add("successMessageList");
        this.outSuccessMessageList = outSuccessMessageList;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param outTimeZone the outTimeZone to set
    */
    public void setOutTimeZone(TimeZone outTimeZone) {
        this.outParameters.add("timeZone");
        this.outTimeZone = outTimeZone;
    }
    /**
     * Auto generated value setter.
     * This parameter is required.
     * @param outTotalBalances the outTotalBalances to set
    */
    public void setOutTotalBalances(BigDecimal outTotalBalances) {
        this.outParameters.add("totalBalances");
        this.outTotalBalances = outTotalBalances;
    }
    /**
     * Auto generated value setter.
     * This parameter is required.
     * @param outTotalCredits the outTotalCredits to set
    */
    public void setOutTotalCredits(BigDecimal outTotalCredits) {
        this.outParameters.add("totalCredits");
        this.outTotalCredits = outTotalCredits;
    }
    /**
     * Auto generated value setter.
     * This parameter is required.
     * @param outTotalDebits the outTotalDebits to set
    */
    public void setOutTotalDebits(BigDecimal outTotalDebits) {
        this.outParameters.add("totalDebits");
        this.outTotalDebits = outTotalDebits;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param outUserLogin the outUserLogin to set
    */
    public void setOutUserLogin(GenericValue outUserLogin) {
        this.outParameters.add("userLogin");
        this.outUserLogin = outUserLogin;
    }

    /** {@inheritDoc} */
    public String name() {
        return NAME;
    }

    /** {@inheritDoc} */
    public Boolean requiresAuthentication() {
        return REQUIRES_AUTHENTICATION;
    }

    /** {@inheritDoc} */
    public Boolean requiresNewTransaction() {
        return REQUIRES_NEW_TRANSACTION;
    }

    /** {@inheritDoc} */
    public Boolean usesTransaction() {
        return USES_TRANSACTION;
    }

    /** {@inheritDoc} */
    public Map<String, Object> inputMap() {
        Map<String, Object> mapValue = new FastMap<String, Object>();
        if (inParameters.contains("asOfDate")) mapValue.put("asOfDate", getInAsOfDate());
        if (inParameters.contains("glFiscalTypeId")) mapValue.put("glFiscalTypeId", getInGlFiscalTypeId());
        if (inParameters.contains("locale")) mapValue.put("locale", getInLocale());
        if (inParameters.contains("organizationPartyId")) mapValue.put("organizationPartyId", getInOrganizationPartyId());
        if (inParameters.contains("tag1")) mapValue.put("tag1", getInTag1());
        if (inParameters.contains("tag10")) mapValue.put("tag10", getInTag10());
        if (inParameters.contains("tag2")) mapValue.put("tag2", getInTag2());
        if (inParameters.contains("tag3")) mapValue.put("tag3", getInTag3());
        if (inParameters.contains("tag4")) mapValue.put("tag4", getInTag4());
        if (inParameters.contains("tag5")) mapValue.put("tag5", getInTag5());
        if (inParameters.contains("tag6")) mapValue.put("tag6", getInTag6());
        if (inParameters.contains("tag7")) mapValue.put("tag7", getInTag7());
        if (inParameters.contains("tag8")) mapValue.put("tag8", getInTag8());
        if (inParameters.contains("tag9")) mapValue.put("tag9", getInTag9());
        if (inParameters.contains("timeZone")) mapValue.put("timeZone", getInTimeZone());
        if (inParameters.contains("userLogin")) mapValue.put("userLogin", getInUserLogin());
        // allow the User set to override the userLogin
        if (getUser() != null) mapValue.put("userLogin", getUser().getOfbizUserLogin());
        return mapValue;
    }

    /** {@inheritDoc} */
    public Map<String, Object> outputMap() {
        Map<String, Object> mapValue = new FastMap<String, Object>();
        if (outParameters.contains("assetAccountBalances")) mapValue.put("assetAccountBalances", getOutAssetAccountBalances());
        if (outParameters.contains("assetAccountCredits")) mapValue.put("assetAccountCredits", getOutAssetAccountCredits());
        if (outParameters.contains("assetAccountDebits")) mapValue.put("assetAccountDebits", getOutAssetAccountDebits());
        if (outParameters.contains("equityAccountBalances")) mapValue.put("equityAccountBalances", getOutEquityAccountBalances());
        if (outParameters.contains("equityAccountCredits")) mapValue.put("equityAccountCredits", getOutEquityAccountCredits());
        if (outParameters.contains("equityAccountDebits")) mapValue.put("equityAccountDebits", getOutEquityAccountDebits());
        if (outParameters.contains("errorMessage")) mapValue.put("errorMessage", getOutErrorMessage());
        if (outParameters.contains("errorMessageList")) mapValue.put("errorMessageList", getOutErrorMessageList());
        if (outParameters.contains("expenseAccountBalances")) mapValue.put("expenseAccountBalances", getOutExpenseAccountBalances());
        if (outParameters.contains("expenseAccountCredits")) mapValue.put("expenseAccountCredits", getOutExpenseAccountCredits());
        if (outParameters.contains("expenseAccountDebits")) mapValue.put("expenseAccountDebits", getOutExpenseAccountDebits());
        if (outParameters.contains("incomeAccountBalances")) mapValue.put("incomeAccountBalances", getOutIncomeAccountBalances());
        if (outParameters.contains("incomeAccountCredits")) mapValue.put("incomeAccountCredits", getOutIncomeAccountCredits());
        if (outParameters.contains("incomeAccountDebits")) mapValue.put("incomeAccountDebits", getOutIncomeAccountDebits());
        if (outParameters.contains("liabilityAccountBalances")) mapValue.put("liabilityAccountBalances", getOutLiabilityAccountBalances());
        if (outParameters.contains("liabilityAccountCredits")) mapValue.put("liabilityAccountCredits", getOutLiabilityAccountCredits());
        if (outParameters.contains("liabilityAccountDebits")) mapValue.put("liabilityAccountDebits", getOutLiabilityAccountDebits());
        if (outParameters.contains("locale")) mapValue.put("locale", getOutLocale());
        if (outParameters.contains("otherAccountBalances")) mapValue.put("otherAccountBalances", getOutOtherAccountBalances());
        if (outParameters.contains("otherAccountCredits")) mapValue.put("otherAccountCredits", getOutOtherAccountCredits());
        if (outParameters.contains("otherAccountDebits")) mapValue.put("otherAccountDebits", getOutOtherAccountDebits());
        if (outParameters.contains("responseMessage")) mapValue.put("responseMessage", getOutResponseMessage());
        if (outParameters.contains("revenueAccountBalances")) mapValue.put("revenueAccountBalances", getOutRevenueAccountBalances());
        if (outParameters.contains("revenueAccountCredits")) mapValue.put("revenueAccountCredits", getOutRevenueAccountCredits());
        if (outParameters.contains("revenueAccountDebits")) mapValue.put("revenueAccountDebits", getOutRevenueAccountDebits());
        if (outParameters.contains("successMessage")) mapValue.put("successMessage", getOutSuccessMessage());
        if (outParameters.contains("successMessageList")) mapValue.put("successMessageList", getOutSuccessMessageList());
        if (outParameters.contains("timeZone")) mapValue.put("timeZone", getOutTimeZone());
        if (outParameters.contains("totalBalances")) mapValue.put("totalBalances", getOutTotalBalances());
        if (outParameters.contains("totalCredits")) mapValue.put("totalCredits", getOutTotalCredits());
        if (outParameters.contains("totalDebits")) mapValue.put("totalDebits", getOutTotalDebits());
        if (outParameters.contains("userLogin")) mapValue.put("userLogin", getOutUserLogin());
        return mapValue;
    }

    /** {@inheritDoc} */
    public void putAllInput(Map<String, Object> mapValue) {
        if (mapValue.containsKey("asOfDate")) setInAsOfDate((Timestamp) mapValue.get("asOfDate"));
        if (mapValue.containsKey("glFiscalTypeId")) setInGlFiscalTypeId((String) mapValue.get("glFiscalTypeId"));
        if (mapValue.containsKey("locale")) setInLocale((Locale) mapValue.get("locale"));
        if (mapValue.containsKey("organizationPartyId")) setInOrganizationPartyId((String) mapValue.get("organizationPartyId"));
        if (mapValue.containsKey("tag1")) setInTag1((String) mapValue.get("tag1"));
        if (mapValue.containsKey("tag10")) setInTag10((String) mapValue.get("tag10"));
        if (mapValue.containsKey("tag2")) setInTag2((String) mapValue.get("tag2"));
        if (mapValue.containsKey("tag3")) setInTag3((String) mapValue.get("tag3"));
        if (mapValue.containsKey("tag4")) setInTag4((String) mapValue.get("tag4"));
        if (mapValue.containsKey("tag5")) setInTag5((String) mapValue.get("tag5"));
        if (mapValue.containsKey("tag6")) setInTag6((String) mapValue.get("tag6"));
        if (mapValue.containsKey("tag7")) setInTag7((String) mapValue.get("tag7"));
        if (mapValue.containsKey("tag8")) setInTag8((String) mapValue.get("tag8"));
        if (mapValue.containsKey("tag9")) setInTag9((String) mapValue.get("tag9"));
        if (mapValue.containsKey("timeZone")) setInTimeZone((TimeZone) mapValue.get("timeZone"));
        if (mapValue.containsKey("userLogin")) setInUserLogin((GenericValue) mapValue.get("userLogin"));
    }

    /** {@inheritDoc} */
    public void putAllOutput(Map<String, Object> mapValue) {
        if (mapValue.containsKey("assetAccountBalances")) setOutAssetAccountBalances((Map) mapValue.get("assetAccountBalances"));
        if (mapValue.containsKey("assetAccountCredits")) setOutAssetAccountCredits((Map) mapValue.get("assetAccountCredits"));
        if (mapValue.containsKey("assetAccountDebits")) setOutAssetAccountDebits((Map) mapValue.get("assetAccountDebits"));
        if (mapValue.containsKey("equityAccountBalances")) setOutEquityAccountBalances((Map) mapValue.get("equityAccountBalances"));
        if (mapValue.containsKey("equityAccountCredits")) setOutEquityAccountCredits((Map) mapValue.get("equityAccountCredits"));
        if (mapValue.containsKey("equityAccountDebits")) setOutEquityAccountDebits((Map) mapValue.get("equityAccountDebits"));
        if (mapValue.containsKey("errorMessage")) setOutErrorMessage((String) mapValue.get("errorMessage"));
        if (mapValue.containsKey("errorMessageList")) setOutErrorMessageList((List) mapValue.get("errorMessageList"));
        if (mapValue.containsKey("expenseAccountBalances")) setOutExpenseAccountBalances((Map) mapValue.get("expenseAccountBalances"));
        if (mapValue.containsKey("expenseAccountCredits")) setOutExpenseAccountCredits((Map) mapValue.get("expenseAccountCredits"));
        if (mapValue.containsKey("expenseAccountDebits")) setOutExpenseAccountDebits((Map) mapValue.get("expenseAccountDebits"));
        if (mapValue.containsKey("incomeAccountBalances")) setOutIncomeAccountBalances((Map) mapValue.get("incomeAccountBalances"));
        if (mapValue.containsKey("incomeAccountCredits")) setOutIncomeAccountCredits((Map) mapValue.get("incomeAccountCredits"));
        if (mapValue.containsKey("incomeAccountDebits")) setOutIncomeAccountDebits((Map) mapValue.get("incomeAccountDebits"));
        if (mapValue.containsKey("liabilityAccountBalances")) setOutLiabilityAccountBalances((Map) mapValue.get("liabilityAccountBalances"));
        if (mapValue.containsKey("liabilityAccountCredits")) setOutLiabilityAccountCredits((Map) mapValue.get("liabilityAccountCredits"));
        if (mapValue.containsKey("liabilityAccountDebits")) setOutLiabilityAccountDebits((Map) mapValue.get("liabilityAccountDebits"));
        if (mapValue.containsKey("locale")) setOutLocale((Locale) mapValue.get("locale"));
        if (mapValue.containsKey("otherAccountBalances")) setOutOtherAccountBalances((Map) mapValue.get("otherAccountBalances"));
        if (mapValue.containsKey("otherAccountCredits")) setOutOtherAccountCredits((Map) mapValue.get("otherAccountCredits"));
        if (mapValue.containsKey("otherAccountDebits")) setOutOtherAccountDebits((Map) mapValue.get("otherAccountDebits"));
        if (mapValue.containsKey("responseMessage")) setOutResponseMessage((String) mapValue.get("responseMessage"));
        if (mapValue.containsKey("revenueAccountBalances")) setOutRevenueAccountBalances((Map) mapValue.get("revenueAccountBalances"));
        if (mapValue.containsKey("revenueAccountCredits")) setOutRevenueAccountCredits((Map) mapValue.get("revenueAccountCredits"));
        if (mapValue.containsKey("revenueAccountDebits")) setOutRevenueAccountDebits((Map) mapValue.get("revenueAccountDebits"));
        if (mapValue.containsKey("successMessage")) setOutSuccessMessage((String) mapValue.get("successMessage"));
        if (mapValue.containsKey("successMessageList")) setOutSuccessMessageList((List) mapValue.get("successMessageList"));
        if (mapValue.containsKey("timeZone")) setOutTimeZone((TimeZone) mapValue.get("timeZone"));
        if (mapValue.containsKey("totalBalances")) setOutTotalBalances((BigDecimal) mapValue.get("totalBalances"));
        if (mapValue.containsKey("totalCredits")) setOutTotalCredits((BigDecimal) mapValue.get("totalCredits"));
        if (mapValue.containsKey("totalDebits")) setOutTotalDebits((BigDecimal) mapValue.get("totalDebits"));
        if (mapValue.containsKey("userLogin")) setOutUserLogin((GenericValue) mapValue.get("userLogin"));
    }

    /**
     * Construct a <code>GetTrialBalanceForDateService</code> from the input values of the given <code>GetTrialBalanceForDateService</code>.
     * @param input a <code>GetTrialBalanceForDateService</code>
     */
    public static GetTrialBalanceForDateService fromInput(GetTrialBalanceForDateService input) {
        GetTrialBalanceForDateService service = new GetTrialBalanceForDateService();
        return fromInput(input.inputMap());
    }

    /**
     * Construct a <code>GetTrialBalanceForDateService</code> from the output values of the given <code>GetTrialBalanceForDateService</code>.
     * @param output a <code>GetTrialBalanceForDateService</code>
     */
    public static GetTrialBalanceForDateService fromOutput(GetTrialBalanceForDateService output) {
        GetTrialBalanceForDateService service = new GetTrialBalanceForDateService();
        service.putAllOutput(output.outputMap());
        return service;
    }

    /**
     * Construct a <code>GetTrialBalanceForDateService</code> from the given input <code>Map</code>.
     * @param mapValue the service input <code>Map</code>
     */
    public static GetTrialBalanceForDateService fromInput(Map<String, Object> mapValue) {
        GetTrialBalanceForDateService service = new GetTrialBalanceForDateService();
        service.putAllInput(mapValue);
        if (mapValue.containsKey("userLogin")) {
            GenericValue userGv = (GenericValue) mapValue.get("userLogin");
            if (userGv != null) {
                service.setUser(new User(userGv, userGv.getDelegator()));
            }
        }
        return service;
    }

    /**
     * Construct a <code>GetTrialBalanceForDateService</code> from the given output <code>Map</code>.
     * @param mapValue the service output <code>Map</code>
     */
    public static GetTrialBalanceForDateService fromOutput(Map<String, Object> mapValue) {
        GetTrialBalanceForDateService service = new GetTrialBalanceForDateService();
        service.putAllOutput(mapValue);
        return service;
    }
}
