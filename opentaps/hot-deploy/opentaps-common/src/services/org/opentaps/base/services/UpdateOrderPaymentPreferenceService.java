package org.opentaps.base.services;

/*
 * Copyright (c) Open Source Strategies, Inc.
 *
 * Opentaps is free software: you can redistribute it and/or modify it
 * under the terms of the GNU Affero General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Opentaps is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with Opentaps.  If not, see <http://www.gnu.org/licenses/>.
 */

// DO NOT EDIT THIS FILE!  THIS IS AUTO GENERATED AND WILL GET WRITTEN OVER PERIODICALLY WHEN THE SERVICE MODEL CHANGES
// EXTEND THIS CLASS INSTEAD.

import org.opentaps.foundation.service.ServiceWrapper;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import java.util.Set;
import java.util.TimeZone;
import javolution.util.FastMap;
import javolution.util.FastSet;
import org.ofbiz.entity.GenericValue;
import org.opentaps.foundation.infrastructure.User;

/**
 * .
 * Auto generated base service entity updateOrderPaymentPreference.
 *
 * Engine: java
 * Location: org.ofbiz.order.order.OrderServices
 * Invoke: updateOrderPaymentPreference
 * Defined in: applications/order/servicedef/services.xml
 */
public class UpdateOrderPaymentPreferenceService extends ServiceWrapper {

    /** The service name as used by the service engine. */
    public static final String NAME = "updateOrderPaymentPreference";
    /** If the service requires authentication. */
    public static final Boolean REQUIRES_AUTHENTICATION = Boolean.TRUE;
    /** If the service requires a new transaction. */
    public static final Boolean REQUIRES_NEW_TRANSACTION = Boolean.FALSE;
    /** If the service uses a transaction. */
    public static final Boolean USES_TRANSACTION = Boolean.TRUE;

    /** The enumeration of input parameters. */
    public static enum In {
        billingPostalCode("billingPostalCode"),
        cancelThis("cancelThis"),
        checkOutPaymentId("checkOutPaymentId"),
        createdByUserLogin("createdByUserLogin"),
        createdDate("createdDate"),
        finAccountId("finAccountId"),
        locale("locale"),
        manualAuthCode("manualAuthCode"),
        manualRefNum("manualRefNum"),
        maxAmount("maxAmount"),
        needsNsfRetry("needsNsfRetry"),
        orderId("orderId"),
        orderItemSeqId("orderItemSeqId"),
        orderPaymentPreferenceId("orderPaymentPreferenceId"),
        overflowFlag("overflowFlag"),
        paymentMethodId("paymentMethodId"),
        paymentMethodTypeId("paymentMethodTypeId"),
        presentFlag("presentFlag"),
        processAttempt("processAttempt"),
        productPricePurposeId("productPricePurposeId"),
        securityCode("securityCode"),
        shipGroupSeqId("shipGroupSeqId"),
        statusId("statusId"),
        swipedFlag("swipedFlag"),
        timeZone("timeZone"),
        track2("track2"),
        userLogin("userLogin");
        private final String _fieldName;
        private In(String name) { this._fieldName = name; }
        public String getName() { return this._fieldName; }
    }

    public static enum Out {
        errorMessage("errorMessage"),
        errorMessageList("errorMessageList"),
        locale("locale"),
        orderPaymentPreferenceId("orderPaymentPreferenceId"),
        responseMessage("responseMessage"),
        successMessage("successMessage"),
        successMessageList("successMessageList"),
        timeZone("timeZone"),
        userLogin("userLogin");
        private final String _fieldName;
        private Out(String name) { this._fieldName = name; }
        public String getName() { return this._fieldName; }
    }

    /**
     * Creates a new <code>UpdateOrderPaymentPreferenceService</code> instance.
     */
    public UpdateOrderPaymentPreferenceService() {
        super();
    }

    /**
     * Creates a new <code>UpdateOrderPaymentPreferenceService</code> instance.
     * @param user an <code>User</code> value
     */
    public UpdateOrderPaymentPreferenceService(User user) {
        super(user);
    }

    private String inBillingPostalCode;
    private String inCancelThis;
    private String inCheckOutPaymentId;
    private String inCreatedByUserLogin;
    private Timestamp inCreatedDate;
    private String inFinAccountId;
    private Locale inLocale;
    private String inManualAuthCode;
    private String inManualRefNum;
    private BigDecimal inMaxAmount;
    private String inNeedsNsfRetry;
    private String inOrderId;
    private String inOrderItemSeqId;
    private String inOrderPaymentPreferenceId;
    private String inOverflowFlag;
    private String inPaymentMethodId;
    private String inPaymentMethodTypeId;
    private String inPresentFlag;
    private Long inProcessAttempt;
    private String inProductPricePurposeId;
    private String inSecurityCode;
    private String inShipGroupSeqId;
    private String inStatusId;
    private String inSwipedFlag;
    private TimeZone inTimeZone;
    private String inTrack2;
    private GenericValue inUserLogin;
    private String outErrorMessage;
    private List outErrorMessageList;
    private Locale outLocale;
    private String outOrderPaymentPreferenceId;
    private String outResponseMessage;
    private String outSuccessMessage;
    private List outSuccessMessageList;
    private TimeZone outTimeZone;
    private GenericValue outUserLogin;

    private Set<String> inParameters = FastSet.newInstance();
    private Set<String> outParameters = FastSet.newInstance();

    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInBillingPostalCode() {
        return this.inBillingPostalCode;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInCancelThis() {
        return this.inCancelThis;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInCheckOutPaymentId() {
        return this.inCheckOutPaymentId;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInCreatedByUserLogin() {
        return this.inCreatedByUserLogin;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>Timestamp</code>
     */
    public Timestamp getInCreatedDate() {
        return this.inCreatedDate;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInFinAccountId() {
        return this.inFinAccountId;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>Locale</code>
     */
    public Locale getInLocale() {
        return this.inLocale;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInManualAuthCode() {
        return this.inManualAuthCode;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInManualRefNum() {
        return this.inManualRefNum;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getInMaxAmount() {
        return this.inMaxAmount;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInNeedsNsfRetry() {
        return this.inNeedsNsfRetry;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInOrderId() {
        return this.inOrderId;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInOrderItemSeqId() {
        return this.inOrderItemSeqId;
    }
    /**
     * Auto generated value accessor.
     * This parameter is required.
     * @return <code>String</code>
     */
    public String getInOrderPaymentPreferenceId() {
        return this.inOrderPaymentPreferenceId;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInOverflowFlag() {
        return this.inOverflowFlag;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInPaymentMethodId() {
        return this.inPaymentMethodId;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInPaymentMethodTypeId() {
        return this.inPaymentMethodTypeId;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInPresentFlag() {
        return this.inPresentFlag;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>Long</code>
     */
    public Long getInProcessAttempt() {
        return this.inProcessAttempt;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInProductPricePurposeId() {
        return this.inProductPricePurposeId;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInSecurityCode() {
        return this.inSecurityCode;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInShipGroupSeqId() {
        return this.inShipGroupSeqId;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInStatusId() {
        return this.inStatusId;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInSwipedFlag() {
        return this.inSwipedFlag;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>TimeZone</code>
     */
    public TimeZone getInTimeZone() {
        return this.inTimeZone;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInTrack2() {
        return this.inTrack2;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>GenericValue</code>
     */
    public GenericValue getInUserLogin() {
        return this.inUserLogin;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getOutErrorMessage() {
        return this.outErrorMessage;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>List</code>
     */
    public List getOutErrorMessageList() {
        return this.outErrorMessageList;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>Locale</code>
     */
    public Locale getOutLocale() {
        return this.outLocale;
    }
    /**
     * Auto generated value accessor.
     * This parameter is required.
     * @return <code>String</code>
     */
    public String getOutOrderPaymentPreferenceId() {
        return this.outOrderPaymentPreferenceId;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getOutResponseMessage() {
        return this.outResponseMessage;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getOutSuccessMessage() {
        return this.outSuccessMessage;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>List</code>
     */
    public List getOutSuccessMessageList() {
        return this.outSuccessMessageList;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>TimeZone</code>
     */
    public TimeZone getOutTimeZone() {
        return this.outTimeZone;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>GenericValue</code>
     */
    public GenericValue getOutUserLogin() {
        return this.outUserLogin;
    }

    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inBillingPostalCode the inBillingPostalCode to set
    */
    public void setInBillingPostalCode(String inBillingPostalCode) {
        this.inParameters.add("billingPostalCode");
        this.inBillingPostalCode = inBillingPostalCode;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inCancelThis the inCancelThis to set
    */
    public void setInCancelThis(String inCancelThis) {
        this.inParameters.add("cancelThis");
        this.inCancelThis = inCancelThis;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inCheckOutPaymentId the inCheckOutPaymentId to set
    */
    public void setInCheckOutPaymentId(String inCheckOutPaymentId) {
        this.inParameters.add("checkOutPaymentId");
        this.inCheckOutPaymentId = inCheckOutPaymentId;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inCreatedByUserLogin the inCreatedByUserLogin to set
    */
    public void setInCreatedByUserLogin(String inCreatedByUserLogin) {
        this.inParameters.add("createdByUserLogin");
        this.inCreatedByUserLogin = inCreatedByUserLogin;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inCreatedDate the inCreatedDate to set
    */
    public void setInCreatedDate(Timestamp inCreatedDate) {
        this.inParameters.add("createdDate");
        this.inCreatedDate = inCreatedDate;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inFinAccountId the inFinAccountId to set
    */
    public void setInFinAccountId(String inFinAccountId) {
        this.inParameters.add("finAccountId");
        this.inFinAccountId = inFinAccountId;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inLocale the inLocale to set
    */
    public void setInLocale(Locale inLocale) {
        this.inParameters.add("locale");
        this.inLocale = inLocale;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inManualAuthCode the inManualAuthCode to set
    */
    public void setInManualAuthCode(String inManualAuthCode) {
        this.inParameters.add("manualAuthCode");
        this.inManualAuthCode = inManualAuthCode;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inManualRefNum the inManualRefNum to set
    */
    public void setInManualRefNum(String inManualRefNum) {
        this.inParameters.add("manualRefNum");
        this.inManualRefNum = inManualRefNum;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inMaxAmount the inMaxAmount to set
    */
    public void setInMaxAmount(BigDecimal inMaxAmount) {
        this.inParameters.add("maxAmount");
        this.inMaxAmount = inMaxAmount;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inNeedsNsfRetry the inNeedsNsfRetry to set
    */
    public void setInNeedsNsfRetry(String inNeedsNsfRetry) {
        this.inParameters.add("needsNsfRetry");
        this.inNeedsNsfRetry = inNeedsNsfRetry;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inOrderId the inOrderId to set
    */
    public void setInOrderId(String inOrderId) {
        this.inParameters.add("orderId");
        this.inOrderId = inOrderId;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inOrderItemSeqId the inOrderItemSeqId to set
    */
    public void setInOrderItemSeqId(String inOrderItemSeqId) {
        this.inParameters.add("orderItemSeqId");
        this.inOrderItemSeqId = inOrderItemSeqId;
    }
    /**
     * Auto generated value setter.
     * This parameter is required.
     * @param inOrderPaymentPreferenceId the inOrderPaymentPreferenceId to set
    */
    public void setInOrderPaymentPreferenceId(String inOrderPaymentPreferenceId) {
        this.inParameters.add("orderPaymentPreferenceId");
        this.inOrderPaymentPreferenceId = inOrderPaymentPreferenceId;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inOverflowFlag the inOverflowFlag to set
    */
    public void setInOverflowFlag(String inOverflowFlag) {
        this.inParameters.add("overflowFlag");
        this.inOverflowFlag = inOverflowFlag;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inPaymentMethodId the inPaymentMethodId to set
    */
    public void setInPaymentMethodId(String inPaymentMethodId) {
        this.inParameters.add("paymentMethodId");
        this.inPaymentMethodId = inPaymentMethodId;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inPaymentMethodTypeId the inPaymentMethodTypeId to set
    */
    public void setInPaymentMethodTypeId(String inPaymentMethodTypeId) {
        this.inParameters.add("paymentMethodTypeId");
        this.inPaymentMethodTypeId = inPaymentMethodTypeId;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inPresentFlag the inPresentFlag to set
    */
    public void setInPresentFlag(String inPresentFlag) {
        this.inParameters.add("presentFlag");
        this.inPresentFlag = inPresentFlag;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inProcessAttempt the inProcessAttempt to set
    */
    public void setInProcessAttempt(Long inProcessAttempt) {
        this.inParameters.add("processAttempt");
        this.inProcessAttempt = inProcessAttempt;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inProductPricePurposeId the inProductPricePurposeId to set
    */
    public void setInProductPricePurposeId(String inProductPricePurposeId) {
        this.inParameters.add("productPricePurposeId");
        this.inProductPricePurposeId = inProductPricePurposeId;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inSecurityCode the inSecurityCode to set
    */
    public void setInSecurityCode(String inSecurityCode) {
        this.inParameters.add("securityCode");
        this.inSecurityCode = inSecurityCode;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inShipGroupSeqId the inShipGroupSeqId to set
    */
    public void setInShipGroupSeqId(String inShipGroupSeqId) {
        this.inParameters.add("shipGroupSeqId");
        this.inShipGroupSeqId = inShipGroupSeqId;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inStatusId the inStatusId to set
    */
    public void setInStatusId(String inStatusId) {
        this.inParameters.add("statusId");
        this.inStatusId = inStatusId;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inSwipedFlag the inSwipedFlag to set
    */
    public void setInSwipedFlag(String inSwipedFlag) {
        this.inParameters.add("swipedFlag");
        this.inSwipedFlag = inSwipedFlag;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inTimeZone the inTimeZone to set
    */
    public void setInTimeZone(TimeZone inTimeZone) {
        this.inParameters.add("timeZone");
        this.inTimeZone = inTimeZone;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inTrack2 the inTrack2 to set
    */
    public void setInTrack2(String inTrack2) {
        this.inParameters.add("track2");
        this.inTrack2 = inTrack2;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inUserLogin the inUserLogin to set
    */
    public void setInUserLogin(GenericValue inUserLogin) {
        this.inParameters.add("userLogin");
        this.inUserLogin = inUserLogin;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param outErrorMessage the outErrorMessage to set
    */
    public void setOutErrorMessage(String outErrorMessage) {
        this.outParameters.add("errorMessage");
        this.outErrorMessage = outErrorMessage;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param outErrorMessageList the outErrorMessageList to set
    */
    public void setOutErrorMessageList(List outErrorMessageList) {
        this.outParameters.add("errorMessageList");
        this.outErrorMessageList = outErrorMessageList;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param outLocale the outLocale to set
    */
    public void setOutLocale(Locale outLocale) {
        this.outParameters.add("locale");
        this.outLocale = outLocale;
    }
    /**
     * Auto generated value setter.
     * This parameter is required.
     * @param outOrderPaymentPreferenceId the outOrderPaymentPreferenceId to set
    */
    public void setOutOrderPaymentPreferenceId(String outOrderPaymentPreferenceId) {
        this.outParameters.add("orderPaymentPreferenceId");
        this.outOrderPaymentPreferenceId = outOrderPaymentPreferenceId;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param outResponseMessage the outResponseMessage to set
    */
    public void setOutResponseMessage(String outResponseMessage) {
        this.outParameters.add("responseMessage");
        this.outResponseMessage = outResponseMessage;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param outSuccessMessage the outSuccessMessage to set
    */
    public void setOutSuccessMessage(String outSuccessMessage) {
        this.outParameters.add("successMessage");
        this.outSuccessMessage = outSuccessMessage;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param outSuccessMessageList the outSuccessMessageList to set
    */
    public void setOutSuccessMessageList(List outSuccessMessageList) {
        this.outParameters.add("successMessageList");
        this.outSuccessMessageList = outSuccessMessageList;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param outTimeZone the outTimeZone to set
    */
    public void setOutTimeZone(TimeZone outTimeZone) {
        this.outParameters.add("timeZone");
        this.outTimeZone = outTimeZone;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param outUserLogin the outUserLogin to set
    */
    public void setOutUserLogin(GenericValue outUserLogin) {
        this.outParameters.add("userLogin");
        this.outUserLogin = outUserLogin;
    }

    /** {@inheritDoc} */
    public String name() {
        return NAME;
    }

    /** {@inheritDoc} */
    public Boolean requiresAuthentication() {
        return REQUIRES_AUTHENTICATION;
    }

    /** {@inheritDoc} */
    public Boolean requiresNewTransaction() {
        return REQUIRES_NEW_TRANSACTION;
    }

    /** {@inheritDoc} */
    public Boolean usesTransaction() {
        return USES_TRANSACTION;
    }

    /** {@inheritDoc} */
    public Map<String, Object> inputMap() {
        Map<String, Object> mapValue = new FastMap<String, Object>();
        if (inParameters.contains("billingPostalCode")) mapValue.put("billingPostalCode", getInBillingPostalCode());
        if (inParameters.contains("cancelThis")) mapValue.put("cancelThis", getInCancelThis());
        if (inParameters.contains("checkOutPaymentId")) mapValue.put("checkOutPaymentId", getInCheckOutPaymentId());
        if (inParameters.contains("createdByUserLogin")) mapValue.put("createdByUserLogin", getInCreatedByUserLogin());
        if (inParameters.contains("createdDate")) mapValue.put("createdDate", getInCreatedDate());
        if (inParameters.contains("finAccountId")) mapValue.put("finAccountId", getInFinAccountId());
        if (inParameters.contains("locale")) mapValue.put("locale", getInLocale());
        if (inParameters.contains("manualAuthCode")) mapValue.put("manualAuthCode", getInManualAuthCode());
        if (inParameters.contains("manualRefNum")) mapValue.put("manualRefNum", getInManualRefNum());
        if (inParameters.contains("maxAmount")) mapValue.put("maxAmount", getInMaxAmount());
        if (inParameters.contains("needsNsfRetry")) mapValue.put("needsNsfRetry", getInNeedsNsfRetry());
        if (inParameters.contains("orderId")) mapValue.put("orderId", getInOrderId());
        if (inParameters.contains("orderItemSeqId")) mapValue.put("orderItemSeqId", getInOrderItemSeqId());
        if (inParameters.contains("orderPaymentPreferenceId")) mapValue.put("orderPaymentPreferenceId", getInOrderPaymentPreferenceId());
        if (inParameters.contains("overflowFlag")) mapValue.put("overflowFlag", getInOverflowFlag());
        if (inParameters.contains("paymentMethodId")) mapValue.put("paymentMethodId", getInPaymentMethodId());
        if (inParameters.contains("paymentMethodTypeId")) mapValue.put("paymentMethodTypeId", getInPaymentMethodTypeId());
        if (inParameters.contains("presentFlag")) mapValue.put("presentFlag", getInPresentFlag());
        if (inParameters.contains("processAttempt")) mapValue.put("processAttempt", getInProcessAttempt());
        if (inParameters.contains("productPricePurposeId")) mapValue.put("productPricePurposeId", getInProductPricePurposeId());
        if (inParameters.contains("securityCode")) mapValue.put("securityCode", getInSecurityCode());
        if (inParameters.contains("shipGroupSeqId")) mapValue.put("shipGroupSeqId", getInShipGroupSeqId());
        if (inParameters.contains("statusId")) mapValue.put("statusId", getInStatusId());
        if (inParameters.contains("swipedFlag")) mapValue.put("swipedFlag", getInSwipedFlag());
        if (inParameters.contains("timeZone")) mapValue.put("timeZone", getInTimeZone());
        if (inParameters.contains("track2")) mapValue.put("track2", getInTrack2());
        if (inParameters.contains("userLogin")) mapValue.put("userLogin", getInUserLogin());
        // allow the User set to override the userLogin
        if (getUser() != null) mapValue.put("userLogin", getUser().getOfbizUserLogin());
        return mapValue;
    }

    /** {@inheritDoc} */
    public Map<String, Object> outputMap() {
        Map<String, Object> mapValue = new FastMap<String, Object>();
        if (outParameters.contains("errorMessage")) mapValue.put("errorMessage", getOutErrorMessage());
        if (outParameters.contains("errorMessageList")) mapValue.put("errorMessageList", getOutErrorMessageList());
        if (outParameters.contains("locale")) mapValue.put("locale", getOutLocale());
        if (outParameters.contains("orderPaymentPreferenceId")) mapValue.put("orderPaymentPreferenceId", getOutOrderPaymentPreferenceId());
        if (outParameters.contains("responseMessage")) mapValue.put("responseMessage", getOutResponseMessage());
        if (outParameters.contains("successMessage")) mapValue.put("successMessage", getOutSuccessMessage());
        if (outParameters.contains("successMessageList")) mapValue.put("successMessageList", getOutSuccessMessageList());
        if (outParameters.contains("timeZone")) mapValue.put("timeZone", getOutTimeZone());
        if (outParameters.contains("userLogin")) mapValue.put("userLogin", getOutUserLogin());
        return mapValue;
    }

    /** {@inheritDoc} */
    public void putAllInput(Map<String, Object> mapValue) {
        if (mapValue.containsKey("billingPostalCode")) setInBillingPostalCode((String) mapValue.get("billingPostalCode"));
        if (mapValue.containsKey("cancelThis")) setInCancelThis((String) mapValue.get("cancelThis"));
        if (mapValue.containsKey("checkOutPaymentId")) setInCheckOutPaymentId((String) mapValue.get("checkOutPaymentId"));
        if (mapValue.containsKey("createdByUserLogin")) setInCreatedByUserLogin((String) mapValue.get("createdByUserLogin"));
        if (mapValue.containsKey("createdDate")) setInCreatedDate((Timestamp) mapValue.get("createdDate"));
        if (mapValue.containsKey("finAccountId")) setInFinAccountId((String) mapValue.get("finAccountId"));
        if (mapValue.containsKey("locale")) setInLocale((Locale) mapValue.get("locale"));
        if (mapValue.containsKey("manualAuthCode")) setInManualAuthCode((String) mapValue.get("manualAuthCode"));
        if (mapValue.containsKey("manualRefNum")) setInManualRefNum((String) mapValue.get("manualRefNum"));
        if (mapValue.containsKey("maxAmount")) setInMaxAmount((BigDecimal) mapValue.get("maxAmount"));
        if (mapValue.containsKey("needsNsfRetry")) setInNeedsNsfRetry((String) mapValue.get("needsNsfRetry"));
        if (mapValue.containsKey("orderId")) setInOrderId((String) mapValue.get("orderId"));
        if (mapValue.containsKey("orderItemSeqId")) setInOrderItemSeqId((String) mapValue.get("orderItemSeqId"));
        if (mapValue.containsKey("orderPaymentPreferenceId")) setInOrderPaymentPreferenceId((String) mapValue.get("orderPaymentPreferenceId"));
        if (mapValue.containsKey("overflowFlag")) setInOverflowFlag((String) mapValue.get("overflowFlag"));
        if (mapValue.containsKey("paymentMethodId")) setInPaymentMethodId((String) mapValue.get("paymentMethodId"));
        if (mapValue.containsKey("paymentMethodTypeId")) setInPaymentMethodTypeId((String) mapValue.get("paymentMethodTypeId"));
        if (mapValue.containsKey("presentFlag")) setInPresentFlag((String) mapValue.get("presentFlag"));
        if (mapValue.containsKey("processAttempt")) setInProcessAttempt((Long) mapValue.get("processAttempt"));
        if (mapValue.containsKey("productPricePurposeId")) setInProductPricePurposeId((String) mapValue.get("productPricePurposeId"));
        if (mapValue.containsKey("securityCode")) setInSecurityCode((String) mapValue.get("securityCode"));
        if (mapValue.containsKey("shipGroupSeqId")) setInShipGroupSeqId((String) mapValue.get("shipGroupSeqId"));
        if (mapValue.containsKey("statusId")) setInStatusId((String) mapValue.get("statusId"));
        if (mapValue.containsKey("swipedFlag")) setInSwipedFlag((String) mapValue.get("swipedFlag"));
        if (mapValue.containsKey("timeZone")) setInTimeZone((TimeZone) mapValue.get("timeZone"));
        if (mapValue.containsKey("track2")) setInTrack2((String) mapValue.get("track2"));
        if (mapValue.containsKey("userLogin")) setInUserLogin((GenericValue) mapValue.get("userLogin"));
    }

    /** {@inheritDoc} */
    public void putAllOutput(Map<String, Object> mapValue) {
        if (mapValue.containsKey("errorMessage")) setOutErrorMessage((String) mapValue.get("errorMessage"));
        if (mapValue.containsKey("errorMessageList")) setOutErrorMessageList((List) mapValue.get("errorMessageList"));
        if (mapValue.containsKey("locale")) setOutLocale((Locale) mapValue.get("locale"));
        if (mapValue.containsKey("orderPaymentPreferenceId")) setOutOrderPaymentPreferenceId((String) mapValue.get("orderPaymentPreferenceId"));
        if (mapValue.containsKey("responseMessage")) setOutResponseMessage((String) mapValue.get("responseMessage"));
        if (mapValue.containsKey("successMessage")) setOutSuccessMessage((String) mapValue.get("successMessage"));
        if (mapValue.containsKey("successMessageList")) setOutSuccessMessageList((List) mapValue.get("successMessageList"));
        if (mapValue.containsKey("timeZone")) setOutTimeZone((TimeZone) mapValue.get("timeZone"));
        if (mapValue.containsKey("userLogin")) setOutUserLogin((GenericValue) mapValue.get("userLogin"));
    }

    /**
     * Construct a <code>UpdateOrderPaymentPreferenceService</code> from the input values of the given <code>UpdateOrderPaymentPreferenceService</code>.
     * @param input a <code>UpdateOrderPaymentPreferenceService</code>
     */
    public static UpdateOrderPaymentPreferenceService fromInput(UpdateOrderPaymentPreferenceService input) {
        UpdateOrderPaymentPreferenceService service = new UpdateOrderPaymentPreferenceService();
        return fromInput(input.inputMap());
    }

    /**
     * Construct a <code>UpdateOrderPaymentPreferenceService</code> from the output values of the given <code>UpdateOrderPaymentPreferenceService</code>.
     * @param output a <code>UpdateOrderPaymentPreferenceService</code>
     */
    public static UpdateOrderPaymentPreferenceService fromOutput(UpdateOrderPaymentPreferenceService output) {
        UpdateOrderPaymentPreferenceService service = new UpdateOrderPaymentPreferenceService();
        service.putAllOutput(output.outputMap());
        return service;
    }

    /**
     * Construct a <code>UpdateOrderPaymentPreferenceService</code> from the given input <code>Map</code>.
     * @param mapValue the service input <code>Map</code>
     */
    public static UpdateOrderPaymentPreferenceService fromInput(Map<String, Object> mapValue) {
        UpdateOrderPaymentPreferenceService service = new UpdateOrderPaymentPreferenceService();
        service.putAllInput(mapValue);
        if (mapValue.containsKey("userLogin")) {
            GenericValue userGv = (GenericValue) mapValue.get("userLogin");
            if (userGv != null) {
                service.setUser(new User(userGv, userGv.getDelegator()));
            }
        }
        return service;
    }

    /**
     * Construct a <code>UpdateOrderPaymentPreferenceService</code> from the given output <code>Map</code>.
     * @param mapValue the service output <code>Map</code>
     */
    public static UpdateOrderPaymentPreferenceService fromOutput(Map<String, Object> mapValue) {
        UpdateOrderPaymentPreferenceService service = new UpdateOrderPaymentPreferenceService();
        service.putAllOutput(mapValue);
        return service;
    }
}
