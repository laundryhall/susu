package org.opentaps.base.services;

/*
 * Copyright (c) Open Source Strategies, Inc.
 *
 * Opentaps is free software: you can redistribute it and/or modify it
 * under the terms of the GNU Affero General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Opentaps is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with Opentaps.  If not, see <http://www.gnu.org/licenses/>.
 */

// DO NOT EDIT THIS FILE!  THIS IS AUTO GENERATED AND WILL GET WRITTEN OVER PERIODICALLY WHEN THE SERVICE MODEL CHANGES
// EXTEND THIS CLASS INSTEAD.

import org.opentaps.foundation.service.ServiceWrapper;

import java.util.Collection;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import java.util.Set;
import java.util.TimeZone;
import javolution.util.FastMap;
import javolution.util.FastSet;
import org.ofbiz.entity.GenericValue;
import org.opentaps.foundation.infrastructure.User;

/**
 * Gets a productCategory and a Collection of associated productCategoryMembers and calculates limiting parameters.
 * Auto generated base service entity getProductCategoryAndLimitedMembers.
 *
 * Engine: java
 * Location: org.ofbiz.product.category.CategoryServices
 * Invoke: getProductCategoryAndLimitedMembers
 * Defined in: applications/product/servicedef/services_view.xml
 */
public class GetProductCategoryAndLimitedMembersService extends ServiceWrapper {

    /** The service name as used by the service engine. */
    public static final String NAME = "getProductCategoryAndLimitedMembers";
    /** If the service requires authentication. */
    public static final Boolean REQUIRES_AUTHENTICATION = Boolean.FALSE;
    /** If the service requires a new transaction. */
    public static final Boolean REQUIRES_NEW_TRANSACTION = Boolean.FALSE;
    /** If the service uses a transaction. */
    public static final Boolean USES_TRANSACTION = Boolean.TRUE;

    /** The enumeration of input parameters. */
    public static enum In {
        activeOnly("activeOnly"),
        checkViewAllow("checkViewAllow"),
        defaultViewSize("defaultViewSize"),
        limitView("limitView"),
        locale("locale"),
        orderByFields("orderByFields"),
        prodCatalogId("prodCatalogId"),
        productCategoryId("productCategoryId"),
        timeZone("timeZone"),
        useCacheForMembers("useCacheForMembers"),
        userLogin("userLogin"),
        viewIndexString("viewIndexString"),
        viewSizeString("viewSizeString");
        private final String _fieldName;
        private In(String name) { this._fieldName = name; }
        public String getName() { return this._fieldName; }
    }

    public static enum Out {
        errorMessage("errorMessage"),
        errorMessageList("errorMessageList"),
        highIndex("highIndex"),
        listSize("listSize"),
        locale("locale"),
        lowIndex("lowIndex"),
        productCategory("productCategory"),
        productCategoryMembers("productCategoryMembers"),
        responseMessage("responseMessage"),
        successMessage("successMessage"),
        successMessageList("successMessageList"),
        timeZone("timeZone"),
        userLogin("userLogin"),
        viewIndex("viewIndex"),
        viewSize("viewSize");
        private final String _fieldName;
        private Out(String name) { this._fieldName = name; }
        public String getName() { return this._fieldName; }
    }

    /**
     * Creates a new <code>GetProductCategoryAndLimitedMembersService</code> instance.
     */
    public GetProductCategoryAndLimitedMembersService() {
        super();
    }


    private Boolean inActiveOnly;
    private Boolean inCheckViewAllow;
    private Integer inDefaultViewSize;
    private Boolean inLimitView;
    private Locale inLocale;
    private List inOrderByFields;
    private String inProdCatalogId;
    private String inProductCategoryId;
    private TimeZone inTimeZone;
    private Boolean inUseCacheForMembers;
    private GenericValue inUserLogin;
    private String inViewIndexString;
    private String inViewSizeString;
    private String outErrorMessage;
    private List outErrorMessageList;
    private Integer outHighIndex;
    private Integer outListSize;
    private Locale outLocale;
    private Integer outLowIndex;
    private GenericValue outProductCategory;
    private Collection outProductCategoryMembers;
    private String outResponseMessage;
    private String outSuccessMessage;
    private List outSuccessMessageList;
    private TimeZone outTimeZone;
    private GenericValue outUserLogin;
    private Integer outViewIndex;
    private Integer outViewSize;

    private Set<String> inParameters = FastSet.newInstance();
    private Set<String> outParameters = FastSet.newInstance();

    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>Boolean</code>
     */
    public Boolean getInActiveOnly() {
        return this.inActiveOnly;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>Boolean</code>
     */
    public Boolean getInCheckViewAllow() {
        return this.inCheckViewAllow;
    }
    /**
     * Auto generated value accessor.
     * This parameter is required.
     * @return <code>Integer</code>
     */
    public Integer getInDefaultViewSize() {
        return this.inDefaultViewSize;
    }
    /**
     * Auto generated value accessor.
     * This parameter is required.
     * @return <code>Boolean</code>
     */
    public Boolean getInLimitView() {
        return this.inLimitView;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>Locale</code>
     */
    public Locale getInLocale() {
        return this.inLocale;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>List</code>
     */
    public List getInOrderByFields() {
        return this.inOrderByFields;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInProdCatalogId() {
        return this.inProdCatalogId;
    }
    /**
     * Auto generated value accessor.
     * This parameter is required.
     * @return <code>String</code>
     */
    public String getInProductCategoryId() {
        return this.inProductCategoryId;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>TimeZone</code>
     */
    public TimeZone getInTimeZone() {
        return this.inTimeZone;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>Boolean</code>
     */
    public Boolean getInUseCacheForMembers() {
        return this.inUseCacheForMembers;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>GenericValue</code>
     */
    public GenericValue getInUserLogin() {
        return this.inUserLogin;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInViewIndexString() {
        return this.inViewIndexString;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInViewSizeString() {
        return this.inViewSizeString;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getOutErrorMessage() {
        return this.outErrorMessage;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>List</code>
     */
    public List getOutErrorMessageList() {
        return this.outErrorMessageList;
    }
    /**
     * Auto generated value accessor.
     * This parameter is required.
     * @return <code>Integer</code>
     */
    public Integer getOutHighIndex() {
        return this.outHighIndex;
    }
    /**
     * Auto generated value accessor.
     * This parameter is required.
     * @return <code>Integer</code>
     */
    public Integer getOutListSize() {
        return this.outListSize;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>Locale</code>
     */
    public Locale getOutLocale() {
        return this.outLocale;
    }
    /**
     * Auto generated value accessor.
     * This parameter is required.
     * @return <code>Integer</code>
     */
    public Integer getOutLowIndex() {
        return this.outLowIndex;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>GenericValue</code>
     */
    public GenericValue getOutProductCategory() {
        return this.outProductCategory;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>Collection</code>
     */
    public Collection getOutProductCategoryMembers() {
        return this.outProductCategoryMembers;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getOutResponseMessage() {
        return this.outResponseMessage;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getOutSuccessMessage() {
        return this.outSuccessMessage;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>List</code>
     */
    public List getOutSuccessMessageList() {
        return this.outSuccessMessageList;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>TimeZone</code>
     */
    public TimeZone getOutTimeZone() {
        return this.outTimeZone;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>GenericValue</code>
     */
    public GenericValue getOutUserLogin() {
        return this.outUserLogin;
    }
    /**
     * Auto generated value accessor.
     * This parameter is required.
     * @return <code>Integer</code>
     */
    public Integer getOutViewIndex() {
        return this.outViewIndex;
    }
    /**
     * Auto generated value accessor.
     * This parameter is required.
     * @return <code>Integer</code>
     */
    public Integer getOutViewSize() {
        return this.outViewSize;
    }

    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inActiveOnly the inActiveOnly to set
    */
    public void setInActiveOnly(Boolean inActiveOnly) {
        this.inParameters.add("activeOnly");
        this.inActiveOnly = inActiveOnly;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inCheckViewAllow the inCheckViewAllow to set
    */
    public void setInCheckViewAllow(Boolean inCheckViewAllow) {
        this.inParameters.add("checkViewAllow");
        this.inCheckViewAllow = inCheckViewAllow;
    }
    /**
     * Auto generated value setter.
     * This parameter is required.
     * @param inDefaultViewSize the inDefaultViewSize to set
    */
    public void setInDefaultViewSize(Integer inDefaultViewSize) {
        this.inParameters.add("defaultViewSize");
        this.inDefaultViewSize = inDefaultViewSize;
    }
    /**
     * Auto generated value setter.
     * This parameter is required.
     * @param inLimitView the inLimitView to set
    */
    public void setInLimitView(Boolean inLimitView) {
        this.inParameters.add("limitView");
        this.inLimitView = inLimitView;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inLocale the inLocale to set
    */
    public void setInLocale(Locale inLocale) {
        this.inParameters.add("locale");
        this.inLocale = inLocale;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inOrderByFields the inOrderByFields to set
    */
    public void setInOrderByFields(List inOrderByFields) {
        this.inParameters.add("orderByFields");
        this.inOrderByFields = inOrderByFields;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inProdCatalogId the inProdCatalogId to set
    */
    public void setInProdCatalogId(String inProdCatalogId) {
        this.inParameters.add("prodCatalogId");
        this.inProdCatalogId = inProdCatalogId;
    }
    /**
     * Auto generated value setter.
     * This parameter is required.
     * @param inProductCategoryId the inProductCategoryId to set
    */
    public void setInProductCategoryId(String inProductCategoryId) {
        this.inParameters.add("productCategoryId");
        this.inProductCategoryId = inProductCategoryId;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inTimeZone the inTimeZone to set
    */
    public void setInTimeZone(TimeZone inTimeZone) {
        this.inParameters.add("timeZone");
        this.inTimeZone = inTimeZone;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inUseCacheForMembers the inUseCacheForMembers to set
    */
    public void setInUseCacheForMembers(Boolean inUseCacheForMembers) {
        this.inParameters.add("useCacheForMembers");
        this.inUseCacheForMembers = inUseCacheForMembers;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inUserLogin the inUserLogin to set
    */
    public void setInUserLogin(GenericValue inUserLogin) {
        this.inParameters.add("userLogin");
        this.inUserLogin = inUserLogin;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inViewIndexString the inViewIndexString to set
    */
    public void setInViewIndexString(String inViewIndexString) {
        this.inParameters.add("viewIndexString");
        this.inViewIndexString = inViewIndexString;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inViewSizeString the inViewSizeString to set
    */
    public void setInViewSizeString(String inViewSizeString) {
        this.inParameters.add("viewSizeString");
        this.inViewSizeString = inViewSizeString;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param outErrorMessage the outErrorMessage to set
    */
    public void setOutErrorMessage(String outErrorMessage) {
        this.outParameters.add("errorMessage");
        this.outErrorMessage = outErrorMessage;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param outErrorMessageList the outErrorMessageList to set
    */
    public void setOutErrorMessageList(List outErrorMessageList) {
        this.outParameters.add("errorMessageList");
        this.outErrorMessageList = outErrorMessageList;
    }
    /**
     * Auto generated value setter.
     * This parameter is required.
     * @param outHighIndex the outHighIndex to set
    */
    public void setOutHighIndex(Integer outHighIndex) {
        this.outParameters.add("highIndex");
        this.outHighIndex = outHighIndex;
    }
    /**
     * Auto generated value setter.
     * This parameter is required.
     * @param outListSize the outListSize to set
    */
    public void setOutListSize(Integer outListSize) {
        this.outParameters.add("listSize");
        this.outListSize = outListSize;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param outLocale the outLocale to set
    */
    public void setOutLocale(Locale outLocale) {
        this.outParameters.add("locale");
        this.outLocale = outLocale;
    }
    /**
     * Auto generated value setter.
     * This parameter is required.
     * @param outLowIndex the outLowIndex to set
    */
    public void setOutLowIndex(Integer outLowIndex) {
        this.outParameters.add("lowIndex");
        this.outLowIndex = outLowIndex;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param outProductCategory the outProductCategory to set
    */
    public void setOutProductCategory(GenericValue outProductCategory) {
        this.outParameters.add("productCategory");
        this.outProductCategory = outProductCategory;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param outProductCategoryMembers the outProductCategoryMembers to set
    */
    public void setOutProductCategoryMembers(Collection outProductCategoryMembers) {
        this.outParameters.add("productCategoryMembers");
        this.outProductCategoryMembers = outProductCategoryMembers;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param outResponseMessage the outResponseMessage to set
    */
    public void setOutResponseMessage(String outResponseMessage) {
        this.outParameters.add("responseMessage");
        this.outResponseMessage = outResponseMessage;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param outSuccessMessage the outSuccessMessage to set
    */
    public void setOutSuccessMessage(String outSuccessMessage) {
        this.outParameters.add("successMessage");
        this.outSuccessMessage = outSuccessMessage;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param outSuccessMessageList the outSuccessMessageList to set
    */
    public void setOutSuccessMessageList(List outSuccessMessageList) {
        this.outParameters.add("successMessageList");
        this.outSuccessMessageList = outSuccessMessageList;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param outTimeZone the outTimeZone to set
    */
    public void setOutTimeZone(TimeZone outTimeZone) {
        this.outParameters.add("timeZone");
        this.outTimeZone = outTimeZone;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param outUserLogin the outUserLogin to set
    */
    public void setOutUserLogin(GenericValue outUserLogin) {
        this.outParameters.add("userLogin");
        this.outUserLogin = outUserLogin;
    }
    /**
     * Auto generated value setter.
     * This parameter is required.
     * @param outViewIndex the outViewIndex to set
    */
    public void setOutViewIndex(Integer outViewIndex) {
        this.outParameters.add("viewIndex");
        this.outViewIndex = outViewIndex;
    }
    /**
     * Auto generated value setter.
     * This parameter is required.
     * @param outViewSize the outViewSize to set
    */
    public void setOutViewSize(Integer outViewSize) {
        this.outParameters.add("viewSize");
        this.outViewSize = outViewSize;
    }

    /** {@inheritDoc} */
    public String name() {
        return NAME;
    }

    /** {@inheritDoc} */
    public Boolean requiresAuthentication() {
        return REQUIRES_AUTHENTICATION;
    }

    /** {@inheritDoc} */
    public Boolean requiresNewTransaction() {
        return REQUIRES_NEW_TRANSACTION;
    }

    /** {@inheritDoc} */
    public Boolean usesTransaction() {
        return USES_TRANSACTION;
    }

    /** {@inheritDoc} */
    public Map<String, Object> inputMap() {
        Map<String, Object> mapValue = new FastMap<String, Object>();
        if (inParameters.contains("activeOnly")) mapValue.put("activeOnly", getInActiveOnly());
        if (inParameters.contains("checkViewAllow")) mapValue.put("checkViewAllow", getInCheckViewAllow());
        if (inParameters.contains("defaultViewSize")) mapValue.put("defaultViewSize", getInDefaultViewSize());
        if (inParameters.contains("limitView")) mapValue.put("limitView", getInLimitView());
        if (inParameters.contains("locale")) mapValue.put("locale", getInLocale());
        if (inParameters.contains("orderByFields")) mapValue.put("orderByFields", getInOrderByFields());
        if (inParameters.contains("prodCatalogId")) mapValue.put("prodCatalogId", getInProdCatalogId());
        if (inParameters.contains("productCategoryId")) mapValue.put("productCategoryId", getInProductCategoryId());
        if (inParameters.contains("timeZone")) mapValue.put("timeZone", getInTimeZone());
        if (inParameters.contains("useCacheForMembers")) mapValue.put("useCacheForMembers", getInUseCacheForMembers());
        if (inParameters.contains("userLogin")) mapValue.put("userLogin", getInUserLogin());
        if (inParameters.contains("viewIndexString")) mapValue.put("viewIndexString", getInViewIndexString());
        if (inParameters.contains("viewSizeString")) mapValue.put("viewSizeString", getInViewSizeString());
        // allow the User set to override the userLogin
        if (getUser() != null) mapValue.put("userLogin", getUser().getOfbizUserLogin());
        return mapValue;
    }

    /** {@inheritDoc} */
    public Map<String, Object> outputMap() {
        Map<String, Object> mapValue = new FastMap<String, Object>();
        if (outParameters.contains("errorMessage")) mapValue.put("errorMessage", getOutErrorMessage());
        if (outParameters.contains("errorMessageList")) mapValue.put("errorMessageList", getOutErrorMessageList());
        if (outParameters.contains("highIndex")) mapValue.put("highIndex", getOutHighIndex());
        if (outParameters.contains("listSize")) mapValue.put("listSize", getOutListSize());
        if (outParameters.contains("locale")) mapValue.put("locale", getOutLocale());
        if (outParameters.contains("lowIndex")) mapValue.put("lowIndex", getOutLowIndex());
        if (outParameters.contains("productCategory")) mapValue.put("productCategory", getOutProductCategory());
        if (outParameters.contains("productCategoryMembers")) mapValue.put("productCategoryMembers", getOutProductCategoryMembers());
        if (outParameters.contains("responseMessage")) mapValue.put("responseMessage", getOutResponseMessage());
        if (outParameters.contains("successMessage")) mapValue.put("successMessage", getOutSuccessMessage());
        if (outParameters.contains("successMessageList")) mapValue.put("successMessageList", getOutSuccessMessageList());
        if (outParameters.contains("timeZone")) mapValue.put("timeZone", getOutTimeZone());
        if (outParameters.contains("userLogin")) mapValue.put("userLogin", getOutUserLogin());
        if (outParameters.contains("viewIndex")) mapValue.put("viewIndex", getOutViewIndex());
        if (outParameters.contains("viewSize")) mapValue.put("viewSize", getOutViewSize());
        return mapValue;
    }

    /** {@inheritDoc} */
    public void putAllInput(Map<String, Object> mapValue) {
        if (mapValue.containsKey("activeOnly")) setInActiveOnly((Boolean) mapValue.get("activeOnly"));
        if (mapValue.containsKey("checkViewAllow")) setInCheckViewAllow((Boolean) mapValue.get("checkViewAllow"));
        if (mapValue.containsKey("defaultViewSize")) setInDefaultViewSize((Integer) mapValue.get("defaultViewSize"));
        if (mapValue.containsKey("limitView")) setInLimitView((Boolean) mapValue.get("limitView"));
        if (mapValue.containsKey("locale")) setInLocale((Locale) mapValue.get("locale"));
        if (mapValue.containsKey("orderByFields")) setInOrderByFields((List) mapValue.get("orderByFields"));
        if (mapValue.containsKey("prodCatalogId")) setInProdCatalogId((String) mapValue.get("prodCatalogId"));
        if (mapValue.containsKey("productCategoryId")) setInProductCategoryId((String) mapValue.get("productCategoryId"));
        if (mapValue.containsKey("timeZone")) setInTimeZone((TimeZone) mapValue.get("timeZone"));
        if (mapValue.containsKey("useCacheForMembers")) setInUseCacheForMembers((Boolean) mapValue.get("useCacheForMembers"));
        if (mapValue.containsKey("userLogin")) setInUserLogin((GenericValue) mapValue.get("userLogin"));
        if (mapValue.containsKey("viewIndexString")) setInViewIndexString((String) mapValue.get("viewIndexString"));
        if (mapValue.containsKey("viewSizeString")) setInViewSizeString((String) mapValue.get("viewSizeString"));
    }

    /** {@inheritDoc} */
    public void putAllOutput(Map<String, Object> mapValue) {
        if (mapValue.containsKey("errorMessage")) setOutErrorMessage((String) mapValue.get("errorMessage"));
        if (mapValue.containsKey("errorMessageList")) setOutErrorMessageList((List) mapValue.get("errorMessageList"));
        if (mapValue.containsKey("highIndex")) setOutHighIndex((Integer) mapValue.get("highIndex"));
        if (mapValue.containsKey("listSize")) setOutListSize((Integer) mapValue.get("listSize"));
        if (mapValue.containsKey("locale")) setOutLocale((Locale) mapValue.get("locale"));
        if (mapValue.containsKey("lowIndex")) setOutLowIndex((Integer) mapValue.get("lowIndex"));
        if (mapValue.containsKey("productCategory")) setOutProductCategory((GenericValue) mapValue.get("productCategory"));
        if (mapValue.containsKey("productCategoryMembers")) setOutProductCategoryMembers((Collection) mapValue.get("productCategoryMembers"));
        if (mapValue.containsKey("responseMessage")) setOutResponseMessage((String) mapValue.get("responseMessage"));
        if (mapValue.containsKey("successMessage")) setOutSuccessMessage((String) mapValue.get("successMessage"));
        if (mapValue.containsKey("successMessageList")) setOutSuccessMessageList((List) mapValue.get("successMessageList"));
        if (mapValue.containsKey("timeZone")) setOutTimeZone((TimeZone) mapValue.get("timeZone"));
        if (mapValue.containsKey("userLogin")) setOutUserLogin((GenericValue) mapValue.get("userLogin"));
        if (mapValue.containsKey("viewIndex")) setOutViewIndex((Integer) mapValue.get("viewIndex"));
        if (mapValue.containsKey("viewSize")) setOutViewSize((Integer) mapValue.get("viewSize"));
    }

    /**
     * Construct a <code>GetProductCategoryAndLimitedMembersService</code> from the input values of the given <code>GetProductCategoryAndLimitedMembersService</code>.
     * @param input a <code>GetProductCategoryAndLimitedMembersService</code>
     */
    public static GetProductCategoryAndLimitedMembersService fromInput(GetProductCategoryAndLimitedMembersService input) {
        GetProductCategoryAndLimitedMembersService service = new GetProductCategoryAndLimitedMembersService();
        return fromInput(input.inputMap());
    }

    /**
     * Construct a <code>GetProductCategoryAndLimitedMembersService</code> from the output values of the given <code>GetProductCategoryAndLimitedMembersService</code>.
     * @param output a <code>GetProductCategoryAndLimitedMembersService</code>
     */
    public static GetProductCategoryAndLimitedMembersService fromOutput(GetProductCategoryAndLimitedMembersService output) {
        GetProductCategoryAndLimitedMembersService service = new GetProductCategoryAndLimitedMembersService();
        service.putAllOutput(output.outputMap());
        return service;
    }

    /**
     * Construct a <code>GetProductCategoryAndLimitedMembersService</code> from the given input <code>Map</code>.
     * @param mapValue the service input <code>Map</code>
     */
    public static GetProductCategoryAndLimitedMembersService fromInput(Map<String, Object> mapValue) {
        GetProductCategoryAndLimitedMembersService service = new GetProductCategoryAndLimitedMembersService();
        service.putAllInput(mapValue);
        if (mapValue.containsKey("userLogin")) {
            GenericValue userGv = (GenericValue) mapValue.get("userLogin");
            if (userGv != null) {
                service.setUser(new User(userGv, userGv.getDelegator()));
            }
        }
        return service;
    }

    /**
     * Construct a <code>GetProductCategoryAndLimitedMembersService</code> from the given output <code>Map</code>.
     * @param mapValue the service output <code>Map</code>
     */
    public static GetProductCategoryAndLimitedMembersService fromOutput(Map<String, Object> mapValue) {
        GetProductCategoryAndLimitedMembersService service = new GetProductCategoryAndLimitedMembersService();
        service.putAllOutput(mapValue);
        return service;
    }
}
