package org.opentaps.base.services;

/*
 * Copyright (c) Open Source Strategies, Inc.
 *
 * Opentaps is free software: you can redistribute it and/or modify it
 * under the terms of the GNU Affero General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Opentaps is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with Opentaps.  If not, see <http://www.gnu.org/licenses/>.
 */

// DO NOT EDIT THIS FILE!  THIS IS AUTO GENERATED AND WILL GET WRITTEN OVER PERIODICALLY WHEN THE SERVICE MODEL CHANGES
// EXTEND THIS CLASS INSTEAD.

import org.opentaps.foundation.service.ServiceWrapper;

import java.math.BigDecimal;
import java.math.RoundingMode;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import java.util.Set;
import java.util.TimeZone;
import javolution.util.FastMap;
import javolution.util.FastSet;
import org.ofbiz.entity.GenericValue;
import org.opentaps.foundation.infrastructure.User;

/**
 * Run MRP from the web form. We use this as a wrapper to "opentaps.runMrp" which converts boolean from the form drop down..
 * Auto generated base service entity opentaps.runMrpFromForm.
 *
 * Engine: java
 * Location: org.opentaps.purchasing.mrp.OpentapsMrpServices
 * Invoke: runMrpFromForm
 * Defined in: hot-deploy/purchasing/servicedef/services_mrp.xml
 */
public class OpentapsRunMrpFromFormService extends ServiceWrapper {

    /** The service name as used by the service engine. */
    public static final String NAME = "opentaps.runMrpFromForm";
    /** If the service requires authentication. */
    public static final Boolean REQUIRES_AUTHENTICATION = Boolean.TRUE;
    /** If the service requires a new transaction. */
    public static final Boolean REQUIRES_NEW_TRANSACTION = Boolean.FALSE;
    /** If the service uses a transaction. */
    public static final Boolean USES_TRANSACTION = Boolean.FALSE;

    /** The enumeration of input parameters. */
    public static enum In {
        createPendingManufacturingRequirements("createPendingManufacturingRequirements"),
        createTransferRequirements("createTransferRequirements"),
        defaultYearsOffset("defaultYearsOffset"),
        facilityGroupId("facilityGroupId"),
        facilityId("facilityId"),
        finalRequirementRoundingMode("finalRequirementRoundingMode"),
        interimRequirementRoundingMode("interimRequirementRoundingMode"),
        locale("locale"),
        mrpName("mrpName"),
        percentageOfSalesForecast("percentageOfSalesForecast"),
        productId("productId"),
        productStoreGroupId("productStoreGroupId"),
        productStoreId("productStoreId"),
        reInitializeInventoryEvents("reInitializeInventoryEvents"),
        receiptBufferTimeUomId("receiptBufferTimeUomId"),
        receiptEventBuffer("receiptEventBuffer"),
        requirementQuantityDecimals("requirementQuantityDecimals"),
        supplierPartyId("supplierPartyId"),
        timeZone("timeZone"),
        userLogin("userLogin");
        private final String _fieldName;
        private In(String name) { this._fieldName = name; }
        public String getName() { return this._fieldName; }
    }

    public static enum Out {
        errorMessage("errorMessage"),
        errorMessageList("errorMessageList"),
        locale("locale"),
        msgResult("msgResult"),
        responseMessage("responseMessage"),
        successMessage("successMessage"),
        successMessageList("successMessageList"),
        timeZone("timeZone"),
        userLogin("userLogin");
        private final String _fieldName;
        private Out(String name) { this._fieldName = name; }
        public String getName() { return this._fieldName; }
    }

    /**
     * Creates a new <code>OpentapsRunMrpFromFormService</code> instance.
     */
    public OpentapsRunMrpFromFormService() {
        super();
    }

    /**
     * Creates a new <code>OpentapsRunMrpFromFormService</code> instance.
     * @param user an <code>User</code> value
     */
    public OpentapsRunMrpFromFormService(User user) {
        super(user);
    }

    private String inCreatePendingManufacturingRequirements;
    private String inCreateTransferRequirements;
    private Integer inDefaultYearsOffset;
    private String inFacilityGroupId;
    private String inFacilityId;
    private RoundingMode inFinalRequirementRoundingMode;
    private RoundingMode inInterimRequirementRoundingMode;
    private Locale inLocale;
    private String inMrpName;
    private BigDecimal inPercentageOfSalesForecast;
    private String inProductId;
    private String inProductStoreGroupId;
    private String inProductStoreId;
    private Boolean inReInitializeInventoryEvents;
    private String inReceiptBufferTimeUomId;
    private BigDecimal inReceiptEventBuffer;
    private Integer inRequirementQuantityDecimals;
    private String inSupplierPartyId;
    private TimeZone inTimeZone;
    private GenericValue inUserLogin;
    private String outErrorMessage;
    private List outErrorMessageList;
    private Locale outLocale;
    private List outMsgResult;
    private String outResponseMessage;
    private String outSuccessMessage;
    private List outSuccessMessageList;
    private TimeZone outTimeZone;
    private GenericValue outUserLogin;

    private Set<String> inParameters = FastSet.newInstance();
    private Set<String> outParameters = FastSet.newInstance();

    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInCreatePendingManufacturingRequirements() {
        return this.inCreatePendingManufacturingRequirements;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInCreateTransferRequirements() {
        return this.inCreateTransferRequirements;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>Integer</code>
     */
    public Integer getInDefaultYearsOffset() {
        return this.inDefaultYearsOffset;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInFacilityGroupId() {
        return this.inFacilityGroupId;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInFacilityId() {
        return this.inFacilityId;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>RoundingMode</code>
     */
    public RoundingMode getInFinalRequirementRoundingMode() {
        return this.inFinalRequirementRoundingMode;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>RoundingMode</code>
     */
    public RoundingMode getInInterimRequirementRoundingMode() {
        return this.inInterimRequirementRoundingMode;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>Locale</code>
     */
    public Locale getInLocale() {
        return this.inLocale;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInMrpName() {
        return this.inMrpName;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getInPercentageOfSalesForecast() {
        return this.inPercentageOfSalesForecast;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInProductId() {
        return this.inProductId;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInProductStoreGroupId() {
        return this.inProductStoreGroupId;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInProductStoreId() {
        return this.inProductStoreId;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>Boolean</code>
     */
    public Boolean getInReInitializeInventoryEvents() {
        return this.inReInitializeInventoryEvents;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInReceiptBufferTimeUomId() {
        return this.inReceiptBufferTimeUomId;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getInReceiptEventBuffer() {
        return this.inReceiptEventBuffer;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>Integer</code>
     */
    public Integer getInRequirementQuantityDecimals() {
        return this.inRequirementQuantityDecimals;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInSupplierPartyId() {
        return this.inSupplierPartyId;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>TimeZone</code>
     */
    public TimeZone getInTimeZone() {
        return this.inTimeZone;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>GenericValue</code>
     */
    public GenericValue getInUserLogin() {
        return this.inUserLogin;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getOutErrorMessage() {
        return this.outErrorMessage;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>List</code>
     */
    public List getOutErrorMessageList() {
        return this.outErrorMessageList;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>Locale</code>
     */
    public Locale getOutLocale() {
        return this.outLocale;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>List</code>
     */
    public List getOutMsgResult() {
        return this.outMsgResult;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getOutResponseMessage() {
        return this.outResponseMessage;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getOutSuccessMessage() {
        return this.outSuccessMessage;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>List</code>
     */
    public List getOutSuccessMessageList() {
        return this.outSuccessMessageList;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>TimeZone</code>
     */
    public TimeZone getOutTimeZone() {
        return this.outTimeZone;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>GenericValue</code>
     */
    public GenericValue getOutUserLogin() {
        return this.outUserLogin;
    }

    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inCreatePendingManufacturingRequirements the inCreatePendingManufacturingRequirements to set
    */
    public void setInCreatePendingManufacturingRequirements(String inCreatePendingManufacturingRequirements) {
        this.inParameters.add("createPendingManufacturingRequirements");
        this.inCreatePendingManufacturingRequirements = inCreatePendingManufacturingRequirements;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inCreateTransferRequirements the inCreateTransferRequirements to set
    */
    public void setInCreateTransferRequirements(String inCreateTransferRequirements) {
        this.inParameters.add("createTransferRequirements");
        this.inCreateTransferRequirements = inCreateTransferRequirements;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inDefaultYearsOffset the inDefaultYearsOffset to set
    */
    public void setInDefaultYearsOffset(Integer inDefaultYearsOffset) {
        this.inParameters.add("defaultYearsOffset");
        this.inDefaultYearsOffset = inDefaultYearsOffset;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inFacilityGroupId the inFacilityGroupId to set
    */
    public void setInFacilityGroupId(String inFacilityGroupId) {
        this.inParameters.add("facilityGroupId");
        this.inFacilityGroupId = inFacilityGroupId;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inFacilityId the inFacilityId to set
    */
    public void setInFacilityId(String inFacilityId) {
        this.inParameters.add("facilityId");
        this.inFacilityId = inFacilityId;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inFinalRequirementRoundingMode the inFinalRequirementRoundingMode to set
    */
    public void setInFinalRequirementRoundingMode(RoundingMode inFinalRequirementRoundingMode) {
        this.inParameters.add("finalRequirementRoundingMode");
        this.inFinalRequirementRoundingMode = inFinalRequirementRoundingMode;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inInterimRequirementRoundingMode the inInterimRequirementRoundingMode to set
    */
    public void setInInterimRequirementRoundingMode(RoundingMode inInterimRequirementRoundingMode) {
        this.inParameters.add("interimRequirementRoundingMode");
        this.inInterimRequirementRoundingMode = inInterimRequirementRoundingMode;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inLocale the inLocale to set
    */
    public void setInLocale(Locale inLocale) {
        this.inParameters.add("locale");
        this.inLocale = inLocale;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inMrpName the inMrpName to set
    */
    public void setInMrpName(String inMrpName) {
        this.inParameters.add("mrpName");
        this.inMrpName = inMrpName;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inPercentageOfSalesForecast the inPercentageOfSalesForecast to set
    */
    public void setInPercentageOfSalesForecast(BigDecimal inPercentageOfSalesForecast) {
        this.inParameters.add("percentageOfSalesForecast");
        this.inPercentageOfSalesForecast = inPercentageOfSalesForecast;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inProductId the inProductId to set
    */
    public void setInProductId(String inProductId) {
        this.inParameters.add("productId");
        this.inProductId = inProductId;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inProductStoreGroupId the inProductStoreGroupId to set
    */
    public void setInProductStoreGroupId(String inProductStoreGroupId) {
        this.inParameters.add("productStoreGroupId");
        this.inProductStoreGroupId = inProductStoreGroupId;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inProductStoreId the inProductStoreId to set
    */
    public void setInProductStoreId(String inProductStoreId) {
        this.inParameters.add("productStoreId");
        this.inProductStoreId = inProductStoreId;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inReInitializeInventoryEvents the inReInitializeInventoryEvents to set
    */
    public void setInReInitializeInventoryEvents(Boolean inReInitializeInventoryEvents) {
        this.inParameters.add("reInitializeInventoryEvents");
        this.inReInitializeInventoryEvents = inReInitializeInventoryEvents;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inReceiptBufferTimeUomId the inReceiptBufferTimeUomId to set
    */
    public void setInReceiptBufferTimeUomId(String inReceiptBufferTimeUomId) {
        this.inParameters.add("receiptBufferTimeUomId");
        this.inReceiptBufferTimeUomId = inReceiptBufferTimeUomId;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inReceiptEventBuffer the inReceiptEventBuffer to set
    */
    public void setInReceiptEventBuffer(BigDecimal inReceiptEventBuffer) {
        this.inParameters.add("receiptEventBuffer");
        this.inReceiptEventBuffer = inReceiptEventBuffer;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inRequirementQuantityDecimals the inRequirementQuantityDecimals to set
    */
    public void setInRequirementQuantityDecimals(Integer inRequirementQuantityDecimals) {
        this.inParameters.add("requirementQuantityDecimals");
        this.inRequirementQuantityDecimals = inRequirementQuantityDecimals;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inSupplierPartyId the inSupplierPartyId to set
    */
    public void setInSupplierPartyId(String inSupplierPartyId) {
        this.inParameters.add("supplierPartyId");
        this.inSupplierPartyId = inSupplierPartyId;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inTimeZone the inTimeZone to set
    */
    public void setInTimeZone(TimeZone inTimeZone) {
        this.inParameters.add("timeZone");
        this.inTimeZone = inTimeZone;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inUserLogin the inUserLogin to set
    */
    public void setInUserLogin(GenericValue inUserLogin) {
        this.inParameters.add("userLogin");
        this.inUserLogin = inUserLogin;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param outErrorMessage the outErrorMessage to set
    */
    public void setOutErrorMessage(String outErrorMessage) {
        this.outParameters.add("errorMessage");
        this.outErrorMessage = outErrorMessage;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param outErrorMessageList the outErrorMessageList to set
    */
    public void setOutErrorMessageList(List outErrorMessageList) {
        this.outParameters.add("errorMessageList");
        this.outErrorMessageList = outErrorMessageList;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param outLocale the outLocale to set
    */
    public void setOutLocale(Locale outLocale) {
        this.outParameters.add("locale");
        this.outLocale = outLocale;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param outMsgResult the outMsgResult to set
    */
    public void setOutMsgResult(List outMsgResult) {
        this.outParameters.add("msgResult");
        this.outMsgResult = outMsgResult;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param outResponseMessage the outResponseMessage to set
    */
    public void setOutResponseMessage(String outResponseMessage) {
        this.outParameters.add("responseMessage");
        this.outResponseMessage = outResponseMessage;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param outSuccessMessage the outSuccessMessage to set
    */
    public void setOutSuccessMessage(String outSuccessMessage) {
        this.outParameters.add("successMessage");
        this.outSuccessMessage = outSuccessMessage;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param outSuccessMessageList the outSuccessMessageList to set
    */
    public void setOutSuccessMessageList(List outSuccessMessageList) {
        this.outParameters.add("successMessageList");
        this.outSuccessMessageList = outSuccessMessageList;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param outTimeZone the outTimeZone to set
    */
    public void setOutTimeZone(TimeZone outTimeZone) {
        this.outParameters.add("timeZone");
        this.outTimeZone = outTimeZone;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param outUserLogin the outUserLogin to set
    */
    public void setOutUserLogin(GenericValue outUserLogin) {
        this.outParameters.add("userLogin");
        this.outUserLogin = outUserLogin;
    }

    /** {@inheritDoc} */
    public String name() {
        return NAME;
    }

    /** {@inheritDoc} */
    public Boolean requiresAuthentication() {
        return REQUIRES_AUTHENTICATION;
    }

    /** {@inheritDoc} */
    public Boolean requiresNewTransaction() {
        return REQUIRES_NEW_TRANSACTION;
    }

    /** {@inheritDoc} */
    public Boolean usesTransaction() {
        return USES_TRANSACTION;
    }

    /** {@inheritDoc} */
    public Map<String, Object> inputMap() {
        Map<String, Object> mapValue = new FastMap<String, Object>();
        if (inParameters.contains("createPendingManufacturingRequirements")) mapValue.put("createPendingManufacturingRequirements", getInCreatePendingManufacturingRequirements());
        if (inParameters.contains("createTransferRequirements")) mapValue.put("createTransferRequirements", getInCreateTransferRequirements());
        if (inParameters.contains("defaultYearsOffset")) mapValue.put("defaultYearsOffset", getInDefaultYearsOffset());
        if (inParameters.contains("facilityGroupId")) mapValue.put("facilityGroupId", getInFacilityGroupId());
        if (inParameters.contains("facilityId")) mapValue.put("facilityId", getInFacilityId());
        if (inParameters.contains("finalRequirementRoundingMode")) mapValue.put("finalRequirementRoundingMode", getInFinalRequirementRoundingMode());
        if (inParameters.contains("interimRequirementRoundingMode")) mapValue.put("interimRequirementRoundingMode", getInInterimRequirementRoundingMode());
        if (inParameters.contains("locale")) mapValue.put("locale", getInLocale());
        if (inParameters.contains("mrpName")) mapValue.put("mrpName", getInMrpName());
        if (inParameters.contains("percentageOfSalesForecast")) mapValue.put("percentageOfSalesForecast", getInPercentageOfSalesForecast());
        if (inParameters.contains("productId")) mapValue.put("productId", getInProductId());
        if (inParameters.contains("productStoreGroupId")) mapValue.put("productStoreGroupId", getInProductStoreGroupId());
        if (inParameters.contains("productStoreId")) mapValue.put("productStoreId", getInProductStoreId());
        if (inParameters.contains("reInitializeInventoryEvents")) mapValue.put("reInitializeInventoryEvents", getInReInitializeInventoryEvents());
        if (inParameters.contains("receiptBufferTimeUomId")) mapValue.put("receiptBufferTimeUomId", getInReceiptBufferTimeUomId());
        if (inParameters.contains("receiptEventBuffer")) mapValue.put("receiptEventBuffer", getInReceiptEventBuffer());
        if (inParameters.contains("requirementQuantityDecimals")) mapValue.put("requirementQuantityDecimals", getInRequirementQuantityDecimals());
        if (inParameters.contains("supplierPartyId")) mapValue.put("supplierPartyId", getInSupplierPartyId());
        if (inParameters.contains("timeZone")) mapValue.put("timeZone", getInTimeZone());
        if (inParameters.contains("userLogin")) mapValue.put("userLogin", getInUserLogin());
        // allow the User set to override the userLogin
        if (getUser() != null) mapValue.put("userLogin", getUser().getOfbizUserLogin());
        return mapValue;
    }

    /** {@inheritDoc} */
    public Map<String, Object> outputMap() {
        Map<String, Object> mapValue = new FastMap<String, Object>();
        if (outParameters.contains("errorMessage")) mapValue.put("errorMessage", getOutErrorMessage());
        if (outParameters.contains("errorMessageList")) mapValue.put("errorMessageList", getOutErrorMessageList());
        if (outParameters.contains("locale")) mapValue.put("locale", getOutLocale());
        if (outParameters.contains("msgResult")) mapValue.put("msgResult", getOutMsgResult());
        if (outParameters.contains("responseMessage")) mapValue.put("responseMessage", getOutResponseMessage());
        if (outParameters.contains("successMessage")) mapValue.put("successMessage", getOutSuccessMessage());
        if (outParameters.contains("successMessageList")) mapValue.put("successMessageList", getOutSuccessMessageList());
        if (outParameters.contains("timeZone")) mapValue.put("timeZone", getOutTimeZone());
        if (outParameters.contains("userLogin")) mapValue.put("userLogin", getOutUserLogin());
        return mapValue;
    }

    /** {@inheritDoc} */
    public void putAllInput(Map<String, Object> mapValue) {
        if (mapValue.containsKey("createPendingManufacturingRequirements")) setInCreatePendingManufacturingRequirements((String) mapValue.get("createPendingManufacturingRequirements"));
        if (mapValue.containsKey("createTransferRequirements")) setInCreateTransferRequirements((String) mapValue.get("createTransferRequirements"));
        if (mapValue.containsKey("defaultYearsOffset")) setInDefaultYearsOffset((Integer) mapValue.get("defaultYearsOffset"));
        if (mapValue.containsKey("facilityGroupId")) setInFacilityGroupId((String) mapValue.get("facilityGroupId"));
        if (mapValue.containsKey("facilityId")) setInFacilityId((String) mapValue.get("facilityId"));
        if (mapValue.containsKey("finalRequirementRoundingMode")) setInFinalRequirementRoundingMode((RoundingMode) mapValue.get("finalRequirementRoundingMode"));
        if (mapValue.containsKey("interimRequirementRoundingMode")) setInInterimRequirementRoundingMode((RoundingMode) mapValue.get("interimRequirementRoundingMode"));
        if (mapValue.containsKey("locale")) setInLocale((Locale) mapValue.get("locale"));
        if (mapValue.containsKey("mrpName")) setInMrpName((String) mapValue.get("mrpName"));
        if (mapValue.containsKey("percentageOfSalesForecast")) setInPercentageOfSalesForecast((BigDecimal) mapValue.get("percentageOfSalesForecast"));
        if (mapValue.containsKey("productId")) setInProductId((String) mapValue.get("productId"));
        if (mapValue.containsKey("productStoreGroupId")) setInProductStoreGroupId((String) mapValue.get("productStoreGroupId"));
        if (mapValue.containsKey("productStoreId")) setInProductStoreId((String) mapValue.get("productStoreId"));
        if (mapValue.containsKey("reInitializeInventoryEvents")) setInReInitializeInventoryEvents((Boolean) mapValue.get("reInitializeInventoryEvents"));
        if (mapValue.containsKey("receiptBufferTimeUomId")) setInReceiptBufferTimeUomId((String) mapValue.get("receiptBufferTimeUomId"));
        if (mapValue.containsKey("receiptEventBuffer")) setInReceiptEventBuffer((BigDecimal) mapValue.get("receiptEventBuffer"));
        if (mapValue.containsKey("requirementQuantityDecimals")) setInRequirementQuantityDecimals((Integer) mapValue.get("requirementQuantityDecimals"));
        if (mapValue.containsKey("supplierPartyId")) setInSupplierPartyId((String) mapValue.get("supplierPartyId"));
        if (mapValue.containsKey("timeZone")) setInTimeZone((TimeZone) mapValue.get("timeZone"));
        if (mapValue.containsKey("userLogin")) setInUserLogin((GenericValue) mapValue.get("userLogin"));
    }

    /** {@inheritDoc} */
    public void putAllOutput(Map<String, Object> mapValue) {
        if (mapValue.containsKey("errorMessage")) setOutErrorMessage((String) mapValue.get("errorMessage"));
        if (mapValue.containsKey("errorMessageList")) setOutErrorMessageList((List) mapValue.get("errorMessageList"));
        if (mapValue.containsKey("locale")) setOutLocale((Locale) mapValue.get("locale"));
        if (mapValue.containsKey("msgResult")) setOutMsgResult((List) mapValue.get("msgResult"));
        if (mapValue.containsKey("responseMessage")) setOutResponseMessage((String) mapValue.get("responseMessage"));
        if (mapValue.containsKey("successMessage")) setOutSuccessMessage((String) mapValue.get("successMessage"));
        if (mapValue.containsKey("successMessageList")) setOutSuccessMessageList((List) mapValue.get("successMessageList"));
        if (mapValue.containsKey("timeZone")) setOutTimeZone((TimeZone) mapValue.get("timeZone"));
        if (mapValue.containsKey("userLogin")) setOutUserLogin((GenericValue) mapValue.get("userLogin"));
    }

    /**
     * Construct a <code>OpentapsRunMrpFromFormService</code> from the input values of the given <code>OpentapsRunMrpFromFormService</code>.
     * @param input a <code>OpentapsRunMrpFromFormService</code>
     */
    public static OpentapsRunMrpFromFormService fromInput(OpentapsRunMrpFromFormService input) {
        OpentapsRunMrpFromFormService service = new OpentapsRunMrpFromFormService();
        return fromInput(input.inputMap());
    }

    /**
     * Construct a <code>OpentapsRunMrpFromFormService</code> from the output values of the given <code>OpentapsRunMrpFromFormService</code>.
     * @param output a <code>OpentapsRunMrpFromFormService</code>
     */
    public static OpentapsRunMrpFromFormService fromOutput(OpentapsRunMrpFromFormService output) {
        OpentapsRunMrpFromFormService service = new OpentapsRunMrpFromFormService();
        service.putAllOutput(output.outputMap());
        return service;
    }

    /**
     * Construct a <code>OpentapsRunMrpFromFormService</code> from the given input <code>Map</code>.
     * @param mapValue the service input <code>Map</code>
     */
    public static OpentapsRunMrpFromFormService fromInput(Map<String, Object> mapValue) {
        OpentapsRunMrpFromFormService service = new OpentapsRunMrpFromFormService();
        service.putAllInput(mapValue);
        if (mapValue.containsKey("userLogin")) {
            GenericValue userGv = (GenericValue) mapValue.get("userLogin");
            if (userGv != null) {
                service.setUser(new User(userGv, userGv.getDelegator()));
            }
        }
        return service;
    }

    /**
     * Construct a <code>OpentapsRunMrpFromFormService</code> from the given output <code>Map</code>.
     * @param mapValue the service output <code>Map</code>
     */
    public static OpentapsRunMrpFromFormService fromOutput(Map<String, Object> mapValue) {
        OpentapsRunMrpFromFormService service = new OpentapsRunMrpFromFormService();
        service.putAllOutput(mapValue);
        return service;
    }
}
