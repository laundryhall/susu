package org.opentaps.base.services;

/*
 * Copyright (c) Open Source Strategies, Inc.
 *
 * Opentaps is free software: you can redistribute it and/or modify it
 * under the terms of the GNU Affero General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Opentaps is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with Opentaps.  If not, see <http://www.gnu.org/licenses/>.
 */

// DO NOT EDIT THIS FILE!  THIS IS AUTO GENERATED AND WILL GET WRITTEN OVER PERIODICALLY WHEN THE SERVICE MODEL CHANGES
// EXTEND THIS CLASS INSTEAD.

import org.opentaps.foundation.service.ServiceWrapper;

import java.util.List;
import java.util.Locale;
import java.util.Map;
import java.util.Set;
import java.util.TimeZone;
import javolution.util.FastMap;
import javolution.util.FastSet;
import org.ofbiz.entity.GenericValue;
import org.opentaps.foundation.infrastructure.User;

/**
 * Update Payment Gateway Configuration Payflow Pro.
 * Auto generated base service entity updateGatewayConfigurationPayflowPro.
 *
 * Engine: simple
 * Location: org/ofbiz/accounting/payment/PaymentGatewayConfigServices.xml
 * Invoke: updateGatewayConfigurationPayflowPro
 * Defined in: applications/accounting/servicedef/services_paymentgateway.xml
 */
public class UpdateGatewayConfigurationPayflowProService extends ServiceWrapper {

    /** The service name as used by the service engine. */
    public static final String NAME = "updateGatewayConfigurationPayflowPro";
    /** If the service requires authentication. */
    public static final Boolean REQUIRES_AUTHENTICATION = Boolean.FALSE;
    /** If the service requires a new transaction. */
    public static final Boolean REQUIRES_NEW_TRANSACTION = Boolean.FALSE;
    /** If the service uses a transaction. */
    public static final Boolean USES_TRANSACTION = Boolean.TRUE;

    /** The enumeration of input parameters. */
    public static enum In {
        certsPath("certsPath"),
        checkAvs("checkAvs"),
        checkCvv2("checkCvv2"),
        enableTransmit("enableTransmit"),
        hostAddress("hostAddress"),
        hostPort("hostPort"),
        locale("locale"),
        logFileName("logFileName"),
        loggingLevel("loggingLevel"),
        maxLogFileSize("maxLogFileSize"),
        partner("partner"),
        paymentGatewayConfigId("paymentGatewayConfigId"),
        preAuth("preAuth"),
        proxyAddress("proxyAddress"),
        proxyLogon("proxyLogon"),
        proxyPassword("proxyPassword"),
        proxyPort("proxyPort"),
        pwd("pwd"),
        stackTraceOn("stackTraceOn"),
        timeZone("timeZone"),
        timeout("timeout"),
        userId("userId"),
        userLogin("userLogin"),
        vendor("vendor");
        private final String _fieldName;
        private In(String name) { this._fieldName = name; }
        public String getName() { return this._fieldName; }
    }

    public static enum Out {
        errorMessage("errorMessage"),
        errorMessageList("errorMessageList"),
        locale("locale"),
        responseMessage("responseMessage"),
        successMessage("successMessage"),
        successMessageList("successMessageList"),
        timeZone("timeZone"),
        userLogin("userLogin");
        private final String _fieldName;
        private Out(String name) { this._fieldName = name; }
        public String getName() { return this._fieldName; }
    }

    /**
     * Creates a new <code>UpdateGatewayConfigurationPayflowProService</code> instance.
     */
    public UpdateGatewayConfigurationPayflowProService() {
        super();
    }


    private String inCertsPath;
    private String inCheckAvs;
    private String inCheckCvv2;
    private String inEnableTransmit;
    private String inHostAddress;
    private Long inHostPort;
    private Locale inLocale;
    private String inLogFileName;
    private Long inLoggingLevel;
    private Long inMaxLogFileSize;
    private String inPartner;
    private String inPaymentGatewayConfigId;
    private String inPreAuth;
    private String inProxyAddress;
    private String inProxyLogon;
    private String inProxyPassword;
    private Long inProxyPort;
    private String inPwd;
    private String inStackTraceOn;
    private TimeZone inTimeZone;
    private Long inTimeout;
    private String inUserId;
    private GenericValue inUserLogin;
    private String inVendor;
    private String outErrorMessage;
    private List outErrorMessageList;
    private Locale outLocale;
    private String outResponseMessage;
    private String outSuccessMessage;
    private List outSuccessMessageList;
    private TimeZone outTimeZone;
    private GenericValue outUserLogin;

    private Set<String> inParameters = FastSet.newInstance();
    private Set<String> outParameters = FastSet.newInstance();

    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInCertsPath() {
        return this.inCertsPath;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInCheckAvs() {
        return this.inCheckAvs;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInCheckCvv2() {
        return this.inCheckCvv2;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInEnableTransmit() {
        return this.inEnableTransmit;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInHostAddress() {
        return this.inHostAddress;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>Long</code>
     */
    public Long getInHostPort() {
        return this.inHostPort;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>Locale</code>
     */
    public Locale getInLocale() {
        return this.inLocale;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInLogFileName() {
        return this.inLogFileName;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>Long</code>
     */
    public Long getInLoggingLevel() {
        return this.inLoggingLevel;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>Long</code>
     */
    public Long getInMaxLogFileSize() {
        return this.inMaxLogFileSize;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInPartner() {
        return this.inPartner;
    }
    /**
     * Auto generated value accessor.
     * This parameter is required.
     * @return <code>String</code>
     */
    public String getInPaymentGatewayConfigId() {
        return this.inPaymentGatewayConfigId;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInPreAuth() {
        return this.inPreAuth;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInProxyAddress() {
        return this.inProxyAddress;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInProxyLogon() {
        return this.inProxyLogon;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInProxyPassword() {
        return this.inProxyPassword;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>Long</code>
     */
    public Long getInProxyPort() {
        return this.inProxyPort;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInPwd() {
        return this.inPwd;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInStackTraceOn() {
        return this.inStackTraceOn;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>TimeZone</code>
     */
    public TimeZone getInTimeZone() {
        return this.inTimeZone;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>Long</code>
     */
    public Long getInTimeout() {
        return this.inTimeout;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInUserId() {
        return this.inUserId;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>GenericValue</code>
     */
    public GenericValue getInUserLogin() {
        return this.inUserLogin;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getInVendor() {
        return this.inVendor;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getOutErrorMessage() {
        return this.outErrorMessage;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>List</code>
     */
    public List getOutErrorMessageList() {
        return this.outErrorMessageList;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>Locale</code>
     */
    public Locale getOutLocale() {
        return this.outLocale;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getOutResponseMessage() {
        return this.outResponseMessage;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>String</code>
     */
    public String getOutSuccessMessage() {
        return this.outSuccessMessage;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>List</code>
     */
    public List getOutSuccessMessageList() {
        return this.outSuccessMessageList;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>TimeZone</code>
     */
    public TimeZone getOutTimeZone() {
        return this.outTimeZone;
    }
    /**
     * Auto generated value accessor.
     * This parameter is optional.
     * @return <code>GenericValue</code>
     */
    public GenericValue getOutUserLogin() {
        return this.outUserLogin;
    }

    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inCertsPath the inCertsPath to set
    */
    public void setInCertsPath(String inCertsPath) {
        this.inParameters.add("certsPath");
        this.inCertsPath = inCertsPath;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inCheckAvs the inCheckAvs to set
    */
    public void setInCheckAvs(String inCheckAvs) {
        this.inParameters.add("checkAvs");
        this.inCheckAvs = inCheckAvs;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inCheckCvv2 the inCheckCvv2 to set
    */
    public void setInCheckCvv2(String inCheckCvv2) {
        this.inParameters.add("checkCvv2");
        this.inCheckCvv2 = inCheckCvv2;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inEnableTransmit the inEnableTransmit to set
    */
    public void setInEnableTransmit(String inEnableTransmit) {
        this.inParameters.add("enableTransmit");
        this.inEnableTransmit = inEnableTransmit;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inHostAddress the inHostAddress to set
    */
    public void setInHostAddress(String inHostAddress) {
        this.inParameters.add("hostAddress");
        this.inHostAddress = inHostAddress;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inHostPort the inHostPort to set
    */
    public void setInHostPort(Long inHostPort) {
        this.inParameters.add("hostPort");
        this.inHostPort = inHostPort;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inLocale the inLocale to set
    */
    public void setInLocale(Locale inLocale) {
        this.inParameters.add("locale");
        this.inLocale = inLocale;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inLogFileName the inLogFileName to set
    */
    public void setInLogFileName(String inLogFileName) {
        this.inParameters.add("logFileName");
        this.inLogFileName = inLogFileName;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inLoggingLevel the inLoggingLevel to set
    */
    public void setInLoggingLevel(Long inLoggingLevel) {
        this.inParameters.add("loggingLevel");
        this.inLoggingLevel = inLoggingLevel;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inMaxLogFileSize the inMaxLogFileSize to set
    */
    public void setInMaxLogFileSize(Long inMaxLogFileSize) {
        this.inParameters.add("maxLogFileSize");
        this.inMaxLogFileSize = inMaxLogFileSize;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inPartner the inPartner to set
    */
    public void setInPartner(String inPartner) {
        this.inParameters.add("partner");
        this.inPartner = inPartner;
    }
    /**
     * Auto generated value setter.
     * This parameter is required.
     * @param inPaymentGatewayConfigId the inPaymentGatewayConfigId to set
    */
    public void setInPaymentGatewayConfigId(String inPaymentGatewayConfigId) {
        this.inParameters.add("paymentGatewayConfigId");
        this.inPaymentGatewayConfigId = inPaymentGatewayConfigId;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inPreAuth the inPreAuth to set
    */
    public void setInPreAuth(String inPreAuth) {
        this.inParameters.add("preAuth");
        this.inPreAuth = inPreAuth;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inProxyAddress the inProxyAddress to set
    */
    public void setInProxyAddress(String inProxyAddress) {
        this.inParameters.add("proxyAddress");
        this.inProxyAddress = inProxyAddress;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inProxyLogon the inProxyLogon to set
    */
    public void setInProxyLogon(String inProxyLogon) {
        this.inParameters.add("proxyLogon");
        this.inProxyLogon = inProxyLogon;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inProxyPassword the inProxyPassword to set
    */
    public void setInProxyPassword(String inProxyPassword) {
        this.inParameters.add("proxyPassword");
        this.inProxyPassword = inProxyPassword;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inProxyPort the inProxyPort to set
    */
    public void setInProxyPort(Long inProxyPort) {
        this.inParameters.add("proxyPort");
        this.inProxyPort = inProxyPort;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inPwd the inPwd to set
    */
    public void setInPwd(String inPwd) {
        this.inParameters.add("pwd");
        this.inPwd = inPwd;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inStackTraceOn the inStackTraceOn to set
    */
    public void setInStackTraceOn(String inStackTraceOn) {
        this.inParameters.add("stackTraceOn");
        this.inStackTraceOn = inStackTraceOn;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inTimeZone the inTimeZone to set
    */
    public void setInTimeZone(TimeZone inTimeZone) {
        this.inParameters.add("timeZone");
        this.inTimeZone = inTimeZone;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inTimeout the inTimeout to set
    */
    public void setInTimeout(Long inTimeout) {
        this.inParameters.add("timeout");
        this.inTimeout = inTimeout;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inUserId the inUserId to set
    */
    public void setInUserId(String inUserId) {
        this.inParameters.add("userId");
        this.inUserId = inUserId;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inUserLogin the inUserLogin to set
    */
    public void setInUserLogin(GenericValue inUserLogin) {
        this.inParameters.add("userLogin");
        this.inUserLogin = inUserLogin;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param inVendor the inVendor to set
    */
    public void setInVendor(String inVendor) {
        this.inParameters.add("vendor");
        this.inVendor = inVendor;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param outErrorMessage the outErrorMessage to set
    */
    public void setOutErrorMessage(String outErrorMessage) {
        this.outParameters.add("errorMessage");
        this.outErrorMessage = outErrorMessage;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param outErrorMessageList the outErrorMessageList to set
    */
    public void setOutErrorMessageList(List outErrorMessageList) {
        this.outParameters.add("errorMessageList");
        this.outErrorMessageList = outErrorMessageList;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param outLocale the outLocale to set
    */
    public void setOutLocale(Locale outLocale) {
        this.outParameters.add("locale");
        this.outLocale = outLocale;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param outResponseMessage the outResponseMessage to set
    */
    public void setOutResponseMessage(String outResponseMessage) {
        this.outParameters.add("responseMessage");
        this.outResponseMessage = outResponseMessage;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param outSuccessMessage the outSuccessMessage to set
    */
    public void setOutSuccessMessage(String outSuccessMessage) {
        this.outParameters.add("successMessage");
        this.outSuccessMessage = outSuccessMessage;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param outSuccessMessageList the outSuccessMessageList to set
    */
    public void setOutSuccessMessageList(List outSuccessMessageList) {
        this.outParameters.add("successMessageList");
        this.outSuccessMessageList = outSuccessMessageList;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param outTimeZone the outTimeZone to set
    */
    public void setOutTimeZone(TimeZone outTimeZone) {
        this.outParameters.add("timeZone");
        this.outTimeZone = outTimeZone;
    }
    /**
     * Auto generated value setter.
     * This parameter is optional.
     * @param outUserLogin the outUserLogin to set
    */
    public void setOutUserLogin(GenericValue outUserLogin) {
        this.outParameters.add("userLogin");
        this.outUserLogin = outUserLogin;
    }

    /** {@inheritDoc} */
    public String name() {
        return NAME;
    }

    /** {@inheritDoc} */
    public Boolean requiresAuthentication() {
        return REQUIRES_AUTHENTICATION;
    }

    /** {@inheritDoc} */
    public Boolean requiresNewTransaction() {
        return REQUIRES_NEW_TRANSACTION;
    }

    /** {@inheritDoc} */
    public Boolean usesTransaction() {
        return USES_TRANSACTION;
    }

    /** {@inheritDoc} */
    public Map<String, Object> inputMap() {
        Map<String, Object> mapValue = new FastMap<String, Object>();
        if (inParameters.contains("certsPath")) mapValue.put("certsPath", getInCertsPath());
        if (inParameters.contains("checkAvs")) mapValue.put("checkAvs", getInCheckAvs());
        if (inParameters.contains("checkCvv2")) mapValue.put("checkCvv2", getInCheckCvv2());
        if (inParameters.contains("enableTransmit")) mapValue.put("enableTransmit", getInEnableTransmit());
        if (inParameters.contains("hostAddress")) mapValue.put("hostAddress", getInHostAddress());
        if (inParameters.contains("hostPort")) mapValue.put("hostPort", getInHostPort());
        if (inParameters.contains("locale")) mapValue.put("locale", getInLocale());
        if (inParameters.contains("logFileName")) mapValue.put("logFileName", getInLogFileName());
        if (inParameters.contains("loggingLevel")) mapValue.put("loggingLevel", getInLoggingLevel());
        if (inParameters.contains("maxLogFileSize")) mapValue.put("maxLogFileSize", getInMaxLogFileSize());
        if (inParameters.contains("partner")) mapValue.put("partner", getInPartner());
        if (inParameters.contains("paymentGatewayConfigId")) mapValue.put("paymentGatewayConfigId", getInPaymentGatewayConfigId());
        if (inParameters.contains("preAuth")) mapValue.put("preAuth", getInPreAuth());
        if (inParameters.contains("proxyAddress")) mapValue.put("proxyAddress", getInProxyAddress());
        if (inParameters.contains("proxyLogon")) mapValue.put("proxyLogon", getInProxyLogon());
        if (inParameters.contains("proxyPassword")) mapValue.put("proxyPassword", getInProxyPassword());
        if (inParameters.contains("proxyPort")) mapValue.put("proxyPort", getInProxyPort());
        if (inParameters.contains("pwd")) mapValue.put("pwd", getInPwd());
        if (inParameters.contains("stackTraceOn")) mapValue.put("stackTraceOn", getInStackTraceOn());
        if (inParameters.contains("timeZone")) mapValue.put("timeZone", getInTimeZone());
        if (inParameters.contains("timeout")) mapValue.put("timeout", getInTimeout());
        if (inParameters.contains("userId")) mapValue.put("userId", getInUserId());
        if (inParameters.contains("userLogin")) mapValue.put("userLogin", getInUserLogin());
        if (inParameters.contains("vendor")) mapValue.put("vendor", getInVendor());
        // allow the User set to override the userLogin
        if (getUser() != null) mapValue.put("userLogin", getUser().getOfbizUserLogin());
        return mapValue;
    }

    /** {@inheritDoc} */
    public Map<String, Object> outputMap() {
        Map<String, Object> mapValue = new FastMap<String, Object>();
        if (outParameters.contains("errorMessage")) mapValue.put("errorMessage", getOutErrorMessage());
        if (outParameters.contains("errorMessageList")) mapValue.put("errorMessageList", getOutErrorMessageList());
        if (outParameters.contains("locale")) mapValue.put("locale", getOutLocale());
        if (outParameters.contains("responseMessage")) mapValue.put("responseMessage", getOutResponseMessage());
        if (outParameters.contains("successMessage")) mapValue.put("successMessage", getOutSuccessMessage());
        if (outParameters.contains("successMessageList")) mapValue.put("successMessageList", getOutSuccessMessageList());
        if (outParameters.contains("timeZone")) mapValue.put("timeZone", getOutTimeZone());
        if (outParameters.contains("userLogin")) mapValue.put("userLogin", getOutUserLogin());
        return mapValue;
    }

    /** {@inheritDoc} */
    public void putAllInput(Map<String, Object> mapValue) {
        if (mapValue.containsKey("certsPath")) setInCertsPath((String) mapValue.get("certsPath"));
        if (mapValue.containsKey("checkAvs")) setInCheckAvs((String) mapValue.get("checkAvs"));
        if (mapValue.containsKey("checkCvv2")) setInCheckCvv2((String) mapValue.get("checkCvv2"));
        if (mapValue.containsKey("enableTransmit")) setInEnableTransmit((String) mapValue.get("enableTransmit"));
        if (mapValue.containsKey("hostAddress")) setInHostAddress((String) mapValue.get("hostAddress"));
        if (mapValue.containsKey("hostPort")) setInHostPort((Long) mapValue.get("hostPort"));
        if (mapValue.containsKey("locale")) setInLocale((Locale) mapValue.get("locale"));
        if (mapValue.containsKey("logFileName")) setInLogFileName((String) mapValue.get("logFileName"));
        if (mapValue.containsKey("loggingLevel")) setInLoggingLevel((Long) mapValue.get("loggingLevel"));
        if (mapValue.containsKey("maxLogFileSize")) setInMaxLogFileSize((Long) mapValue.get("maxLogFileSize"));
        if (mapValue.containsKey("partner")) setInPartner((String) mapValue.get("partner"));
        if (mapValue.containsKey("paymentGatewayConfigId")) setInPaymentGatewayConfigId((String) mapValue.get("paymentGatewayConfigId"));
        if (mapValue.containsKey("preAuth")) setInPreAuth((String) mapValue.get("preAuth"));
        if (mapValue.containsKey("proxyAddress")) setInProxyAddress((String) mapValue.get("proxyAddress"));
        if (mapValue.containsKey("proxyLogon")) setInProxyLogon((String) mapValue.get("proxyLogon"));
        if (mapValue.containsKey("proxyPassword")) setInProxyPassword((String) mapValue.get("proxyPassword"));
        if (mapValue.containsKey("proxyPort")) setInProxyPort((Long) mapValue.get("proxyPort"));
        if (mapValue.containsKey("pwd")) setInPwd((String) mapValue.get("pwd"));
        if (mapValue.containsKey("stackTraceOn")) setInStackTraceOn((String) mapValue.get("stackTraceOn"));
        if (mapValue.containsKey("timeZone")) setInTimeZone((TimeZone) mapValue.get("timeZone"));
        if (mapValue.containsKey("timeout")) setInTimeout((Long) mapValue.get("timeout"));
        if (mapValue.containsKey("userId")) setInUserId((String) mapValue.get("userId"));
        if (mapValue.containsKey("userLogin")) setInUserLogin((GenericValue) mapValue.get("userLogin"));
        if (mapValue.containsKey("vendor")) setInVendor((String) mapValue.get("vendor"));
    }

    /** {@inheritDoc} */
    public void putAllOutput(Map<String, Object> mapValue) {
        if (mapValue.containsKey("errorMessage")) setOutErrorMessage((String) mapValue.get("errorMessage"));
        if (mapValue.containsKey("errorMessageList")) setOutErrorMessageList((List) mapValue.get("errorMessageList"));
        if (mapValue.containsKey("locale")) setOutLocale((Locale) mapValue.get("locale"));
        if (mapValue.containsKey("responseMessage")) setOutResponseMessage((String) mapValue.get("responseMessage"));
        if (mapValue.containsKey("successMessage")) setOutSuccessMessage((String) mapValue.get("successMessage"));
        if (mapValue.containsKey("successMessageList")) setOutSuccessMessageList((List) mapValue.get("successMessageList"));
        if (mapValue.containsKey("timeZone")) setOutTimeZone((TimeZone) mapValue.get("timeZone"));
        if (mapValue.containsKey("userLogin")) setOutUserLogin((GenericValue) mapValue.get("userLogin"));
    }

    /**
     * Construct a <code>UpdateGatewayConfigurationPayflowProService</code> from the input values of the given <code>UpdateGatewayConfigurationPayflowProService</code>.
     * @param input a <code>UpdateGatewayConfigurationPayflowProService</code>
     */
    public static UpdateGatewayConfigurationPayflowProService fromInput(UpdateGatewayConfigurationPayflowProService input) {
        UpdateGatewayConfigurationPayflowProService service = new UpdateGatewayConfigurationPayflowProService();
        return fromInput(input.inputMap());
    }

    /**
     * Construct a <code>UpdateGatewayConfigurationPayflowProService</code> from the output values of the given <code>UpdateGatewayConfigurationPayflowProService</code>.
     * @param output a <code>UpdateGatewayConfigurationPayflowProService</code>
     */
    public static UpdateGatewayConfigurationPayflowProService fromOutput(UpdateGatewayConfigurationPayflowProService output) {
        UpdateGatewayConfigurationPayflowProService service = new UpdateGatewayConfigurationPayflowProService();
        service.putAllOutput(output.outputMap());
        return service;
    }

    /**
     * Construct a <code>UpdateGatewayConfigurationPayflowProService</code> from the given input <code>Map</code>.
     * @param mapValue the service input <code>Map</code>
     */
    public static UpdateGatewayConfigurationPayflowProService fromInput(Map<String, Object> mapValue) {
        UpdateGatewayConfigurationPayflowProService service = new UpdateGatewayConfigurationPayflowProService();
        service.putAllInput(mapValue);
        if (mapValue.containsKey("userLogin")) {
            GenericValue userGv = (GenericValue) mapValue.get("userLogin");
            if (userGv != null) {
                service.setUser(new User(userGv, userGv.getDelegator()));
            }
        }
        return service;
    }

    /**
     * Construct a <code>UpdateGatewayConfigurationPayflowProService</code> from the given output <code>Map</code>.
     * @param mapValue the service output <code>Map</code>
     */
    public static UpdateGatewayConfigurationPayflowProService fromOutput(Map<String, Object> mapValue) {
        UpdateGatewayConfigurationPayflowProService service = new UpdateGatewayConfigurationPayflowProService();
        service.putAllOutput(mapValue);
        return service;
    }
}
