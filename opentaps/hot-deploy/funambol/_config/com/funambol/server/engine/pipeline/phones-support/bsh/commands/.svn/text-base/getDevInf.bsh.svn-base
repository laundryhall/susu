/**
 * Copyright (C) 2006-2007 Funambol
 *
 * Opentaps is free software: you can redistribute it and/or modify it
 * under the terms of the GNU Affero General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Opentaps is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with Opentaps.  If not, see <http://www.gnu.org/licenses/>.
 */

/**
 * This command retrieves and returns the Sync4jDevice corresponding to the
 * device which is synchronizing. It returns null if the device could not be
 * found.
 */

import com.funambol.framework.core.*;
import com.funambol.framework.server.Capabilities;
import com.funambol.framework.logging.FunambolLogger;
import com.funambol.framework.logging.FunambolLoggerFactory;
import com.funambol.framework.server.Sync4jDevice;
import com.funambol.framework.server.inventory.*;

import com.funambol.server.config.*;

DevInf getDevInf(String deviceId) {

    if (log.isTraceEnabled()) {
        log.trace("Get DevInf of: " + deviceId);
    }

    if (deviceId == null) {
        return null;
    }

    Sync4jDevice device = null;
    DevInf       devInf = null;

    try {
        DeviceInventory deviceInventory = Configuration.getConfiguration().getDeviceInventory();
        device = new Sync4jDevice(deviceId);
        deviceInventory.getDevice(device, true);

        Capabilities cap = device.getCapabilities();
        if (cap != null) {
            devInf = cap.getDevInf();
            return devInf;
        }

    } catch (Exception e) {
        String msg = "Error getting DevInf (" + e.toString() + ")";
        log.error(msg, e);
    }

   return null;
}
